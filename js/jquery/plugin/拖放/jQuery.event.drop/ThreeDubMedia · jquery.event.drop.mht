Content-Type: multipart/related; start=<op.mhtml.1348109014068.ce202f2f305bfa69@192.168.2.250>; boundary=----------xTmqCi4MdczBqywUSIvdms
Content-Location: http://threedubmedia.com/code/event/drop
Subject: =?utf-8?Q?ThreeDubMedia=20=C2=B7=20jquery.event.drop?=
MIME-Version: 1.0

------------xTmqCi4MdczBqywUSIvdms
Content-Disposition: inline; filename=drop.htm
Content-Type: text/html; charset=utf-8; name=drop.htm
Content-ID: <op.mhtml.1348109014068.ce202f2f305bfa69@192.168.2.250>
Content-Location: http://threedubmedia.com/code/event/drop
Content-Transfer-Encoding: 8bit

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=8" />
	<link href="http://threedubmedia.com/inc/img/favicon.ico" rel="shortcut icon" />
	<link href="http://threedubmedia.com/inc/css/base.css" rel="stylesheet" />
	<link href="http://threedubmedia.com/inc/css/layout.css" rel="stylesheet" />
	<script src="http://threedubmedia.com/inc/js/jquery-1.7.2.js"></script>
	<script src="http://threedubmedia.com/inc/codemirror/codemirror.js"></script>
	<script src="http://threedubmedia.com/inc/js/demo.js"></script>
	<script src="http://threedubmedia.com/inc/js/onload.js"></script>
	<script type="text/javascript">
	  var _gaq = _gaq || [];
	  _gaq.push(['_setAccount', 'UA-98841-11']);
	  _gaq.push(['_trackPageview']);
	  (function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	  })();
	</script>
	<title>ThreeDubMedia &middot; jquery.event.drop</title>
</head>
<body>
	<div id="everything">
		<div id="hbg">
			<div id="head">
				<a href="http://threedubmedia.com/" id="logo">ThreeDubMedia</a>
				<div id="menu">
					<span class=""><a href="http://threedubmedia.com/code/event/drag">Drag</a></span><span class="active"><a href="http://threedubmedia.com/code/event/drop">Drop</a></span>				</div>
			</div>
		</div>
		<div id="cbg">
			<div id="content">
				<div class="side">
									<div class="box">
						<div class="tit">Page Contents</div>
						<a href="#" class="jump">jquery.event.drop</a><br />
												&nbsp; &nbsp;<a href="#overview" class="jump">Overview</a><br />
												&nbsp; &nbsp;<a href="#events" class="jump">Events</a><br />
												&nbsp; &nbsp;<a href="#methods" class="jump">Methods</a><br />
												&nbsp; &nbsp;<a href="#options" class="jump">Options</a><br />
												&nbsp; &nbsp;<a href="#properties" class="jump">Properties</a><br />
												&nbsp; &nbsp;<a href="#demos" class="jump">Demos</a><br />
							
					</div>
													<div class="box">
						<div class="tit">Downloads</div>
												&#x25BE; <a href="https://github.com/downloads/threedubmedia/jquery.threedubmedia/jquery.event.drop-2.2.zip">jquery.event.drop-2.2.zip</a><br />
							
					</div>
													<div class="box">
						<div class="tit">Unit Tests</div>
												&#x25BE; <a href="http://threedubmedia.com/inc/test/drop" class="pop">Run in a new window</a><br />
							
					</div>
									<div class="box">
						<div class="tit">Questions or Comments?</div>
						Please direct all feedback to the  
						<a href="http://groups.google.com/group/threedubmedia" class="ext">ThreeDubMedia Google Group</a>
					</div>
				</div>
				<div class="main">
					<h1>jquery.event.drop</h1><p>
	A jquery special event plugin that makes the task of adding complex 
	drop interactions, to any element, simple and powerful.
</p><h2 id="overview">Overview</h2><p>
	The plugin uses the simulated drag special events, to trigger drop events 
	when elements are dragged into others. It simplifies a recurring pattern 
	of event interaction that can be fairly complex to design in a consistent, 
	cross-browser manner. Drop interaction patterns are incredibly diverse, 
	and hopefully this event pattern will simplify everything.
</p>
<p>	
	This plugin is focused on correctly simulating the drop events in a very 
	usable way. This plugin does not add classnames, does not alter the position 
	or appearance of any elements, and does not alter the DOM. This plugin only 
	provides the essential callbacks at the correct points in the interaction 
	model to enable developers to have complete control over the interactions 
	that they create. This reduces the file size, eliminates dependencies, 
	and increases performance.
</p><h2 id="events">Events</h2><p>	
	A basic drop interaction occurs when a user drags (mousedown, mousemove) an 
	element inside another and releases (mouseup) the dragged element. This plugin 
	takes those DOM events (and drag events) and triggers the following events at 
	key points in the interaction. None of these drop events bubble.
</p>
<ul>
	<li>
		<strong>dropinit</strong>
		<br />
		This event is fired after "draginit" against any element with a "dropinit" 
		event bound. The handler can return false to make a given drop target 
		unavailable for the current dragged element interaction, or can return 
		elements to use as replacement drop targets for the current interaction.
	</li>
	<li>
		<strong>dropstart</strong>
		<br />
		This event is fired after "drag" when a dragged element or proxy moves within 
		the tolerance of an element. The handler can return false to suppress "drop" 
		and "dropend" events from firing for the current element. If multiple elements 
		are being dragged, this event only fires when not active and the first element 
		enters.
	</li>
	<li>
		<strong>drop</strong>
		<br />
		This event is fired when a dragged element is released inside the tolerance 
		of a drop element. The handler can return false, to null out the drop callback 
		property within the "dragend" handlers. If multiple elements are being dragged, 
		this event fires once for each active element.
	</li>
	<li>
		<strong>dropend</strong>
		<br />
		This event is fired after a dragged element leaves the tolerance of a drop 
		element, or after a drop event. If multiple elements are being dragged, this 
		event only fires when active and the last element leaves.
	</li>
</ul>
<p>
	Here is the complete order of events per drag and drop interaction: <br />
	draginit > dropinit > dragstart > drag > dropstart > drop > dropend > dragend
</p>
<p>
	This plugin also supports "live" event delegation... sort of. When a live event
	gets bound, the plugin automatically adds a "dropinit" event which makes the 
	interaction work correctly. It finds any child elements that match each live 
	selector and attaches the corresponding handlers to them. After the 
	interaction is complete, the handlers get cleaned up. The most important point 
	to take from this is that live "dropinit" events will not work correctly. Also, 
	there is a definite performance hit with many elements and selectors, because unlike 
	live drag, which only checks the event target, this solution searches the DOM tree
	on each dropinit operation.
</p><h2 id="methods">Methods</h2><p>
	In the interest of maintaining consistency with the jQuery API, a helper 
	method has been added as shorthand for binding and triggering "drop" 
	event handlers. The previous version of this plugin allowed this method 
	to be overloaded with arguments to additionally bind handlers for 
	"dropstart" and "dropend" in a single call, but this is no longer supported.
	Instead, an optional "type" argument may be included to bind or trigger the 
	related events (the "drop" prefix is optional). 
</p>
<ul>
	<li>
		<strong>.drop()</strong>
		<br />
		Triggers any bound "drop" event handlers for each element in the 
		jQuery collection.
		<br />
		Equivilent to: <span class="mono">.trigger("drop")</span>.
	</li>
	<li>
		<strong>.drop( type )</strong>
		<br />
		Triggers any bound "droptype" event handlers for each element in 
		the jQuery collection. (Types are: init, start, end)
		<br />
		Equivilent to: <span class="mono">.trigger("droptype")</span>.
	</li>
	<li>
		<strong>.drop( handler )</strong>
		<br />
		Binds a "drop" event handler to each element in the jQuery collection.
		<br />
		Equivilent to: <span class="mono">.bind("drop", handler )</span>
	</li>
	<li>
		<strong>.drop( type, handler )</strong>
		<br />
		Binds a "droptype" event handler to each element in the jQuery collection.
		(Types are: init, start, end)
		<br />
		Equivilent to: <span class="mono">.bind("droptype", handler )</span>
	</li>
</ul>
<p>
	In order to manage the "drop" options easily, a static utility method was added. In
	the previous version of this plugin, it was called "dropManage" but that has been 
	changed to simply "drop". The management of drop targets is no longer handled by this 
	utility function.
</p>
<ul>
	<li>
		<strong>$.drop( options )</strong>
		<br />
		Sets global drop options. 
		<br />
		Previously called: <span class="mono">$.dropManage( options )</span>
	</li>
</ul>
<h2 id="options">Options</h2><p>
	Unlike the "drag" events, the drop options are global and cannot set using 
	the "bind" or "drop" jQuery methods. Instead, you can use the "$.drop" 
	utility method to configure the drop interactions.
</p>
<ul>
	<li>
		<strong>mode</strong> 
		<em>(String)</em> 
		<span class="mono fr">Default: "overlap"</span>
		<br />
		A string which matches any one of the configured tolerance modes (fit, 
		intersect, middle, overlap) If a mode is not found, the plugin will use 
		the mouse position as a fallback.
	</li>
	<li>
		<strong>tolerance</strong> 
		<em>(Function)</em> 
		<span class="mono fr">Default: null</span>
		<br />
		An optional function to use instead of a configured tolerance mode. The 
		function has the same signature as any tolerance mode function.
	</li>
	<li>
		<strong>delay</strong> 
		<em>(Number)</em> 
		<span class="mono fr">Default: 20</span>
		<br />
		A number which indicates the frequency to check drop target tolerances 
		during "drag" events. This can be used to tune performance when dealing 
		with many elements.
	</li>
	<li>
		<strong>multi</strong> 
		<em>(Boolean/Number)</em> 
		<span class="mono fr">Default: 1</span>
		<br />
		A value which indicates how many drop targets are allowed to be win per 
		interaction	for each dragged element. (true = unlimited, false = none)
	</li>
</ul>	
<p>
	The default values are stored as properties of the <span class="mono">jQuery.event.special.drop</span> object.
</p>
<h2 id="properties">Properties</h2><p>
	The following properties belong to a dragdrop callback object which is 
	passed as the second argument to each event handler, unique to each 
	dragged element, and shared throughout the drag interaction. 
</p>
<ul>
	<li>
		<strong>target</strong> 
		<em>(Element)</em>
		<br />
		The drag element, or the drop element, to which the event handler has 
		been bound. (Always the same as "this" within an event handler)
	</li>
	<li>
		<strong>drag</strong> 
		<em>(Element)</em>
		<br />
		The dragged element for the given interaction to which the drag event 
		has been bound.
	</li>
	<li>
		<strong>proxy</strong> 
		<em>(Element)</em>
		<br />
		The dragged element, or any element returned by the "dragstart" handler. 
		The proxy element is used to determine the drop target tolerance.
	</li>
	<li>
		<strong>drop</strong> 
		<em>(Array)</em>
		<br /> 
		Contains all of the active drop targets for the current interaction.
	</li>	
	<li>
		<strong>available</strong> 
		<em>(Array)</em>
		<br /> 
		Contains all of the available drop targets for the current interaction.
	</li>
	<li>
		<strong>update</strong> 
		<em>(Function)</em>
		<br /> 
		A helper function which updates the locations of all of the available 
		drop targets for the current interaction.
	</li>
	<li>
		<strong>startX</strong> 
		<em>(Number)</em>
		<br />
		The horizontal location of the "mousedown" event.
	</li>
	<li>
		<strong>startY</strong> 
		<em>(Number)</em>
		<br />
		The vertical location of the "mousedown" event.
	</li>
	<li>
		<strong>deltaX</strong> 
		<em>(Number)</em>
		<br />
		The horizontal distance moved from "startX".
	</li>
	<li>
		<strong>deltaY</strong> 
		<em>(Number)</em>
		<br />
		The vertical distance moved from "startX".
	</li>
	<li>
		<strong>originalX</strong> 
		<em>(Number)</em>
		<br />
		The starting horizontal position of the drag "target" element.
	</li>
	<li>
		<strong>originalY</strong> 
		<em>(Number)</em>
		<br />
		The starting vertical position of the drag "target" element.
	</li>
	<li>
		<strong>offsetX</strong> 
		<em>(Number)</em>
		<br />
		The the moved horizontal position of the drag "target" element.
	</li>
	<li>
		<strong>offsetY</strong> 
		<em>(Number)</em>
		<br />
		The the moved vertical position of the drag "target" element.
	</li>
</ul>
<p>
	The callback object is extensible. You can add any property within one event 
	handler and it will be available in any other event handlers that follow (per
	dragged element). Additional properties or methods can be added to 
	<span class="mono">jQuery.event.special.drag.callback.prototype</span>
	and will be available in all event handlers for all elements.
</p><h2 id="demos">Demos</h2><p>
	
</p>
<ul>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/basic" class="demo">Basic</a>
		<br />
		One of the simplest ways to create a drop interaction, with the "drop" method.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/active" class="demo">Active</a>
		<br />
		Using the "dropstart" and "dropend" events to toggle an "active" drop state.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/available" class="demo">Available</a>
		<br />
		Using the "available" property to activate drop targets during the drag interaction.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/dragover" class="demo">Dragover</a>
		<br />
		Using the "drop" property to detect active targets during the drag interaction.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/proxy" class="demo">Proxy</a>
		<br />
		Using a drag "proxy" element with drop interaction.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/live" class="demo">Live</a>
		<br />
		Using "live" event delegation with "drop" events.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/overlap" class="demo">Overlap</a>
		<br />
		Using the "overlap" tolerance mode to select drop targets.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/intersect" class="demo">Intersect</a>
		<br />
		Using the "intersect" tolerance mode to select drop targets.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/middle" class="demo">Middle</a>
		<br />
		Using the "middle" tolerance mode to select drop targets.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/fit" class="demo">Fit</a>
		<br />
		Using the "fit" tolerance mode to select drop targets.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/mouse" class="demo">Mouse</a>
		<br />
		Using the fallback "mouse" tolerance mode to select drop targets.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/tolerance" class="demo">Tolerance</a>
		<br />
		Using "dropManage" to create a custom circular tolerance mode.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/prevent" class="demo">Prevent</a>
		<br />
		Using the "draginit" event to cancel drop interaction.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/multi" class="demo">Multi</a>
		<br />
		Using "dropManage" to allow multiple drop targets per drag interaction.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/multi2" class="demo">Multi2</a>
		<br />
		Using multiple drag elements and multiple drop targets, at the same time.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/affordance" class="demo">Affordance</a>
		<br />
		Using the drag element's "drop" option, to create drop target affordance.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/selection" class="demo">Selection</a>
		<br />
		Using a drag proxy and multi drop to creating a dragged area selection. 
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/reorder" class="demo">Reorder</a>
		<br />
		Using drag and drop events and a custom tolerance to rearrange items in a list.
	</li>
	<li>
		<a href="http://threedubmedia.com/code/event/drop/demo/moving" class="demo">Moving</a>
		<br />
		Using the callback object "update" method to track moving drop targets.
	</li>
</ul>				</div>
			</div>
		</div>
		<div id="fbg">
			<div id="foot">
				<div class="copyright">
					Copyright &copy; 2012 ThreeDubMedia, All Rights Reserved
				</div>
				<div class="benchmark">
					0.1201 sec
				</div>
			</div>
		</div>	
	</div>
</body>
</html>
------------xTmqCi4MdczBqywUSIvdms
Content-Disposition: inline; filename=favicon.ico
Content-Type: image/x-icon; name=favicon.ico
Content-Location: http://threedubmedia.com/inc/img/favicon.ico
Content-Transfer-Encoding: Base64

AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAA
AAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA////////////////////
////////AAAA//////8AAAD/////////////////////////////////AAAA/wAA
AP//////AAAA/wAAAP8AAAD/AAAA/wAAAP//////AAAA/wAAAP8AAAD/AAAA/wAA
AP8AAAD//////wAAAP8AAAD//////wAAAP//////AAAA//////8AAAD//////wAA
AP//////////////////////AAAA//////8AAAD/AAAA//////8AAAD//////wAA
AP//////AAAA//////8AAAD//////wAAAP8AAAD/AAAA/wAAAP//////AAAA/wAA
AP//////AAAA//////8AAAD//////wAAAP//////AAAA////////////////////
//8AAAD//////wAAAP8AAAD//////wAAAP///////////////////////////wAA
AP//////AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
AP8AAAD/AAAA/wAAAP8AAAD/////////////////////////////////AAAA/wAA
AP////////////////////////////////8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP//////AAAA////
////////////////////////AAAA//////8AAAD/AAAA//////8AAAD/////////
/////////////wAAAP//////AAAA//////8AAAD//////wAAAP//////AAAA/wAA
AP//////AAAA/wAAAP8AAAD/AAAA//////8AAAD//////wAAAP//////AAAA////
//8AAAD//////wAAAP8AAAD//////wAAAP//////////////////////AAAA////
//8AAAD//////wAAAP//////AAAA//////8AAAD/AAAA//////8AAAD/AAAA/wAA
AP8AAAD/AAAA/wAAAP//////AAAA/wAAAP8AAAD/AAAA/wAAAP//////AAAA/wAA
AP////////////////////////////////8AAAD//////wAAAP//////////////
/////////////wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==

------------xTmqCi4MdczBqywUSIvdms
Content-Disposition: inline; filename=base.css
Content-Type: text/css; name=base.css
Content-Location: http://threedubmedia.com/inc/css/base.css
Content-Transfer-Encoding: 8bit

* {
	outline: none;
	}
html {
	font: 14px/1.5em Verdana, Arial, Helvetica, sans-serif;
	}	
body {
	margin: 0;	
	padding: 20px 20px 5px 20px;
	background: #FFF;
	color: #222;
	}
a {
	color: #137;
	text-decoration: none;
	}
a:hover,
a:active {
	/*color: #173;*/
	text-decoration: underline;
	}
h1 {
	margin: 0;	
	font: normal 32px/1em Tahoma, Verdana, Geneva, sans-serif;
	color: #444;
	}
h2 {
	margin: 0;
	font: normal 24px/1em Tahoma, Verdana, Geneva, sans-serif;
	color: #333;
	}
fieldset {
	border: 1px solid #AAA;
	padding: 0 1em;
	margin: 1em 0;
	}	
label {
	display: block;
	text-transform: uppercase;
	font-size: 10px;
	}		
code {
	display: block;
	color: #444;
	padding: 8px 16px;
	margin: 0 0 8px 0;
	border: 1px dotted #AAA;
	border-width: 1px 0;
	white-space: pre;
	font-family: "Courier New", Courier, monospace;
	}
li {
	margin: 1em 0;
	}
ul li {	
	list-style-type: circle;
	}
------------xTmqCi4MdczBqywUSIvdms
Content-Disposition: inline; filename=layout.css
Content-Type: text/css; name=layout.css
Content-Location: http://threedubmedia.com/inc/css/layout.css
Content-Transfer-Encoding: 8bit

body {
	padding: 0;
	background: #000;
	}
h1, h2 {
	margin: .5em 0;
	}
#everything {
	text-align: center;
	}
#head, #content, #foot {	
	width: 944px;
	padding: 0 8px;
	margin: 0 auto;
	text-align: left;
	}
#hbg {
	background: #000;
	border-bottom: 8px solid #137;
	}
#head {
	position: relative;
	height: 32px;
	margin-top: 8px;
	}	
#cbg {
	background: #FFF;
	border-top: 8px solid #CCC;
	border-bottom: 8px solid #CCC;
	}
#content {
	padding-bottom: 16px;
	min-height: 420px;
	}
#fbg {
	background: #000;
	border-top: 8px solid #137;
	}
#foot {
	height: 32px;
	color: #888;
	font-size: 10px;
	}	
.benchmark {
	float: right;
	}
.copyright {
	float: left;
	}	
#status {
	float: right;
	font-size: 11px;
	}
#logo {
	position: absolute;
	top: 0;
	right: 8px;
	color: #137;
	font: bold 32px/38px Tahoma, Verdana, Geneva, sans-serif;
	font-style: italic;
	text-transform: uppercase;
	height: 32px;
	overflow: hidden;
	border-bottom: 8px solid #137;
	padding: 0;
	margin: 0;
	}
#menu {
	height: 32px;
	}
#menu a,
#menu a:link,
#menu a:visited,
#logo a,
#logo a:link,
#logo a:visited {
	padding: 0 0 6px 0;
	margin: 0 24px 0 0;
	font-size: 1.2em;
	line-height: 32px;
	text-decoration: none;
	border-bottom: 8px solid #137;
	color: #137;
	}
#menu a:hover,
#menu a:focus,
#menu a:active,
#logo:hover,
#logo:focus,
#logo:active {	
	border-color: #173;
	color: #173;
	text-decoration: none;
	}
#menu .active a {
	border-color: #CCC;
	color: #CCC;
	}
.side {
	position: relative;
	float: right;
	width: 280px;
	}
.side .box {
	padding: 8px;
	margin: 0 0 16px 0;
	}
.box .tit {
	margin: 0 0 4px 0;
	padding: 0 0 8px 0;
	font-weight: bold;
	line-height: 1em;
	border-bottom: 1px dotted #AAA;
	color: #555;
	}	
.main {
	margin-right: 296px;
	}	
.flash_message {
	background: #FF9;
	}
.error_message {
	color: #EEE;
	background: #A33;
	padding: 1px 2px;
	}
.fr {
	float: right;
	}
.mono {
	font-family: "Courier New", Courier, monospace;
	}
a.ext {
	color: #713;
	}
.ext span {
	padding: 0 0 0 2px;
	color: #666;
	}	
/*** Demo Styles ***/
a.demo {
	font-weight: bold;
	}
.demo-overlay {
	position: absolute; 
	top: 0;
	left: 0;
	}
.demo-mask {
	position: absolute; 
	top: 0;
	left: 0;
	background: #000;
	filter: alpha(opacity=85);
	-moz-opacity: 0.85;
	opacity: 0.85;
	}
.demo-box {
	position: absolute;
	height: 460px;
	width: 720px;
	color: #999;
	font-size: 12px;
	line-height: 20px;
	
	}
.demo-box a {
	color: #999;
	}
.demo-box a:hover,
.demo-box a:focus,
.demo-box a:active{
	color: #DDD;
	}	
.demo-ctrl {
	position: absolute;
	height: 20px;
	padding: 0 4px;
	width: 712px;
	top: 0;
	left: 0;
	text-align: right;
	}
.demo-nav {
	position: absolute;
	height: 20px;
	padding: 0 4px;
	width: 712px;
	top: 440px;
	left: 0;
	text-align: right;
	}
.demo-edit,
.demo-commit,
.demo-open {
	float: left;
	}
.demo-editor {
	height: 412px;
	width: 712px; 
	position: absolute;
	top: 20px;
	left: 0;
	overflow: hidden; 
	background: #EEE;
	border: 4px solid #CCC;
	}
.demo-frame {
	height: 420px;
	width: 720px; 
	position: absolute;
	top: 20px;
	left: 0;
	}
.demo-loader {
	position: absolute;
	color: #FFF;
	}
------------xTmqCi4MdczBqywUSIvdms
Content-Disposition: inline; filename=jquery-1.7.2.js
Content-Type: application/javascript; name=jquery-1.7.2.js
Content-Location: http://threedubmedia.com/inc/js/jquery-1.7.2.js
Content-Transfer-Encoding: Base64

LyohCiAqIGpRdWVyeSBKYXZhU2NyaXB0IExpYnJhcnkgdjEuNy4yCiAqIGh0dHA6
Ly9qcXVlcnkuY29tLwogKgogKiBDb3B5cmlnaHQgMjAxMSwgSm9obiBSZXNpZwog
KiBEdWFsIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgb3IgR1BMIFZlcnNpb24gMiBs
aWNlbnNlcy4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKgogKiBJbmNs
dWRlcyBTaXp6bGUuanMKICogaHR0cDovL3NpenpsZWpzLmNvbS8KICogQ29weXJp
Z2h0IDIwMTEsIFRoZSBEb2pvIEZvdW5kYXRpb24KICogUmVsZWFzZWQgdW5kZXIg
dGhlIE1JVCwgQlNELCBhbmQgR1BMIExpY2Vuc2VzLgogKgogKiBEYXRlOiBXZWQg
TWFyIDIxIDEyOjQ2OjM0IDIwMTIgLTA3MDAKICovCihmdW5jdGlvbiggd2luZG93
LCB1bmRlZmluZWQgKSB7CgovLyBVc2UgdGhlIGNvcnJlY3QgZG9jdW1lbnQgYWNj
b3JkaW5nbHkgd2l0aCB3aW5kb3cgYXJndW1lbnQgKHNhbmRib3gpCnZhciBkb2N1
bWVudCA9IHdpbmRvdy5kb2N1bWVudCwKCW5hdmlnYXRvciA9IHdpbmRvdy5uYXZp
Z2F0b3IsCglsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjsKdmFyIGpRdWVyeSA9
IChmdW5jdGlvbigpIHsKCi8vIERlZmluZSBhIGxvY2FsIGNvcHkgb2YgalF1ZXJ5
CnZhciBqUXVlcnkgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQgKSB7CgkJ
Ly8gVGhlIGpRdWVyeSBvYmplY3QgaXMgYWN0dWFsbHkganVzdCB0aGUgaW5pdCBj
b25zdHJ1Y3RvciAnZW5oYW5jZWQnCgkJcmV0dXJuIG5ldyBqUXVlcnkuZm4uaW5p
dCggc2VsZWN0b3IsIGNvbnRleHQsIHJvb3RqUXVlcnkgKTsKCX0sCgoJLy8gTWFw
IG92ZXIgalF1ZXJ5IGluIGNhc2Ugb2Ygb3ZlcndyaXRlCglfalF1ZXJ5ID0gd2lu
ZG93LmpRdWVyeSwKCgkvLyBNYXAgb3ZlciB0aGUgJCBpbiBjYXNlIG9mIG92ZXJ3
cml0ZQoJXyQgPSB3aW5kb3cuJCwKCgkvLyBBIGNlbnRyYWwgcmVmZXJlbmNlIHRv
IHRoZSByb290IGpRdWVyeShkb2N1bWVudCkKCXJvb3RqUXVlcnksCgoJLy8gQSBz
aW1wbGUgd2F5IHRvIGNoZWNrIGZvciBIVE1MIHN0cmluZ3Mgb3IgSUQgc3RyaW5n
cwoJLy8gUHJpb3JpdGl6ZSAjaWQgb3ZlciA8dGFnPiB0byBhdm9pZCBYU1Mgdmlh
IGxvY2F0aW9uLmhhc2ggKCM5NTIxKQoJcXVpY2tFeHByID0gL14oPzpbXiM8XSoo
PFtcd1xXXSs+KVtePl0qJHwjKFtcd1wtXSopJCkvLAoKCS8vIENoZWNrIGlmIGEg
c3RyaW5nIGhhcyBhIG5vbi13aGl0ZXNwYWNlIGNoYXJhY3RlciBpbiBpdAoJcm5v
dHdoaXRlID0gL1xTLywKCgkvLyBVc2VkIGZvciB0cmltbWluZyB3aGl0ZXNwYWNl
Cgl0cmltTGVmdCA9IC9eXHMrLywKCXRyaW1SaWdodCA9IC9ccyskLywKCgkvLyBN
YXRjaCBhIHN0YW5kYWxvbmUgdGFnCglyc2luZ2xlVGFnID0gL148KFx3Kylccypc
Lz8+KD86PFwvXDE+KT8kLywKCgkvLyBKU09OIFJlZ0V4cAoJcnZhbGlkY2hhcnMg
PSAvXltcXSw6e31cc10qJC8sCglydmFsaWRlc2NhcGUgPSAvXFwoPzpbIlxcXC9i
Zm5ydF18dVswLTlhLWZBLUZdezR9KS9nLAoJcnZhbGlkdG9rZW5zID0gLyJbXiJc
XFxuXHJdKiJ8dHJ1ZXxmYWxzZXxudWxsfC0/XGQrKD86XC5cZCopPyg/OltlRV1b
K1wtXT9cZCspPy9nLAoJcnZhbGlkYnJhY2VzID0gLyg/Ol58OnwsKSg/OlxzKlxb
KSsvZywKCgkvLyBVc2VyYWdlbnQgUmVnRXhwCglyd2Via2l0ID0gLyh3ZWJraXQp
WyBcL10oW1x3Ll0rKS8sCglyb3BlcmEgPSAvKG9wZXJhKSg/Oi4qdmVyc2lvbik/
WyBcL10oW1x3Ll0rKS8sCglybXNpZSA9IC8obXNpZSkgKFtcdy5dKykvLAoJcm1v
emlsbGEgPSAvKG1vemlsbGEpKD86Lio/IHJ2OihbXHcuXSspKT8vLAoKCS8vIE1h
dGNoZXMgZGFzaGVkIHN0cmluZyBmb3IgY2FtZWxpemluZwoJcmRhc2hBbHBoYSA9
IC8tKFthLXpdfFswLTldKS9pZywKCXJtc1ByZWZpeCA9IC9eLW1zLS8sCgoJLy8g
VXNlZCBieSBqUXVlcnkuY2FtZWxDYXNlIGFzIGNhbGxiYWNrIHRvIHJlcGxhY2Uo
KQoJZmNhbWVsQ2FzZSA9IGZ1bmN0aW9uKCBhbGwsIGxldHRlciApIHsKCQlyZXR1
cm4gKCBsZXR0ZXIgKyAiIiApLnRvVXBwZXJDYXNlKCk7Cgl9LAoKCS8vIEtlZXAg
YSBVc2VyQWdlbnQgc3RyaW5nIGZvciB1c2Ugd2l0aCBqUXVlcnkuYnJvd3NlcgoJ
dXNlckFnZW50ID0gbmF2aWdhdG9yLnVzZXJBZ2VudCwKCgkvLyBGb3IgbWF0Y2hp
bmcgdGhlIGVuZ2luZSBhbmQgdmVyc2lvbiBvZiB0aGUgYnJvd3NlcgoJYnJvd3Nl
ck1hdGNoLAoKCS8vIFRoZSBkZWZlcnJlZCB1c2VkIG9uIERPTSByZWFkeQoJcmVh
ZHlMaXN0LAoKCS8vIFRoZSByZWFkeSBldmVudCBoYW5kbGVyCglET01Db250ZW50
TG9hZGVkLAoKCS8vIFNhdmUgYSByZWZlcmVuY2UgdG8gc29tZSBjb3JlIG1ldGhv
ZHMKCXRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZywKCWhhc093
biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksCglwdXNoID0gQXJy
YXkucHJvdG90eXBlLnB1c2gsCglzbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGlj
ZSwKCXRyaW0gPSBTdHJpbmcucHJvdG90eXBlLnRyaW0sCglpbmRleE9mID0gQXJy
YXkucHJvdG90eXBlLmluZGV4T2YsCgoJLy8gW1tDbGFzc11dIC0+IHR5cGUgcGFp
cnMKCWNsYXNzMnR5cGUgPSB7fTsKCmpRdWVyeS5mbiA9IGpRdWVyeS5wcm90b3R5
cGUgPSB7Cgljb25zdHJ1Y3RvcjogalF1ZXJ5LAoJaW5pdDogZnVuY3Rpb24oIHNl
bGVjdG9yLCBjb250ZXh0LCByb290alF1ZXJ5ICkgewoJCXZhciBtYXRjaCwgZWxl
bSwgcmV0LCBkb2M7CgoJCS8vIEhhbmRsZSAkKCIiKSwgJChudWxsKSwgb3IgJCh1
bmRlZmluZWQpCgkJaWYgKCAhc2VsZWN0b3IgKSB7CgkJCXJldHVybiB0aGlzOwoJ
CX0KCgkJLy8gSGFuZGxlICQoRE9NRWxlbWVudCkKCQlpZiAoIHNlbGVjdG9yLm5v
ZGVUeXBlICkgewoJCQl0aGlzLmNvbnRleHQgPSB0aGlzWzBdID0gc2VsZWN0b3I7
CgkJCXRoaXMubGVuZ3RoID0gMTsKCQkJcmV0dXJuIHRoaXM7CgkJfQoKCQkvLyBU
aGUgYm9keSBlbGVtZW50IG9ubHkgZXhpc3RzIG9uY2UsIG9wdGltaXplIGZpbmRp
bmcgaXQKCQlpZiAoIHNlbGVjdG9yID09PSAiYm9keSIgJiYgIWNvbnRleHQgJiYg
ZG9jdW1lbnQuYm9keSApIHsKCQkJdGhpcy5jb250ZXh0ID0gZG9jdW1lbnQ7CgkJ
CXRoaXNbMF0gPSBkb2N1bWVudC5ib2R5OwoJCQl0aGlzLnNlbGVjdG9yID0gc2Vs
ZWN0b3I7CgkJCXRoaXMubGVuZ3RoID0gMTsKCQkJcmV0dXJuIHRoaXM7CgkJfQoK
CQkvLyBIYW5kbGUgSFRNTCBzdHJpbmdzCgkJaWYgKCB0eXBlb2Ygc2VsZWN0b3Ig
PT09ICJzdHJpbmciICkgewoJCQkvLyBBcmUgd2UgZGVhbGluZyB3aXRoIEhUTUwg
c3RyaW5nIG9yIGFuIElEPwoJCQlpZiAoIHNlbGVjdG9yLmNoYXJBdCgwKSA9PT0g
IjwiICYmIHNlbGVjdG9yLmNoYXJBdCggc2VsZWN0b3IubGVuZ3RoIC0gMSApID09
PSAiPiIgJiYgc2VsZWN0b3IubGVuZ3RoID49IDMgKSB7CgkJCQkvLyBBc3N1bWUg
dGhhdCBzdHJpbmdzIHRoYXQgc3RhcnQgYW5kIGVuZCB3aXRoIDw+IGFyZSBIVE1M
IGFuZCBza2lwIHRoZSByZWdleCBjaGVjawoJCQkJbWF0Y2ggPSBbIG51bGwsIHNl
bGVjdG9yLCBudWxsIF07CgoJCQl9IGVsc2UgewoJCQkJbWF0Y2ggPSBxdWlja0V4
cHIuZXhlYyggc2VsZWN0b3IgKTsKCQkJfQoKCQkJLy8gVmVyaWZ5IGEgbWF0Y2gs
IGFuZCB0aGF0IG5vIGNvbnRleHQgd2FzIHNwZWNpZmllZCBmb3IgI2lkCgkJCWlm
ICggbWF0Y2ggJiYgKG1hdGNoWzFdIHx8ICFjb250ZXh0KSApIHsKCgkJCQkvLyBI
QU5ETEU6ICQoaHRtbCkgLT4gJChhcnJheSkKCQkJCWlmICggbWF0Y2hbMV0gKSB7
CgkJCQkJY29udGV4dCA9IGNvbnRleHQgaW5zdGFuY2VvZiBqUXVlcnkgPyBjb250
ZXh0WzBdIDogY29udGV4dDsKCQkJCQlkb2MgPSAoIGNvbnRleHQgPyBjb250ZXh0
Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCA6IGRvY3VtZW50ICk7CgoJCQkJCS8v
IElmIGEgc2luZ2xlIHN0cmluZyBpcyBwYXNzZWQgaW4gYW5kIGl0J3MgYSBzaW5n
bGUgdGFnCgkJCQkJLy8ganVzdCBkbyBhIGNyZWF0ZUVsZW1lbnQgYW5kIHNraXAg
dGhlIHJlc3QKCQkJCQlyZXQgPSByc2luZ2xlVGFnLmV4ZWMoIHNlbGVjdG9yICk7
CgoJCQkJCWlmICggcmV0ICkgewoJCQkJCQlpZiAoIGpRdWVyeS5pc1BsYWluT2Jq
ZWN0KCBjb250ZXh0ICkgKSB7CgkJCQkJCQlzZWxlY3RvciA9IFsgZG9jdW1lbnQu
Y3JlYXRlRWxlbWVudCggcmV0WzFdICkgXTsKCQkJCQkJCWpRdWVyeS5mbi5hdHRy
LmNhbGwoIHNlbGVjdG9yLCBjb250ZXh0LCB0cnVlICk7CgoJCQkJCQl9IGVsc2Ug
ewoJCQkJCQkJc2VsZWN0b3IgPSBbIGRvYy5jcmVhdGVFbGVtZW50KCByZXRbMV0g
KSBdOwoJCQkJCQl9CgoJCQkJCX0gZWxzZSB7CgkJCQkJCXJldCA9IGpRdWVyeS5i
dWlsZEZyYWdtZW50KCBbIG1hdGNoWzFdIF0sIFsgZG9jIF0gKTsKCQkJCQkJc2Vs
ZWN0b3IgPSAoIHJldC5jYWNoZWFibGUgPyBqUXVlcnkuY2xvbmUocmV0LmZyYWdt
ZW50KSA6IHJldC5mcmFnbWVudCApLmNoaWxkTm9kZXM7CgkJCQkJfQoKCQkJCQly
ZXR1cm4galF1ZXJ5Lm1lcmdlKCB0aGlzLCBzZWxlY3RvciApOwoKCQkJCS8vIEhB
TkRMRTogJCgiI2lkIikKCQkJCX0gZWxzZSB7CgkJCQkJZWxlbSA9IGRvY3VtZW50
LmdldEVsZW1lbnRCeUlkKCBtYXRjaFsyXSApOwoKCQkJCQkvLyBDaGVjayBwYXJl
bnROb2RlIHRvIGNhdGNoIHdoZW4gQmxhY2tiZXJyeSA0LjYgcmV0dXJucwoJCQkJ
CS8vIG5vZGVzIHRoYXQgYXJlIG5vIGxvbmdlciBpbiB0aGUgZG9jdW1lbnQgIzY5
NjMKCQkJCQlpZiAoIGVsZW0gJiYgZWxlbS5wYXJlbnROb2RlICkgewoJCQkJCQkv
LyBIYW5kbGUgdGhlIGNhc2Ugd2hlcmUgSUUgYW5kIE9wZXJhIHJldHVybiBpdGVt
cwoJCQkJCQkvLyBieSBuYW1lIGluc3RlYWQgb2YgSUQKCQkJCQkJaWYgKCBlbGVt
LmlkICE9PSBtYXRjaFsyXSApIHsKCQkJCQkJCXJldHVybiByb290alF1ZXJ5LmZp
bmQoIHNlbGVjdG9yICk7CgkJCQkJCX0KCgkJCQkJCS8vIE90aGVyd2lzZSwgd2Ug
aW5qZWN0IHRoZSBlbGVtZW50IGRpcmVjdGx5IGludG8gdGhlIGpRdWVyeSBvYmpl
Y3QKCQkJCQkJdGhpcy5sZW5ndGggPSAxOwoJCQkJCQl0aGlzWzBdID0gZWxlbTsK
CQkJCQl9CgoJCQkJCXRoaXMuY29udGV4dCA9IGRvY3VtZW50OwoJCQkJCXRoaXMu
c2VsZWN0b3IgPSBzZWxlY3RvcjsKCQkJCQlyZXR1cm4gdGhpczsKCQkJCX0KCgkJ
CS8vIEhBTkRMRTogJChleHByLCAkKC4uLikpCgkJCX0gZWxzZSBpZiAoICFjb250
ZXh0IHx8IGNvbnRleHQuanF1ZXJ5ICkgewoJCQkJcmV0dXJuICggY29udGV4dCB8
fCByb290alF1ZXJ5ICkuZmluZCggc2VsZWN0b3IgKTsKCgkJCS8vIEhBTkRMRTog
JChleHByLCBjb250ZXh0KQoJCQkvLyAod2hpY2ggaXMganVzdCBlcXVpdmFsZW50
IHRvOiAkKGNvbnRleHQpLmZpbmQoZXhwcikKCQkJfSBlbHNlIHsKCQkJCXJldHVy
biB0aGlzLmNvbnN0cnVjdG9yKCBjb250ZXh0ICkuZmluZCggc2VsZWN0b3IgKTsK
CQkJfQoKCQkvLyBIQU5ETEU6ICQoZnVuY3Rpb24pCgkJLy8gU2hvcnRjdXQgZm9y
IGRvY3VtZW50IHJlYWR5CgkJfSBlbHNlIGlmICggalF1ZXJ5LmlzRnVuY3Rpb24o
IHNlbGVjdG9yICkgKSB7CgkJCXJldHVybiByb290alF1ZXJ5LnJlYWR5KCBzZWxl
Y3RvciApOwoJCX0KCgkJaWYgKCBzZWxlY3Rvci5zZWxlY3RvciAhPT0gdW5kZWZp
bmVkICkgewoJCQl0aGlzLnNlbGVjdG9yID0gc2VsZWN0b3Iuc2VsZWN0b3I7CgkJ
CXRoaXMuY29udGV4dCA9IHNlbGVjdG9yLmNvbnRleHQ7CgkJfQoKCQlyZXR1cm4g
alF1ZXJ5Lm1ha2VBcnJheSggc2VsZWN0b3IsIHRoaXMgKTsKCX0sCgoJLy8gU3Rh
cnQgd2l0aCBhbiBlbXB0eSBzZWxlY3RvcgoJc2VsZWN0b3I6ICIiLAoKCS8vIFRo
ZSBjdXJyZW50IHZlcnNpb24gb2YgalF1ZXJ5IGJlaW5nIHVzZWQKCWpxdWVyeTog
IjEuNy4yIiwKCgkvLyBUaGUgZGVmYXVsdCBsZW5ndGggb2YgYSBqUXVlcnkgb2Jq
ZWN0IGlzIDAKCWxlbmd0aDogMCwKCgkvLyBUaGUgbnVtYmVyIG9mIGVsZW1lbnRz
IGNvbnRhaW5lZCBpbiB0aGUgbWF0Y2hlZCBlbGVtZW50IHNldAoJc2l6ZTogZnVu
Y3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMubGVuZ3RoOwoJfSwKCgl0b0FycmF5OiBm
dW5jdGlvbigpIHsKCQlyZXR1cm4gc2xpY2UuY2FsbCggdGhpcywgMCApOwoJfSwK
CgkvLyBHZXQgdGhlIE50aCBlbGVtZW50IGluIHRoZSBtYXRjaGVkIGVsZW1lbnQg
c2V0IE9SCgkvLyBHZXQgdGhlIHdob2xlIG1hdGNoZWQgZWxlbWVudCBzZXQgYXMg
YSBjbGVhbiBhcnJheQoJZ2V0OiBmdW5jdGlvbiggbnVtICkgewoJCXJldHVybiBu
dW0gPT0gbnVsbCA/CgoJCQkvLyBSZXR1cm4gYSAnY2xlYW4nIGFycmF5CgkJCXRo
aXMudG9BcnJheSgpIDoKCgkJCS8vIFJldHVybiBqdXN0IHRoZSBvYmplY3QKCQkJ
KCBudW0gPCAwID8gdGhpc1sgdGhpcy5sZW5ndGggKyBudW0gXSA6IHRoaXNbIG51
bSBdICk7Cgl9LAoKCS8vIFRha2UgYW4gYXJyYXkgb2YgZWxlbWVudHMgYW5kIHB1
c2ggaXQgb250byB0aGUgc3RhY2sKCS8vIChyZXR1cm5pbmcgdGhlIG5ldyBtYXRj
aGVkIGVsZW1lbnQgc2V0KQoJcHVzaFN0YWNrOiBmdW5jdGlvbiggZWxlbXMsIG5h
bWUsIHNlbGVjdG9yICkgewoJCS8vIEJ1aWxkIGEgbmV3IGpRdWVyeSBtYXRjaGVk
IGVsZW1lbnQgc2V0CgkJdmFyIHJldCA9IHRoaXMuY29uc3RydWN0b3IoKTsKCgkJ
aWYgKCBqUXVlcnkuaXNBcnJheSggZWxlbXMgKSApIHsKCQkJcHVzaC5hcHBseSgg
cmV0LCBlbGVtcyApOwoKCQl9IGVsc2UgewoJCQlqUXVlcnkubWVyZ2UoIHJldCwg
ZWxlbXMgKTsKCQl9CgoJCS8vIEFkZCB0aGUgb2xkIG9iamVjdCBvbnRvIHRoZSBz
dGFjayAoYXMgYSByZWZlcmVuY2UpCgkJcmV0LnByZXZPYmplY3QgPSB0aGlzOwoK
CQlyZXQuY29udGV4dCA9IHRoaXMuY29udGV4dDsKCgkJaWYgKCBuYW1lID09PSAi
ZmluZCIgKSB7CgkJCXJldC5zZWxlY3RvciA9IHRoaXMuc2VsZWN0b3IgKyAoIHRo
aXMuc2VsZWN0b3IgPyAiICIgOiAiIiApICsgc2VsZWN0b3I7CgkJfSBlbHNlIGlm
ICggbmFtZSApIHsKCQkJcmV0LnNlbGVjdG9yID0gdGhpcy5zZWxlY3RvciArICIu
IiArIG5hbWUgKyAiKCIgKyBzZWxlY3RvciArICIpIjsKCQl9CgoJCS8vIFJldHVy
biB0aGUgbmV3bHktZm9ybWVkIGVsZW1lbnQgc2V0CgkJcmV0dXJuIHJldDsKCX0s
CgoJLy8gRXhlY3V0ZSBhIGNhbGxiYWNrIGZvciBldmVyeSBlbGVtZW50IGluIHRo
ZSBtYXRjaGVkIHNldC4KCS8vIChZb3UgY2FuIHNlZWQgdGhlIGFyZ3VtZW50cyB3
aXRoIGFuIGFycmF5IG9mIGFyZ3MsIGJ1dCB0aGlzIGlzCgkvLyBvbmx5IHVzZWQg
aW50ZXJuYWxseS4pCgllYWNoOiBmdW5jdGlvbiggY2FsbGJhY2ssIGFyZ3MgKSB7
CgkJcmV0dXJuIGpRdWVyeS5lYWNoKCB0aGlzLCBjYWxsYmFjaywgYXJncyApOwoJ
fSwKCglyZWFkeTogZnVuY3Rpb24oIGZuICkgewoJCS8vIEF0dGFjaCB0aGUgbGlz
dGVuZXJzCgkJalF1ZXJ5LmJpbmRSZWFkeSgpOwoKCQkvLyBBZGQgdGhlIGNhbGxi
YWNrCgkJcmVhZHlMaXN0LmFkZCggZm4gKTsKCgkJcmV0dXJuIHRoaXM7Cgl9LAoK
CWVxOiBmdW5jdGlvbiggaSApIHsKCQlpID0gK2k7CgkJcmV0dXJuIGkgPT09IC0x
ID8KCQkJdGhpcy5zbGljZSggaSApIDoKCQkJdGhpcy5zbGljZSggaSwgaSArIDEg
KTsKCX0sCgoJZmlyc3Q6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmVxKCAw
ICk7Cgl9LAoKCWxhc3Q6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmVxKCAt
MSApOwoJfSwKCglzbGljZTogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMucHVz
aFN0YWNrKCBzbGljZS5hcHBseSggdGhpcywgYXJndW1lbnRzICksCgkJCSJzbGlj
ZSIsIHNsaWNlLmNhbGwoYXJndW1lbnRzKS5qb2luKCIsIikgKTsKCX0sCgoJbWFw
OiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7CgkJcmV0dXJuIHRoaXMucHVzaFN0YWNr
KCBqUXVlcnkubWFwKHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBpICkgewoJCQlyZXR1
cm4gY2FsbGJhY2suY2FsbCggZWxlbSwgaSwgZWxlbSApOwoJCX0pKTsKCX0sCgoJ
ZW5kOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5wcmV2T2JqZWN0IHx8IHRo
aXMuY29uc3RydWN0b3IobnVsbCk7Cgl9LAoKCS8vIEZvciBpbnRlcm5hbCB1c2Ug
b25seS4KCS8vIEJlaGF2ZXMgbGlrZSBhbiBBcnJheSdzIG1ldGhvZCwgbm90IGxp
a2UgYSBqUXVlcnkgbWV0aG9kLgoJcHVzaDogcHVzaCwKCXNvcnQ6IFtdLnNvcnQs
CglzcGxpY2U6IFtdLnNwbGljZQp9OwoKLy8gR2l2ZSB0aGUgaW5pdCBmdW5jdGlv
biB0aGUgalF1ZXJ5IHByb3RvdHlwZSBmb3IgbGF0ZXIgaW5zdGFudGlhdGlvbgpq
UXVlcnkuZm4uaW5pdC5wcm90b3R5cGUgPSBqUXVlcnkuZm47CgpqUXVlcnkuZXh0
ZW5kID0galF1ZXJ5LmZuLmV4dGVuZCA9IGZ1bmN0aW9uKCkgewoJdmFyIG9wdGlv
bnMsIG5hbWUsIHNyYywgY29weSwgY29weUlzQXJyYXksIGNsb25lLAoJCXRhcmdl
dCA9IGFyZ3VtZW50c1swXSB8fCB7fSwKCQlpID0gMSwKCQlsZW5ndGggPSBhcmd1
bWVudHMubGVuZ3RoLAoJCWRlZXAgPSBmYWxzZTsKCgkvLyBIYW5kbGUgYSBkZWVw
IGNvcHkgc2l0dWF0aW9uCglpZiAoIHR5cGVvZiB0YXJnZXQgPT09ICJib29sZWFu
IiApIHsKCQlkZWVwID0gdGFyZ2V0OwoJCXRhcmdldCA9IGFyZ3VtZW50c1sxXSB8
fCB7fTsKCQkvLyBza2lwIHRoZSBib29sZWFuIGFuZCB0aGUgdGFyZ2V0CgkJaSA9
IDI7Cgl9CgoJLy8gSGFuZGxlIGNhc2Ugd2hlbiB0YXJnZXQgaXMgYSBzdHJpbmcg
b3Igc29tZXRoaW5nIChwb3NzaWJsZSBpbiBkZWVwIGNvcHkpCglpZiAoIHR5cGVv
ZiB0YXJnZXQgIT09ICJvYmplY3QiICYmICFqUXVlcnkuaXNGdW5jdGlvbih0YXJn
ZXQpICkgewoJCXRhcmdldCA9IHt9OwoJfQoKCS8vIGV4dGVuZCBqUXVlcnkgaXRz
ZWxmIGlmIG9ubHkgb25lIGFyZ3VtZW50IGlzIHBhc3NlZAoJaWYgKCBsZW5ndGgg
PT09IGkgKSB7CgkJdGFyZ2V0ID0gdGhpczsKCQktLWk7Cgl9CgoJZm9yICggOyBp
IDwgbGVuZ3RoOyBpKysgKSB7CgkJLy8gT25seSBkZWFsIHdpdGggbm9uLW51bGwv
dW5kZWZpbmVkIHZhbHVlcwoJCWlmICggKG9wdGlvbnMgPSBhcmd1bWVudHNbIGkg
XSkgIT0gbnVsbCApIHsKCQkJLy8gRXh0ZW5kIHRoZSBiYXNlIG9iamVjdAoJCQlm
b3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7CgkJCQlzcmMgPSB0YXJnZXRbIG5hbWUg
XTsKCQkJCWNvcHkgPSBvcHRpb25zWyBuYW1lIF07CgoJCQkJLy8gUHJldmVudCBu
ZXZlci1lbmRpbmcgbG9vcAoJCQkJaWYgKCB0YXJnZXQgPT09IGNvcHkgKSB7CgkJ
CQkJY29udGludWU7CgkJCQl9CgoJCQkJLy8gUmVjdXJzZSBpZiB3ZSdyZSBtZXJn
aW5nIHBsYWluIG9iamVjdHMgb3IgYXJyYXlzCgkJCQlpZiAoIGRlZXAgJiYgY29w
eSAmJiAoIGpRdWVyeS5pc1BsYWluT2JqZWN0KGNvcHkpIHx8IChjb3B5SXNBcnJh
eSA9IGpRdWVyeS5pc0FycmF5KGNvcHkpKSApICkgewoJCQkJCWlmICggY29weUlz
QXJyYXkgKSB7CgkJCQkJCWNvcHlJc0FycmF5ID0gZmFsc2U7CgkJCQkJCWNsb25l
ID0gc3JjICYmIGpRdWVyeS5pc0FycmF5KHNyYykgPyBzcmMgOiBbXTsKCgkJCQkJ
fSBlbHNlIHsKCQkJCQkJY2xvbmUgPSBzcmMgJiYgalF1ZXJ5LmlzUGxhaW5PYmpl
Y3Qoc3JjKSA/IHNyYyA6IHt9OwoJCQkJCX0KCgkJCQkJLy8gTmV2ZXIgbW92ZSBv
cmlnaW5hbCBvYmplY3RzLCBjbG9uZSB0aGVtCgkJCQkJdGFyZ2V0WyBuYW1lIF0g
PSBqUXVlcnkuZXh0ZW5kKCBkZWVwLCBjbG9uZSwgY29weSApOwoKCQkJCS8vIERv
bid0IGJyaW5nIGluIHVuZGVmaW5lZCB2YWx1ZXMKCQkJCX0gZWxzZSBpZiAoIGNv
cHkgIT09IHVuZGVmaW5lZCApIHsKCQkJCQl0YXJnZXRbIG5hbWUgXSA9IGNvcHk7
CgkJCQl9CgkJCX0KCQl9Cgl9CgoJLy8gUmV0dXJuIHRoZSBtb2RpZmllZCBvYmpl
Y3QKCXJldHVybiB0YXJnZXQ7Cn07CgpqUXVlcnkuZXh0ZW5kKHsKCW5vQ29uZmxp
Y3Q6IGZ1bmN0aW9uKCBkZWVwICkgewoJCWlmICggd2luZG93LiQgPT09IGpRdWVy
eSApIHsKCQkJd2luZG93LiQgPSBfJDsKCQl9CgoJCWlmICggZGVlcCAmJiB3aW5k
b3cualF1ZXJ5ID09PSBqUXVlcnkgKSB7CgkJCXdpbmRvdy5qUXVlcnkgPSBfalF1
ZXJ5OwoJCX0KCgkJcmV0dXJuIGpRdWVyeTsKCX0sCgoJLy8gSXMgdGhlIERPTSBy
ZWFkeSB0byBiZSB1c2VkPyBTZXQgdG8gdHJ1ZSBvbmNlIGl0IG9jY3Vycy4KCWlz
UmVhZHk6IGZhbHNlLAoKCS8vIEEgY291bnRlciB0byB0cmFjayBob3cgbWFueSBp
dGVtcyB0byB3YWl0IGZvciBiZWZvcmUKCS8vIHRoZSByZWFkeSBldmVudCBmaXJl
cy4gU2VlICM2NzgxCglyZWFkeVdhaXQ6IDEsCgoJLy8gSG9sZCAob3IgcmVsZWFz
ZSkgdGhlIHJlYWR5IGV2ZW50Cglob2xkUmVhZHk6IGZ1bmN0aW9uKCBob2xkICkg
ewoJCWlmICggaG9sZCApIHsKCQkJalF1ZXJ5LnJlYWR5V2FpdCsrOwoJCX0gZWxz
ZSB7CgkJCWpRdWVyeS5yZWFkeSggdHJ1ZSApOwoJCX0KCX0sCgoJLy8gSGFuZGxl
IHdoZW4gdGhlIERPTSBpcyByZWFkeQoJcmVhZHk6IGZ1bmN0aW9uKCB3YWl0ICkg
ewoJCS8vIEVpdGhlciBhIHJlbGVhc2VkIGhvbGQgb3IgYW4gRE9NcmVhZHkvbG9h
ZCBldmVudCBhbmQgbm90IHlldCByZWFkeQoJCWlmICggKHdhaXQgPT09IHRydWUg
JiYgIS0talF1ZXJ5LnJlYWR5V2FpdCkgfHwgKHdhaXQgIT09IHRydWUgJiYgIWpR
dWVyeS5pc1JlYWR5KSApIHsKCQkJLy8gTWFrZSBzdXJlIGJvZHkgZXhpc3RzLCBh
dCBsZWFzdCwgaW4gY2FzZSBJRSBnZXRzIGEgbGl0dGxlIG92ZXJ6ZWFsb3VzICh0
aWNrZXQgIzU0NDMpLgoJCQlpZiAoICFkb2N1bWVudC5ib2R5ICkgewoJCQkJcmV0
dXJuIHNldFRpbWVvdXQoIGpRdWVyeS5yZWFkeSwgMSApOwoJCQl9CgoJCQkvLyBS
ZW1lbWJlciB0aGF0IHRoZSBET00gaXMgcmVhZHkKCQkJalF1ZXJ5LmlzUmVhZHkg
PSB0cnVlOwoKCQkJLy8gSWYgYSBub3JtYWwgRE9NIFJlYWR5IGV2ZW50IGZpcmVk
LCBkZWNyZW1lbnQsIGFuZCB3YWl0IGlmIG5lZWQgYmUKCQkJaWYgKCB3YWl0ICE9
PSB0cnVlICYmIC0talF1ZXJ5LnJlYWR5V2FpdCA+IDAgKSB7CgkJCQlyZXR1cm47
CgkJCX0KCgkJCS8vIElmIHRoZXJlIGFyZSBmdW5jdGlvbnMgYm91bmQsIHRvIGV4
ZWN1dGUKCQkJcmVhZHlMaXN0LmZpcmVXaXRoKCBkb2N1bWVudCwgWyBqUXVlcnkg
XSApOwoKCQkJLy8gVHJpZ2dlciBhbnkgYm91bmQgcmVhZHkgZXZlbnRzCgkJCWlm
ICggalF1ZXJ5LmZuLnRyaWdnZXIgKSB7CgkJCQlqUXVlcnkoIGRvY3VtZW50ICku
dHJpZ2dlciggInJlYWR5IiApLm9mZiggInJlYWR5IiApOwoJCQl9CgkJfQoJfSwK
CgliaW5kUmVhZHk6IGZ1bmN0aW9uKCkgewoJCWlmICggcmVhZHlMaXN0ICkgewoJ
CQlyZXR1cm47CgkJfQoKCQlyZWFkeUxpc3QgPSBqUXVlcnkuQ2FsbGJhY2tzKCAi
b25jZSBtZW1vcnkiICk7CgoJCS8vIENhdGNoIGNhc2VzIHdoZXJlICQoZG9jdW1l
bnQpLnJlYWR5KCkgaXMgY2FsbGVkIGFmdGVyIHRoZQoJCS8vIGJyb3dzZXIgZXZl
bnQgaGFzIGFscmVhZHkgb2NjdXJyZWQuCgkJaWYgKCBkb2N1bWVudC5yZWFkeVN0
YXRlID09PSAiY29tcGxldGUiICkgewoJCQkvLyBIYW5kbGUgaXQgYXN5bmNocm9u
b3VzbHkgdG8gYWxsb3cgc2NyaXB0cyB0aGUgb3Bwb3J0dW5pdHkgdG8gZGVsYXkg
cmVhZHkKCQkJcmV0dXJuIHNldFRpbWVvdXQoIGpRdWVyeS5yZWFkeSwgMSApOwoJ
CX0KCgkJLy8gTW96aWxsYSwgT3BlcmEgYW5kIHdlYmtpdCBuaWdodGxpZXMgY3Vy
cmVudGx5IHN1cHBvcnQgdGhpcyBldmVudAoJCWlmICggZG9jdW1lbnQuYWRkRXZl
bnRMaXN0ZW5lciApIHsKCQkJLy8gVXNlIHRoZSBoYW5keSBldmVudCBjYWxsYmFj
awoJCQlkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCAiRE9NQ29udGVudExvYWRl
ZCIsIERPTUNvbnRlbnRMb2FkZWQsIGZhbHNlICk7CgoJCQkvLyBBIGZhbGxiYWNr
IHRvIHdpbmRvdy5vbmxvYWQsIHRoYXQgd2lsbCBhbHdheXMgd29yawoJCQl3aW5k
b3cuYWRkRXZlbnRMaXN0ZW5lciggImxvYWQiLCBqUXVlcnkucmVhZHksIGZhbHNl
ICk7CgoJCS8vIElmIElFIGV2ZW50IG1vZGVsIGlzIHVzZWQKCQl9IGVsc2UgaWYg
KCBkb2N1bWVudC5hdHRhY2hFdmVudCApIHsKCQkJLy8gZW5zdXJlIGZpcmluZyBi
ZWZvcmUgb25sb2FkLAoJCQkvLyBtYXliZSBsYXRlIGJ1dCBzYWZlIGFsc28gZm9y
IGlmcmFtZXMKCQkJZG9jdW1lbnQuYXR0YWNoRXZlbnQoICJvbnJlYWR5c3RhdGVj
aGFuZ2UiLCBET01Db250ZW50TG9hZGVkICk7CgoJCQkvLyBBIGZhbGxiYWNrIHRv
IHdpbmRvdy5vbmxvYWQsIHRoYXQgd2lsbCBhbHdheXMgd29yawoJCQl3aW5kb3cu
YXR0YWNoRXZlbnQoICJvbmxvYWQiLCBqUXVlcnkucmVhZHkgKTsKCgkJCS8vIElm
IElFIGFuZCBub3QgYSBmcmFtZQoJCQkvLyBjb250aW51YWxseSBjaGVjayB0byBz
ZWUgaWYgdGhlIGRvY3VtZW50IGlzIHJlYWR5CgkJCXZhciB0b3BsZXZlbCA9IGZh
bHNlOwoKCQkJdHJ5IHsKCQkJCXRvcGxldmVsID0gd2luZG93LmZyYW1lRWxlbWVu
dCA9PSBudWxsOwoJCQl9IGNhdGNoKGUpIHt9CgoJCQlpZiAoIGRvY3VtZW50LmRv
Y3VtZW50RWxlbWVudC5kb1Njcm9sbCAmJiB0b3BsZXZlbCApIHsKCQkJCWRvU2Ny
b2xsQ2hlY2soKTsKCQkJfQoJCX0KCX0sCgoJLy8gU2VlIHRlc3QvdW5pdC9jb3Jl
LmpzIGZvciBkZXRhaWxzIGNvbmNlcm5pbmcgaXNGdW5jdGlvbi4KCS8vIFNpbmNl
IHZlcnNpb24gMS4zLCBET00gbWV0aG9kcyBhbmQgZnVuY3Rpb25zIGxpa2UgYWxl
cnQKCS8vIGFyZW4ndCBzdXBwb3J0ZWQuIFRoZXkgcmV0dXJuIGZhbHNlIG9uIElF
ICgjMjk2OCkuCglpc0Z1bmN0aW9uOiBmdW5jdGlvbiggb2JqICkgewoJCXJldHVy
biBqUXVlcnkudHlwZShvYmopID09PSAiZnVuY3Rpb24iOwoJfSwKCglpc0FycmF5
OiBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uKCBvYmogKSB7CgkJcmV0dXJuIGpR
dWVyeS50eXBlKG9iaikgPT09ICJhcnJheSI7Cgl9LAoKCWlzV2luZG93OiBmdW5j
dGlvbiggb2JqICkgewoJCXJldHVybiBvYmogIT0gbnVsbCAmJiBvYmogPT0gb2Jq
LndpbmRvdzsKCX0sCgoJaXNOdW1lcmljOiBmdW5jdGlvbiggb2JqICkgewoJCXJl
dHVybiAhaXNOYU4oIHBhcnNlRmxvYXQob2JqKSApICYmIGlzRmluaXRlKCBvYmog
KTsKCX0sCgoJdHlwZTogZnVuY3Rpb24oIG9iaiApIHsKCQlyZXR1cm4gb2JqID09
IG51bGwgPwoJCQlTdHJpbmcoIG9iaiApIDoKCQkJY2xhc3MydHlwZVsgdG9TdHJp
bmcuY2FsbChvYmopIF0gfHwgIm9iamVjdCI7Cgl9LAoKCWlzUGxhaW5PYmplY3Q6
IGZ1bmN0aW9uKCBvYmogKSB7CgkJLy8gTXVzdCBiZSBhbiBPYmplY3QuCgkJLy8g
QmVjYXVzZSBvZiBJRSwgd2UgYWxzbyBoYXZlIHRvIGNoZWNrIHRoZSBwcmVzZW5j
ZSBvZiB0aGUgY29uc3RydWN0b3IgcHJvcGVydHkuCgkJLy8gTWFrZSBzdXJlIHRo
YXQgRE9NIG5vZGVzIGFuZCB3aW5kb3cgb2JqZWN0cyBkb24ndCBwYXNzIHRocm91
Z2gsIGFzIHdlbGwKCQlpZiAoICFvYmogfHwgalF1ZXJ5LnR5cGUob2JqKSAhPT0g
Im9iamVjdCIgfHwgb2JqLm5vZGVUeXBlIHx8IGpRdWVyeS5pc1dpbmRvdyggb2Jq
ICkgKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCXRyeSB7CgkJCS8vIE5vdCBv
d24gY29uc3RydWN0b3IgcHJvcGVydHkgbXVzdCBiZSBPYmplY3QKCQkJaWYgKCBv
YmouY29uc3RydWN0b3IgJiYKCQkJCSFoYXNPd24uY2FsbChvYmosICJjb25zdHJ1
Y3RvciIpICYmCgkJCQkhaGFzT3duLmNhbGwob2JqLmNvbnN0cnVjdG9yLnByb3Rv
dHlwZSwgImlzUHJvdG90eXBlT2YiKSApIHsKCQkJCXJldHVybiBmYWxzZTsKCQkJ
fQoJCX0gY2F0Y2ggKCBlICkgewoJCQkvLyBJRTgsOSBXaWxsIHRocm93IGV4Y2Vw
dGlvbnMgb24gY2VydGFpbiBob3N0IG9iamVjdHMgIzk4OTcKCQkJcmV0dXJuIGZh
bHNlOwoJCX0KCgkJLy8gT3duIHByb3BlcnRpZXMgYXJlIGVudW1lcmF0ZWQgZmly
c3RseSwgc28gdG8gc3BlZWQgdXAsCgkJLy8gaWYgbGFzdCBvbmUgaXMgb3duLCB0
aGVuIGFsbCBwcm9wZXJ0aWVzIGFyZSBvd24uCgoJCXZhciBrZXk7CgkJZm9yICgg
a2V5IGluIG9iaiApIHt9CgoJCXJldHVybiBrZXkgPT09IHVuZGVmaW5lZCB8fCBo
YXNPd24uY2FsbCggb2JqLCBrZXkgKTsKCX0sCgoJaXNFbXB0eU9iamVjdDogZnVu
Y3Rpb24oIG9iaiApIHsKCQlmb3IgKCB2YXIgbmFtZSBpbiBvYmogKSB7CgkJCXJl
dHVybiBmYWxzZTsKCQl9CgkJcmV0dXJuIHRydWU7Cgl9LAoKCWVycm9yOiBmdW5j
dGlvbiggbXNnICkgewoJCXRocm93IG5ldyBFcnJvciggbXNnICk7Cgl9LAoKCXBh
cnNlSlNPTjogZnVuY3Rpb24oIGRhdGEgKSB7CgkJaWYgKCB0eXBlb2YgZGF0YSAh
PT0gInN0cmluZyIgfHwgIWRhdGEgKSB7CgkJCXJldHVybiBudWxsOwoJCX0KCgkJ
Ly8gTWFrZSBzdXJlIGxlYWRpbmcvdHJhaWxpbmcgd2hpdGVzcGFjZSBpcyByZW1v
dmVkIChJRSBjYW4ndCBoYW5kbGUgaXQpCgkJZGF0YSA9IGpRdWVyeS50cmltKCBk
YXRhICk7CgoJCS8vIEF0dGVtcHQgdG8gcGFyc2UgdXNpbmcgdGhlIG5hdGl2ZSBK
U09OIHBhcnNlciBmaXJzdAoJCWlmICggd2luZG93LkpTT04gJiYgd2luZG93LkpT
T04ucGFyc2UgKSB7CgkJCXJldHVybiB3aW5kb3cuSlNPTi5wYXJzZSggZGF0YSAp
OwoJCX0KCgkJLy8gTWFrZSBzdXJlIHRoZSBpbmNvbWluZyBkYXRhIGlzIGFjdHVh
bCBKU09OCgkJLy8gTG9naWMgYm9ycm93ZWQgZnJvbSBodHRwOi8vanNvbi5vcmcv
anNvbjIuanMKCQlpZiAoIHJ2YWxpZGNoYXJzLnRlc3QoIGRhdGEucmVwbGFjZSgg
cnZhbGlkZXNjYXBlLCAiQCIgKQoJCQkucmVwbGFjZSggcnZhbGlkdG9rZW5zLCAi
XSIgKQoJCQkucmVwbGFjZSggcnZhbGlkYnJhY2VzLCAiIikpICkgewoKCQkJcmV0
dXJuICggbmV3IEZ1bmN0aW9uKCAicmV0dXJuICIgKyBkYXRhICkgKSgpOwoKCQl9
CgkJalF1ZXJ5LmVycm9yKCAiSW52YWxpZCBKU09OOiAiICsgZGF0YSApOwoJfSwK
CgkvLyBDcm9zcy1icm93c2VyIHhtbCBwYXJzaW5nCglwYXJzZVhNTDogZnVuY3Rp
b24oIGRhdGEgKSB7CgkJaWYgKCB0eXBlb2YgZGF0YSAhPT0gInN0cmluZyIgfHwg
IWRhdGEgKSB7CgkJCXJldHVybiBudWxsOwoJCX0KCQl2YXIgeG1sLCB0bXA7CgkJ
dHJ5IHsKCQkJaWYgKCB3aW5kb3cuRE9NUGFyc2VyICkgeyAvLyBTdGFuZGFyZAoJ
CQkJdG1wID0gbmV3IERPTVBhcnNlcigpOwoJCQkJeG1sID0gdG1wLnBhcnNlRnJv
bVN0cmluZyggZGF0YSAsICJ0ZXh0L3htbCIgKTsKCQkJfSBlbHNlIHsgLy8gSUUK
CQkJCXhtbCA9IG5ldyBBY3RpdmVYT2JqZWN0KCAiTWljcm9zb2Z0LlhNTERPTSIg
KTsKCQkJCXhtbC5hc3luYyA9ICJmYWxzZSI7CgkJCQl4bWwubG9hZFhNTCggZGF0
YSApOwoJCQl9CgkJfSBjYXRjaCggZSApIHsKCQkJeG1sID0gdW5kZWZpbmVkOwoJ
CX0KCQlpZiAoICF4bWwgfHwgIXhtbC5kb2N1bWVudEVsZW1lbnQgfHwgeG1sLmdl
dEVsZW1lbnRzQnlUYWdOYW1lKCAicGFyc2VyZXJyb3IiICkubGVuZ3RoICkgewoJ
CQlqUXVlcnkuZXJyb3IoICJJbnZhbGlkIFhNTDogIiArIGRhdGEgKTsKCQl9CgkJ
cmV0dXJuIHhtbDsKCX0sCgoJbm9vcDogZnVuY3Rpb24oKSB7fSwKCgkvLyBFdmFs
dWF0ZXMgYSBzY3JpcHQgaW4gYSBnbG9iYWwgY29udGV4dAoJLy8gV29ya2Fyb3Vu
ZHMgYmFzZWQgb24gZmluZGluZ3MgYnkgSmltIERyaXNjb2xsCgkvLyBodHRwOi8v
d2VibG9ncy5qYXZhLm5ldC9ibG9nL2RyaXNjb2xsL2FyY2hpdmUvMjAwOS8wOS8w
OC9ldmFsLWphdmFzY3JpcHQtZ2xvYmFsLWNvbnRleHQKCWdsb2JhbEV2YWw6IGZ1
bmN0aW9uKCBkYXRhICkgewoJCWlmICggZGF0YSAmJiBybm90d2hpdGUudGVzdCgg
ZGF0YSApICkgewoJCQkvLyBXZSB1c2UgZXhlY1NjcmlwdCBvbiBJbnRlcm5ldCBF
eHBsb3JlcgoJCQkvLyBXZSB1c2UgYW4gYW5vbnltb3VzIGZ1bmN0aW9uIHNvIHRo
YXQgY29udGV4dCBpcyB3aW5kb3cKCQkJLy8gcmF0aGVyIHRoYW4galF1ZXJ5IGlu
IEZpcmVmb3gKCQkJKCB3aW5kb3cuZXhlY1NjcmlwdCB8fCBmdW5jdGlvbiggZGF0
YSApIHsKCQkJCXdpbmRvd1sgImV2YWwiIF0uY2FsbCggd2luZG93LCBkYXRhICk7
CgkJCX0gKSggZGF0YSApOwoJCX0KCX0sCgoJLy8gQ29udmVydCBkYXNoZWQgdG8g
Y2FtZWxDYXNlOyB1c2VkIGJ5IHRoZSBjc3MgYW5kIGRhdGEgbW9kdWxlcwoJLy8g
TWljcm9zb2Z0IGZvcmdvdCB0byBodW1wIHRoZWlyIHZlbmRvciBwcmVmaXggKCM5
NTcyKQoJY2FtZWxDYXNlOiBmdW5jdGlvbiggc3RyaW5nICkgewoJCXJldHVybiBz
dHJpbmcucmVwbGFjZSggcm1zUHJlZml4LCAibXMtIiApLnJlcGxhY2UoIHJkYXNo
QWxwaGEsIGZjYW1lbENhc2UgKTsKCX0sCgoJbm9kZU5hbWU6IGZ1bmN0aW9uKCBl
bGVtLCBuYW1lICkgewoJCXJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9k
ZU5hbWUudG9VcHBlckNhc2UoKSA9PT0gbmFtZS50b1VwcGVyQ2FzZSgpOwoJfSwK
CgkvLyBhcmdzIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5CgllYWNoOiBmdW5j
dGlvbiggb2JqZWN0LCBjYWxsYmFjaywgYXJncyApIHsKCQl2YXIgbmFtZSwgaSA9
IDAsCgkJCWxlbmd0aCA9IG9iamVjdC5sZW5ndGgsCgkJCWlzT2JqID0gbGVuZ3Ro
ID09PSB1bmRlZmluZWQgfHwgalF1ZXJ5LmlzRnVuY3Rpb24oIG9iamVjdCApOwoK
CQlpZiAoIGFyZ3MgKSB7CgkJCWlmICggaXNPYmogKSB7CgkJCQlmb3IgKCBuYW1l
IGluIG9iamVjdCApIHsKCQkJCQlpZiAoIGNhbGxiYWNrLmFwcGx5KCBvYmplY3Rb
IG5hbWUgXSwgYXJncyApID09PSBmYWxzZSApIHsKCQkJCQkJYnJlYWs7CgkJCQkJ
fQoJCQkJfQoJCQl9IGVsc2UgewoJCQkJZm9yICggOyBpIDwgbGVuZ3RoOyApIHsK
CQkJCQlpZiAoIGNhbGxiYWNrLmFwcGx5KCBvYmplY3RbIGkrKyBdLCBhcmdzICkg
PT09IGZhbHNlICkgewoJCQkJCQlicmVhazsKCQkJCQl9CgkJCQl9CgkJCX0KCgkJ
Ly8gQSBzcGVjaWFsLCBmYXN0LCBjYXNlIGZvciB0aGUgbW9zdCBjb21tb24gdXNl
IG9mIGVhY2gKCQl9IGVsc2UgewoJCQlpZiAoIGlzT2JqICkgewoJCQkJZm9yICgg
bmFtZSBpbiBvYmplY3QgKSB7CgkJCQkJaWYgKCBjYWxsYmFjay5jYWxsKCBvYmpl
Y3RbIG5hbWUgXSwgbmFtZSwgb2JqZWN0WyBuYW1lIF0gKSA9PT0gZmFsc2UgKSB7
CgkJCQkJCWJyZWFrOwoJCQkJCX0KCQkJCX0KCQkJfSBlbHNlIHsKCQkJCWZvciAo
IDsgaSA8IGxlbmd0aDsgKSB7CgkJCQkJaWYgKCBjYWxsYmFjay5jYWxsKCBvYmpl
Y3RbIGkgXSwgaSwgb2JqZWN0WyBpKysgXSApID09PSBmYWxzZSApIHsKCQkJCQkJ
YnJlYWs7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoKCQlyZXR1cm4gb2JqZWN0OwoJ
fSwKCgkvLyBVc2UgbmF0aXZlIFN0cmluZy50cmltIGZ1bmN0aW9uIHdoZXJldmVy
IHBvc3NpYmxlCgl0cmltOiB0cmltID8KCQlmdW5jdGlvbiggdGV4dCApIHsKCQkJ
cmV0dXJuIHRleHQgPT0gbnVsbCA/CgkJCQkiIiA6CgkJCQl0cmltLmNhbGwoIHRl
eHQgKTsKCQl9IDoKCgkJLy8gT3RoZXJ3aXNlIHVzZSBvdXIgb3duIHRyaW1taW5n
IGZ1bmN0aW9uYWxpdHkKCQlmdW5jdGlvbiggdGV4dCApIHsKCQkJcmV0dXJuIHRl
eHQgPT0gbnVsbCA/CgkJCQkiIiA6CgkJCQl0ZXh0LnRvU3RyaW5nKCkucmVwbGFj
ZSggdHJpbUxlZnQsICIiICkucmVwbGFjZSggdHJpbVJpZ2h0LCAiIiApOwoJCX0s
CgoJLy8gcmVzdWx0cyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seQoJbWFrZUFy
cmF5OiBmdW5jdGlvbiggYXJyYXksIHJlc3VsdHMgKSB7CgkJdmFyIHJldCA9IHJl
c3VsdHMgfHwgW107CgoJCWlmICggYXJyYXkgIT0gbnVsbCApIHsKCQkJLy8gVGhl
IHdpbmRvdywgc3RyaW5ncyAoYW5kIGZ1bmN0aW9ucykgYWxzbyBoYXZlICdsZW5n
dGgnCgkJCS8vIFR3ZWFrZWQgbG9naWMgc2xpZ2h0bHkgdG8gaGFuZGxlIEJsYWNr
YmVycnkgNC43IFJlZ0V4cCBpc3N1ZXMgIzY5MzAKCQkJdmFyIHR5cGUgPSBqUXVl
cnkudHlwZSggYXJyYXkgKTsKCgkJCWlmICggYXJyYXkubGVuZ3RoID09IG51bGwg
fHwgdHlwZSA9PT0gInN0cmluZyIgfHwgdHlwZSA9PT0gImZ1bmN0aW9uIiB8fCB0
eXBlID09PSAicmVnZXhwIiB8fCBqUXVlcnkuaXNXaW5kb3coIGFycmF5ICkgKSB7
CgkJCQlwdXNoLmNhbGwoIHJldCwgYXJyYXkgKTsKCQkJfSBlbHNlIHsKCQkJCWpR
dWVyeS5tZXJnZSggcmV0LCBhcnJheSApOwoJCQl9CgkJfQoKCQlyZXR1cm4gcmV0
OwoJfSwKCglpbkFycmF5OiBmdW5jdGlvbiggZWxlbSwgYXJyYXksIGkgKSB7CgkJ
dmFyIGxlbjsKCgkJaWYgKCBhcnJheSApIHsKCQkJaWYgKCBpbmRleE9mICkgewoJ
CQkJcmV0dXJuIGluZGV4T2YuY2FsbCggYXJyYXksIGVsZW0sIGkgKTsKCQkJfQoK
CQkJbGVuID0gYXJyYXkubGVuZ3RoOwoJCQlpID0gaSA/IGkgPCAwID8gTWF0aC5t
YXgoIDAsIGxlbiArIGkgKSA6IGkgOiAwOwoKCQkJZm9yICggOyBpIDwgbGVuOyBp
KysgKSB7CgkJCQkvLyBTa2lwIGFjY2Vzc2luZyBpbiBzcGFyc2UgYXJyYXlzCgkJ
CQlpZiAoIGkgaW4gYXJyYXkgJiYgYXJyYXlbIGkgXSA9PT0gZWxlbSApIHsKCQkJ
CQlyZXR1cm4gaTsKCQkJCX0KCQkJfQoJCX0KCgkJcmV0dXJuIC0xOwoJfSwKCglt
ZXJnZTogZnVuY3Rpb24oIGZpcnN0LCBzZWNvbmQgKSB7CgkJdmFyIGkgPSBmaXJz
dC5sZW5ndGgsCgkJCWogPSAwOwoKCQlpZiAoIHR5cGVvZiBzZWNvbmQubGVuZ3Ro
ID09PSAibnVtYmVyIiApIHsKCQkJZm9yICggdmFyIGwgPSBzZWNvbmQubGVuZ3Ro
OyBqIDwgbDsgaisrICkgewoJCQkJZmlyc3RbIGkrKyBdID0gc2Vjb25kWyBqIF07
CgkJCX0KCgkJfSBlbHNlIHsKCQkJd2hpbGUgKCBzZWNvbmRbal0gIT09IHVuZGVm
aW5lZCApIHsKCQkJCWZpcnN0WyBpKysgXSA9IHNlY29uZFsgaisrIF07CgkJCX0K
CQl9CgoJCWZpcnN0Lmxlbmd0aCA9IGk7CgoJCXJldHVybiBmaXJzdDsKCX0sCgoJ
Z3JlcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgaW52ICkgewoJCXZhciBy
ZXQgPSBbXSwgcmV0VmFsOwoJCWludiA9ICEhaW52OwoKCQkvLyBHbyB0aHJvdWdo
IHRoZSBhcnJheSwgb25seSBzYXZpbmcgdGhlIGl0ZW1zCgkJLy8gdGhhdCBwYXNz
IHRoZSB2YWxpZGF0b3IgZnVuY3Rpb24KCQlmb3IgKCB2YXIgaSA9IDAsIGxlbmd0
aCA9IGVsZW1zLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrICkgewoJCQlyZXRWYWwg
PSAhIWNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpICk7CgkJCWlmICggaW52ICE9PSBy
ZXRWYWwgKSB7CgkJCQlyZXQucHVzaCggZWxlbXNbIGkgXSApOwoJCQl9CgkJfQoK
CQlyZXR1cm4gcmV0OwoJfSwKCgkvLyBhcmcgaXMgZm9yIGludGVybmFsIHVzYWdl
IG9ubHkKCW1hcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgYXJnICkgewoJ
CXZhciB2YWx1ZSwga2V5LCByZXQgPSBbXSwKCQkJaSA9IDAsCgkJCWxlbmd0aCA9
IGVsZW1zLmxlbmd0aCwKCQkJLy8ganF1ZXJ5IG9iamVjdHMgYXJlIHRyZWF0ZWQg
YXMgYXJyYXlzCgkJCWlzQXJyYXkgPSBlbGVtcyBpbnN0YW5jZW9mIGpRdWVyeSB8
fCBsZW5ndGggIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgbGVuZ3RoID09PSAibnVt
YmVyIiAmJiAoICggbGVuZ3RoID4gMCAmJiBlbGVtc1sgMCBdICYmIGVsZW1zWyBs
ZW5ndGggLTEgXSApIHx8IGxlbmd0aCA9PT0gMCB8fCBqUXVlcnkuaXNBcnJheSgg
ZWxlbXMgKSApIDsKCgkJLy8gR28gdGhyb3VnaCB0aGUgYXJyYXksIHRyYW5zbGF0
aW5nIGVhY2ggb2YgdGhlIGl0ZW1zIHRvIHRoZWlyCgkJaWYgKCBpc0FycmF5ICkg
ewoJCQlmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHsKCQkJCXZhbHVlID0gY2Fs
bGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApOwoKCQkJCWlmICggdmFsdWUgIT0g
bnVsbCApIHsKCQkJCQlyZXRbIHJldC5sZW5ndGggXSA9IHZhbHVlOwoJCQkJfQoJ
CQl9CgoJCS8vIEdvIHRocm91Z2ggZXZlcnkga2V5IG9uIHRoZSBvYmplY3QsCgkJ
fSBlbHNlIHsKCQkJZm9yICgga2V5IGluIGVsZW1zICkgewoJCQkJdmFsdWUgPSBj
YWxsYmFjayggZWxlbXNbIGtleSBdLCBrZXksIGFyZyApOwoKCQkJCWlmICggdmFs
dWUgIT0gbnVsbCApIHsKCQkJCQlyZXRbIHJldC5sZW5ndGggXSA9IHZhbHVlOwoJ
CQkJfQoJCQl9CgkJfQoKCQkvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzCgkJ
cmV0dXJuIHJldC5jb25jYXQuYXBwbHkoIFtdLCByZXQgKTsKCX0sCgoJLy8gQSBn
bG9iYWwgR1VJRCBjb3VudGVyIGZvciBvYmplY3RzCglndWlkOiAxLAoKCS8vIEJp
bmQgYSBmdW5jdGlvbiB0byBhIGNvbnRleHQsIG9wdGlvbmFsbHkgcGFydGlhbGx5
IGFwcGx5aW5nIGFueQoJLy8gYXJndW1lbnRzLgoJcHJveHk6IGZ1bmN0aW9uKCBm
biwgY29udGV4dCApIHsKCQlpZiAoIHR5cGVvZiBjb250ZXh0ID09PSAic3RyaW5n
IiApIHsKCQkJdmFyIHRtcCA9IGZuWyBjb250ZXh0IF07CgkJCWNvbnRleHQgPSBm
bjsKCQkJZm4gPSB0bXA7CgkJfQoKCQkvLyBRdWljayBjaGVjayB0byBkZXRlcm1p
bmUgaWYgdGFyZ2V0IGlzIGNhbGxhYmxlLCBpbiB0aGUgc3BlYwoJCS8vIHRoaXMg
dGhyb3dzIGEgVHlwZUVycm9yLCBidXQgd2Ugd2lsbCBqdXN0IHJldHVybiB1bmRl
ZmluZWQuCgkJaWYgKCAhalF1ZXJ5LmlzRnVuY3Rpb24oIGZuICkgKSB7CgkJCXJl
dHVybiB1bmRlZmluZWQ7CgkJfQoKCQkvLyBTaW11bGF0ZWQgYmluZAoJCXZhciBh
cmdzID0gc2xpY2UuY2FsbCggYXJndW1lbnRzLCAyICksCgkJCXByb3h5ID0gZnVu
Y3Rpb24oKSB7CgkJCQlyZXR1cm4gZm4uYXBwbHkoIGNvbnRleHQsIGFyZ3MuY29u
Y2F0KCBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSApICk7CgkJCX07CgoJCS8vIFNl
dCB0aGUgZ3VpZCBvZiB1bmlxdWUgaGFuZGxlciB0byB0aGUgc2FtZSBvZiBvcmln
aW5hbCBoYW5kbGVyLCBzbyBpdCBjYW4gYmUgcmVtb3ZlZAoJCXByb3h5Lmd1aWQg
PSBmbi5ndWlkID0gZm4uZ3VpZCB8fCBwcm94eS5ndWlkIHx8IGpRdWVyeS5ndWlk
Kys7CgoJCXJldHVybiBwcm94eTsKCX0sCgoJLy8gTXV0aWZ1bmN0aW9uYWwgbWV0
aG9kIHRvIGdldCBhbmQgc2V0IHZhbHVlcyB0byBhIGNvbGxlY3Rpb24KCS8vIFRo
ZSB2YWx1ZS9zIGNhbiBvcHRpb25hbGx5IGJlIGV4ZWN1dGVkIGlmIGl0J3MgYSBm
dW5jdGlvbgoJYWNjZXNzOiBmdW5jdGlvbiggZWxlbXMsIGZuLCBrZXksIHZhbHVl
LCBjaGFpbmFibGUsIGVtcHR5R2V0LCBwYXNzICkgewoJCXZhciBleGVjLAoJCQli
dWxrID0ga2V5ID09IG51bGwsCgkJCWkgPSAwLAoJCQlsZW5ndGggPSBlbGVtcy5s
ZW5ndGg7CgoJCS8vIFNldHMgbWFueSB2YWx1ZXMKCQlpZiAoIGtleSAmJiB0eXBl
b2Yga2V5ID09PSAib2JqZWN0IiApIHsKCQkJZm9yICggaSBpbiBrZXkgKSB7CgkJ
CQlqUXVlcnkuYWNjZXNzKCBlbGVtcywgZm4sIGksIGtleVtpXSwgMSwgZW1wdHlH
ZXQsIHZhbHVlICk7CgkJCX0KCQkJY2hhaW5hYmxlID0gMTsKCgkJLy8gU2V0cyBv
bmUgdmFsdWUKCQl9IGVsc2UgaWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkgewoJ
CQkvLyBPcHRpb25hbGx5LCBmdW5jdGlvbiB2YWx1ZXMgZ2V0IGV4ZWN1dGVkIGlm
IGV4ZWMgaXMgdHJ1ZQoJCQlleGVjID0gcGFzcyA9PT0gdW5kZWZpbmVkICYmIGpR
dWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApOwoKCQkJaWYgKCBidWxrICkgewoJCQkJ
Ly8gQnVsayBvcGVyYXRpb25zIG9ubHkgaXRlcmF0ZSB3aGVuIGV4ZWN1dGluZyBm
dW5jdGlvbiB2YWx1ZXMKCQkJCWlmICggZXhlYyApIHsKCQkJCQlleGVjID0gZm47
CgkJCQkJZm4gPSBmdW5jdGlvbiggZWxlbSwga2V5LCB2YWx1ZSApIHsKCQkJCQkJ
cmV0dXJuIGV4ZWMuY2FsbCggalF1ZXJ5KCBlbGVtICksIHZhbHVlICk7CgkJCQkJ
fTsKCgkJCQkvLyBPdGhlcndpc2UgdGhleSBydW4gYWdhaW5zdCB0aGUgZW50aXJl
IHNldAoJCQkJfSBlbHNlIHsKCQkJCQlmbi5jYWxsKCBlbGVtcywgdmFsdWUgKTsK
CQkJCQlmbiA9IG51bGw7CgkJCQl9CgkJCX0KCgkJCWlmICggZm4gKSB7CgkJCQlm
b3IgKDsgaSA8IGxlbmd0aDsgaSsrICkgewoJCQkJCWZuKCBlbGVtc1tpXSwga2V5
LCBleGVjID8gdmFsdWUuY2FsbCggZWxlbXNbaV0sIGksIGZuKCBlbGVtc1tpXSwg
a2V5ICkgKSA6IHZhbHVlLCBwYXNzICk7CgkJCQl9CgkJCX0KCgkJCWNoYWluYWJs
ZSA9IDE7CgkJfQoKCQlyZXR1cm4gY2hhaW5hYmxlID8KCQkJZWxlbXMgOgoKCQkJ
Ly8gR2V0cwoJCQlidWxrID8KCQkJCWZuLmNhbGwoIGVsZW1zICkgOgoJCQkJbGVu
Z3RoID8gZm4oIGVsZW1zWzBdLCBrZXkgKSA6IGVtcHR5R2V0OwoJfSwKCglub3c6
IGZ1bmN0aW9uKCkgewoJCXJldHVybiAoIG5ldyBEYXRlKCkgKS5nZXRUaW1lKCk7
Cgl9LAoKCS8vIFVzZSBvZiBqUXVlcnkuYnJvd3NlciBpcyBmcm93bmVkIHVwb24u
CgkvLyBNb3JlIGRldGFpbHM6IGh0dHA6Ly9kb2NzLmpxdWVyeS5jb20vVXRpbGl0
aWVzL2pRdWVyeS5icm93c2VyCgl1YU1hdGNoOiBmdW5jdGlvbiggdWEgKSB7CgkJ
dWEgPSB1YS50b0xvd2VyQ2FzZSgpOwoKCQl2YXIgbWF0Y2ggPSByd2Via2l0LmV4
ZWMoIHVhICkgfHwKCQkJcm9wZXJhLmV4ZWMoIHVhICkgfHwKCQkJcm1zaWUuZXhl
YyggdWEgKSB8fAoJCQl1YS5pbmRleE9mKCJjb21wYXRpYmxlIikgPCAwICYmIHJt
b3ppbGxhLmV4ZWMoIHVhICkgfHwKCQkJW107CgoJCXJldHVybiB7IGJyb3dzZXI6
IG1hdGNoWzFdIHx8ICIiLCB2ZXJzaW9uOiBtYXRjaFsyXSB8fCAiMCIgfTsKCX0s
CgoJc3ViOiBmdW5jdGlvbigpIHsKCQlmdW5jdGlvbiBqUXVlcnlTdWIoIHNlbGVj
dG9yLCBjb250ZXh0ICkgewoJCQlyZXR1cm4gbmV3IGpRdWVyeVN1Yi5mbi5pbml0
KCBzZWxlY3RvciwgY29udGV4dCApOwoJCX0KCQlqUXVlcnkuZXh0ZW5kKCB0cnVl
LCBqUXVlcnlTdWIsIHRoaXMgKTsKCQlqUXVlcnlTdWIuc3VwZXJjbGFzcyA9IHRo
aXM7CgkJalF1ZXJ5U3ViLmZuID0galF1ZXJ5U3ViLnByb3RvdHlwZSA9IHRoaXMo
KTsKCQlqUXVlcnlTdWIuZm4uY29uc3RydWN0b3IgPSBqUXVlcnlTdWI7CgkJalF1
ZXJ5U3ViLnN1YiA9IHRoaXMuc3ViOwoJCWpRdWVyeVN1Yi5mbi5pbml0ID0gZnVu
Y3Rpb24gaW5pdCggc2VsZWN0b3IsIGNvbnRleHQgKSB7CgkJCWlmICggY29udGV4
dCAmJiBjb250ZXh0IGluc3RhbmNlb2YgalF1ZXJ5ICYmICEoY29udGV4dCBpbnN0
YW5jZW9mIGpRdWVyeVN1YikgKSB7CgkJCQljb250ZXh0ID0galF1ZXJ5U3ViKCBj
b250ZXh0ICk7CgkJCX0KCgkJCXJldHVybiBqUXVlcnkuZm4uaW5pdC5jYWxsKCB0
aGlzLCBzZWxlY3RvciwgY29udGV4dCwgcm9vdGpRdWVyeVN1YiApOwoJCX07CgkJ
alF1ZXJ5U3ViLmZuLmluaXQucHJvdG90eXBlID0galF1ZXJ5U3ViLmZuOwoJCXZh
ciByb290alF1ZXJ5U3ViID0galF1ZXJ5U3ViKGRvY3VtZW50KTsKCQlyZXR1cm4g
alF1ZXJ5U3ViOwoJfSwKCglicm93c2VyOiB7fQp9KTsKCi8vIFBvcHVsYXRlIHRo
ZSBjbGFzczJ0eXBlIG1hcApqUXVlcnkuZWFjaCgiQm9vbGVhbiBOdW1iZXIgU3Ry
aW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCIuc3BsaXQoIiAi
KSwgZnVuY3Rpb24oaSwgbmFtZSkgewoJY2xhc3MydHlwZVsgIltvYmplY3QgIiAr
IG5hbWUgKyAiXSIgXSA9IG5hbWUudG9Mb3dlckNhc2UoKTsKfSk7Cgpicm93c2Vy
TWF0Y2ggPSBqUXVlcnkudWFNYXRjaCggdXNlckFnZW50ICk7CmlmICggYnJvd3Nl
ck1hdGNoLmJyb3dzZXIgKSB7CglqUXVlcnkuYnJvd3NlclsgYnJvd3Nlck1hdGNo
LmJyb3dzZXIgXSA9IHRydWU7CglqUXVlcnkuYnJvd3Nlci52ZXJzaW9uID0gYnJv
d3Nlck1hdGNoLnZlcnNpb247Cn0KCi8vIERlcHJlY2F0ZWQsIHVzZSBqUXVlcnku
YnJvd3Nlci53ZWJraXQgaW5zdGVhZAppZiAoIGpRdWVyeS5icm93c2VyLndlYmtp
dCApIHsKCWpRdWVyeS5icm93c2VyLnNhZmFyaSA9IHRydWU7Cn0KCi8vIElFIGRv
ZXNuJ3QgbWF0Y2ggbm9uLWJyZWFraW5nIHNwYWNlcyB3aXRoIFxzCmlmICggcm5v
dHdoaXRlLnRlc3QoICJceEEwIiApICkgewoJdHJpbUxlZnQgPSAvXltcc1x4QTBd
Ky87Cgl0cmltUmlnaHQgPSAvW1xzXHhBMF0rJC87Cn0KCi8vIEFsbCBqUXVlcnkg
b2JqZWN0cyBzaG91bGQgcG9pbnQgYmFjayB0byB0aGVzZQpyb290alF1ZXJ5ID0g
alF1ZXJ5KGRvY3VtZW50KTsKCi8vIENsZWFudXAgZnVuY3Rpb25zIGZvciB0aGUg
ZG9jdW1lbnQgcmVhZHkgbWV0aG9kCmlmICggZG9jdW1lbnQuYWRkRXZlbnRMaXN0
ZW5lciApIHsKCURPTUNvbnRlbnRMb2FkZWQgPSBmdW5jdGlvbigpIHsKCQlkb2N1
bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCAiRE9NQ29udGVudExvYWRlZCIsIERP
TUNvbnRlbnRMb2FkZWQsIGZhbHNlICk7CgkJalF1ZXJ5LnJlYWR5KCk7Cgl9OwoK
fSBlbHNlIGlmICggZG9jdW1lbnQuYXR0YWNoRXZlbnQgKSB7CglET01Db250ZW50
TG9hZGVkID0gZnVuY3Rpb24oKSB7CgkJLy8gTWFrZSBzdXJlIGJvZHkgZXhpc3Rz
LCBhdCBsZWFzdCwgaW4gY2FzZSBJRSBnZXRzIGEgbGl0dGxlIG92ZXJ6ZWFsb3Vz
ICh0aWNrZXQgIzU0NDMpLgoJCWlmICggZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0g
ImNvbXBsZXRlIiApIHsKCQkJZG9jdW1lbnQuZGV0YWNoRXZlbnQoICJvbnJlYWR5
c3RhdGVjaGFuZ2UiLCBET01Db250ZW50TG9hZGVkICk7CgkJCWpRdWVyeS5yZWFk
eSgpOwoJCX0KCX07Cn0KCi8vIFRoZSBET00gcmVhZHkgY2hlY2sgZm9yIEludGVy
bmV0IEV4cGxvcmVyCmZ1bmN0aW9uIGRvU2Nyb2xsQ2hlY2soKSB7CglpZiAoIGpR
dWVyeS5pc1JlYWR5ICkgewoJCXJldHVybjsKCX0KCgl0cnkgewoJCS8vIElmIElF
IGlzIHVzZWQsIHVzZSB0aGUgdHJpY2sgYnkgRGllZ28gUGVyaW5pCgkJLy8gaHR0
cDovL2phdmFzY3JpcHQubndib3guY29tL0lFQ29udGVudExvYWRlZC8KCQlkb2N1
bWVudC5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGwoImxlZnQiKTsKCX0gY2F0Y2go
ZSkgewoJCXNldFRpbWVvdXQoIGRvU2Nyb2xsQ2hlY2ssIDEgKTsKCQlyZXR1cm47
Cgl9CgoJLy8gYW5kIGV4ZWN1dGUgYW55IHdhaXRpbmcgZnVuY3Rpb25zCglqUXVl
cnkucmVhZHkoKTsKfQoKcmV0dXJuIGpRdWVyeTsKCn0pKCk7CgoKLy8gU3RyaW5n
IHRvIE9iamVjdCBmbGFncyBmb3JtYXQgY2FjaGUKdmFyIGZsYWdzQ2FjaGUgPSB7
fTsKCi8vIENvbnZlcnQgU3RyaW5nLWZvcm1hdHRlZCBmbGFncyBpbnRvIE9iamVj
dC1mb3JtYXR0ZWQgb25lcyBhbmQgc3RvcmUgaW4gY2FjaGUKZnVuY3Rpb24gY3Jl
YXRlRmxhZ3MoIGZsYWdzICkgewoJdmFyIG9iamVjdCA9IGZsYWdzQ2FjaGVbIGZs
YWdzIF0gPSB7fSwKCQlpLCBsZW5ndGg7CglmbGFncyA9IGZsYWdzLnNwbGl0KCAv
XHMrLyApOwoJZm9yICggaSA9IDAsIGxlbmd0aCA9IGZsYWdzLmxlbmd0aDsgaSA8
IGxlbmd0aDsgaSsrICkgewoJCW9iamVjdFsgZmxhZ3NbaV0gXSA9IHRydWU7Cgl9
CglyZXR1cm4gb2JqZWN0Owp9CgovKgogKiBDcmVhdGUgYSBjYWxsYmFjayBsaXN0
IHVzaW5nIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczoKICoKICoJZmxhZ3M6CWFu
IG9wdGlvbmFsIGxpc3Qgb2Ygc3BhY2Utc2VwYXJhdGVkIGZsYWdzIHRoYXQgd2ls
bCBjaGFuZ2UgaG93CiAqCQkJdGhlIGNhbGxiYWNrIGxpc3QgYmVoYXZlcwogKgog
KiBCeSBkZWZhdWx0IGEgY2FsbGJhY2sgbGlzdCB3aWxsIGFjdCBsaWtlIGFuIGV2
ZW50IGNhbGxiYWNrIGxpc3QgYW5kIGNhbiBiZQogKiAiZmlyZWQiIG11bHRpcGxl
IHRpbWVzLgogKgogKiBQb3NzaWJsZSBmbGFnczoKICoKICoJb25jZToJCQl3aWxs
IGVuc3VyZSB0aGUgY2FsbGJhY2sgbGlzdCBjYW4gb25seSBiZSBmaXJlZCBvbmNl
IChsaWtlIGEgRGVmZXJyZWQpCiAqCiAqCW1lbW9yeToJCQl3aWxsIGtlZXAgdHJh
Y2sgb2YgcHJldmlvdXMgdmFsdWVzIGFuZCB3aWxsIGNhbGwgYW55IGNhbGxiYWNr
IGFkZGVkCiAqCQkJCQlhZnRlciB0aGUgbGlzdCBoYXMgYmVlbiBmaXJlZCByaWdo
dCBhd2F5IHdpdGggdGhlIGxhdGVzdCAibWVtb3JpemVkIgogKgkJCQkJdmFsdWVz
IChsaWtlIGEgRGVmZXJyZWQpCiAqCiAqCXVuaXF1ZToJCQl3aWxsIGVuc3VyZSBh
IGNhbGxiYWNrIGNhbiBvbmx5IGJlIGFkZGVkIG9uY2UgKG5vIGR1cGxpY2F0ZSBp
biB0aGUgbGlzdCkKICoKICoJc3RvcE9uRmFsc2U6CWludGVycnVwdCBjYWxsaW5n
cyB3aGVuIGEgY2FsbGJhY2sgcmV0dXJucyBmYWxzZQogKgogKi8KalF1ZXJ5LkNh
bGxiYWNrcyA9IGZ1bmN0aW9uKCBmbGFncyApIHsKCgkvLyBDb252ZXJ0IGZsYWdz
IGZyb20gU3RyaW5nLWZvcm1hdHRlZCB0byBPYmplY3QtZm9ybWF0dGVkCgkvLyAo
d2UgY2hlY2sgaW4gY2FjaGUgZmlyc3QpCglmbGFncyA9IGZsYWdzID8gKCBmbGFn
c0NhY2hlWyBmbGFncyBdIHx8IGNyZWF0ZUZsYWdzKCBmbGFncyApICkgOiB7fTsK
Cgl2YXIgLy8gQWN0dWFsIGNhbGxiYWNrIGxpc3QKCQlsaXN0ID0gW10sCgkJLy8g
U3RhY2sgb2YgZmlyZSBjYWxscyBmb3IgcmVwZWF0YWJsZSBsaXN0cwoJCXN0YWNr
ID0gW10sCgkJLy8gTGFzdCBmaXJlIHZhbHVlIChmb3Igbm9uLWZvcmdldHRhYmxl
IGxpc3RzKQoJCW1lbW9yeSwKCQkvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCB3YXMg
YWxyZWFkeSBmaXJlZAoJCWZpcmVkLAoJCS8vIEZsYWcgdG8ga25vdyBpZiBsaXN0
IGlzIGN1cnJlbnRseSBmaXJpbmcKCQlmaXJpbmcsCgkJLy8gRmlyc3QgY2FsbGJh
Y2sgdG8gZmlyZSAodXNlZCBpbnRlcm5hbGx5IGJ5IGFkZCBhbmQgZmlyZVdpdGgp
CgkJZmlyaW5nU3RhcnQsCgkJLy8gRW5kIG9mIHRoZSBsb29wIHdoZW4gZmlyaW5n
CgkJZmlyaW5nTGVuZ3RoLAoJCS8vIEluZGV4IG9mIGN1cnJlbnRseSBmaXJpbmcg
Y2FsbGJhY2sgKG1vZGlmaWVkIGJ5IHJlbW92ZSBpZiBuZWVkZWQpCgkJZmlyaW5n
SW5kZXgsCgkJLy8gQWRkIG9uZSBvciBzZXZlcmFsIGNhbGxiYWNrcyB0byB0aGUg
bGlzdAoJCWFkZCA9IGZ1bmN0aW9uKCBhcmdzICkgewoJCQl2YXIgaSwKCQkJCWxl
bmd0aCwKCQkJCWVsZW0sCgkJCQl0eXBlLAoJCQkJYWN0dWFsOwoJCQlmb3IgKCBp
ID0gMCwgbGVuZ3RoID0gYXJncy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKyApIHsK
CQkJCWVsZW0gPSBhcmdzWyBpIF07CgkJCQl0eXBlID0galF1ZXJ5LnR5cGUoIGVs
ZW0gKTsKCQkJCWlmICggdHlwZSA9PT0gImFycmF5IiApIHsKCQkJCQkvLyBJbnNw
ZWN0IHJlY3Vyc2l2ZWx5CgkJCQkJYWRkKCBlbGVtICk7CgkJCQl9IGVsc2UgaWYg
KCB0eXBlID09PSAiZnVuY3Rpb24iICkgewoJCQkJCS8vIEFkZCBpZiBub3QgaW4g
dW5pcXVlIG1vZGUgYW5kIGNhbGxiYWNrIGlzIG5vdCBpbgoJCQkJCWlmICggIWZs
YWdzLnVuaXF1ZSB8fCAhc2VsZi5oYXMoIGVsZW0gKSApIHsKCQkJCQkJbGlzdC5w
dXNoKCBlbGVtICk7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfSwKCQkvLyBGaXJlIGNh
bGxiYWNrcwoJCWZpcmUgPSBmdW5jdGlvbiggY29udGV4dCwgYXJncyApIHsKCQkJ
YXJncyA9IGFyZ3MgfHwgW107CgkJCW1lbW9yeSA9ICFmbGFncy5tZW1vcnkgfHwg
WyBjb250ZXh0LCBhcmdzIF07CgkJCWZpcmVkID0gdHJ1ZTsKCQkJZmlyaW5nID0g
dHJ1ZTsKCQkJZmlyaW5nSW5kZXggPSBmaXJpbmdTdGFydCB8fCAwOwoJCQlmaXJp
bmdTdGFydCA9IDA7CgkJCWZpcmluZ0xlbmd0aCA9IGxpc3QubGVuZ3RoOwoJCQlm
b3IgKCA7IGxpc3QgJiYgZmlyaW5nSW5kZXggPCBmaXJpbmdMZW5ndGg7IGZpcmlu
Z0luZGV4KysgKSB7CgkJCQlpZiAoIGxpc3RbIGZpcmluZ0luZGV4IF0uYXBwbHko
IGNvbnRleHQsIGFyZ3MgKSA9PT0gZmFsc2UgJiYgZmxhZ3Muc3RvcE9uRmFsc2Ug
KSB7CgkJCQkJbWVtb3J5ID0gdHJ1ZTsgLy8gTWFyayBhcyBoYWx0ZWQKCQkJCQli
cmVhazsKCQkJCX0KCQkJfQoJCQlmaXJpbmcgPSBmYWxzZTsKCQkJaWYgKCBsaXN0
ICkgewoJCQkJaWYgKCAhZmxhZ3Mub25jZSApIHsKCQkJCQlpZiAoIHN0YWNrICYm
IHN0YWNrLmxlbmd0aCApIHsKCQkJCQkJbWVtb3J5ID0gc3RhY2suc2hpZnQoKTsK
CQkJCQkJc2VsZi5maXJlV2l0aCggbWVtb3J5WyAwIF0sIG1lbW9yeVsgMSBdICk7
CgkJCQkJfQoJCQkJfSBlbHNlIGlmICggbWVtb3J5ID09PSB0cnVlICkgewoJCQkJ
CXNlbGYuZGlzYWJsZSgpOwoJCQkJfSBlbHNlIHsKCQkJCQlsaXN0ID0gW107CgkJ
CQl9CgkJCX0KCQl9LAoJCS8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0CgkJc2Vs
ZiA9IHsKCQkJLy8gQWRkIGEgY2FsbGJhY2sgb3IgYSBjb2xsZWN0aW9uIG9mIGNh
bGxiYWNrcyB0byB0aGUgbGlzdAoJCQlhZGQ6IGZ1bmN0aW9uKCkgewoJCQkJaWYg
KCBsaXN0ICkgewoJCQkJCXZhciBsZW5ndGggPSBsaXN0Lmxlbmd0aDsKCQkJCQlh
ZGQoIGFyZ3VtZW50cyApOwoJCQkJCS8vIERvIHdlIG5lZWQgdG8gYWRkIHRoZSBj
YWxsYmFja3MgdG8gdGhlCgkJCQkJLy8gY3VycmVudCBmaXJpbmcgYmF0Y2g/CgkJ
CQkJaWYgKCBmaXJpbmcgKSB7CgkJCQkJCWZpcmluZ0xlbmd0aCA9IGxpc3QubGVu
Z3RoOwoJCQkJCS8vIFdpdGggbWVtb3J5LCBpZiB3ZSdyZSBub3QgZmlyaW5nIHRo
ZW4KCQkJCQkvLyB3ZSBzaG91bGQgY2FsbCByaWdodCBhd2F5LCB1bmxlc3MgcHJl
dmlvdXMKCQkJCQkvLyBmaXJpbmcgd2FzIGhhbHRlZCAoc3RvcE9uRmFsc2UpCgkJ
CQkJfSBlbHNlIGlmICggbWVtb3J5ICYmIG1lbW9yeSAhPT0gdHJ1ZSApIHsKCQkJ
CQkJZmlyaW5nU3RhcnQgPSBsZW5ndGg7CgkJCQkJCWZpcmUoIG1lbW9yeVsgMCBd
LCBtZW1vcnlbIDEgXSApOwoJCQkJCX0KCQkJCX0KCQkJCXJldHVybiB0aGlzOwoJ
CQl9LAoJCQkvLyBSZW1vdmUgYSBjYWxsYmFjayBmcm9tIHRoZSBsaXN0CgkJCXJl
bW92ZTogZnVuY3Rpb24oKSB7CgkJCQlpZiAoIGxpc3QgKSB7CgkJCQkJdmFyIGFy
Z3MgPSBhcmd1bWVudHMsCgkJCQkJCWFyZ0luZGV4ID0gMCwKCQkJCQkJYXJnTGVu
Z3RoID0gYXJncy5sZW5ndGg7CgkJCQkJZm9yICggOyBhcmdJbmRleCA8IGFyZ0xl
bmd0aCA7IGFyZ0luZGV4KysgKSB7CgkJCQkJCWZvciAoIHZhciBpID0gMDsgaSA8
IGxpc3QubGVuZ3RoOyBpKysgKSB7CgkJCQkJCQlpZiAoIGFyZ3NbIGFyZ0luZGV4
IF0gPT09IGxpc3RbIGkgXSApIHsKCQkJCQkJCQkvLyBIYW5kbGUgZmlyaW5nSW5k
ZXggYW5kIGZpcmluZ0xlbmd0aAoJCQkJCQkJCWlmICggZmlyaW5nICkgewoJCQkJ
CQkJCQlpZiAoIGkgPD0gZmlyaW5nTGVuZ3RoICkgewoJCQkJCQkJCQkJZmlyaW5n
TGVuZ3RoLS07CgkJCQkJCQkJCQlpZiAoIGkgPD0gZmlyaW5nSW5kZXggKSB7CgkJ
CQkJCQkJCQkJZmlyaW5nSW5kZXgtLTsKCQkJCQkJCQkJCX0KCQkJCQkJCQkJfQoJ
CQkJCQkJCX0KCQkJCQkJCQkvLyBSZW1vdmUgdGhlIGVsZW1lbnQKCQkJCQkJCQls
aXN0LnNwbGljZSggaS0tLCAxICk7CgkJCQkJCQkJLy8gSWYgd2UgaGF2ZSBzb21l
IHVuaWNpdHkgcHJvcGVydHkgdGhlbgoJCQkJCQkJCS8vIHdlIG9ubHkgbmVlZCB0
byBkbyB0aGlzIG9uY2UKCQkJCQkJCQlpZiAoIGZsYWdzLnVuaXF1ZSApIHsKCQkJ
CQkJCQkJYnJlYWs7CgkJCQkJCQkJfQoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJfQoJ
CQkJfQoJCQkJcmV0dXJuIHRoaXM7CgkJCX0sCgkJCS8vIENvbnRyb2wgaWYgYSBn
aXZlbiBjYWxsYmFjayBpcyBpbiB0aGUgbGlzdAoJCQloYXM6IGZ1bmN0aW9uKCBm
biApIHsKCQkJCWlmICggbGlzdCApIHsKCQkJCQl2YXIgaSA9IDAsCgkJCQkJCWxl
bmd0aCA9IGxpc3QubGVuZ3RoOwoJCQkJCWZvciAoIDsgaSA8IGxlbmd0aDsgaSsr
ICkgewoJCQkJCQlpZiAoIGZuID09PSBsaXN0WyBpIF0gKSB7CgkJCQkJCQlyZXR1
cm4gdHJ1ZTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJCXJldHVybiBmYWxzZTsK
CQkJfSwKCQkJLy8gUmVtb3ZlIGFsbCBjYWxsYmFja3MgZnJvbSB0aGUgbGlzdAoJ
CQllbXB0eTogZnVuY3Rpb24oKSB7CgkJCQlsaXN0ID0gW107CgkJCQlyZXR1cm4g
dGhpczsKCQkJfSwKCQkJLy8gSGF2ZSB0aGUgbGlzdCBkbyBub3RoaW5nIGFueW1v
cmUKCQkJZGlzYWJsZTogZnVuY3Rpb24oKSB7CgkJCQlsaXN0ID0gc3RhY2sgPSBt
ZW1vcnkgPSB1bmRlZmluZWQ7CgkJCQlyZXR1cm4gdGhpczsKCQkJfSwKCQkJLy8g
SXMgaXQgZGlzYWJsZWQ/CgkJCWRpc2FibGVkOiBmdW5jdGlvbigpIHsKCQkJCXJl
dHVybiAhbGlzdDsKCQkJfSwKCQkJLy8gTG9jayB0aGUgbGlzdCBpbiBpdHMgY3Vy
cmVudCBzdGF0ZQoJCQlsb2NrOiBmdW5jdGlvbigpIHsKCQkJCXN0YWNrID0gdW5k
ZWZpbmVkOwoJCQkJaWYgKCAhbWVtb3J5IHx8IG1lbW9yeSA9PT0gdHJ1ZSApIHsK
CQkJCQlzZWxmLmRpc2FibGUoKTsKCQkJCX0KCQkJCXJldHVybiB0aGlzOwoJCQl9
LAoJCQkvLyBJcyBpdCBsb2NrZWQ/CgkJCWxvY2tlZDogZnVuY3Rpb24oKSB7CgkJ
CQlyZXR1cm4gIXN0YWNrOwoJCQl9LAoJCQkvLyBDYWxsIGFsbCBjYWxsYmFja3Mg
d2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgYXJndW1lbnRzCgkJCWZpcmVXaXRo
OiBmdW5jdGlvbiggY29udGV4dCwgYXJncyApIHsKCQkJCWlmICggc3RhY2sgKSB7
CgkJCQkJaWYgKCBmaXJpbmcgKSB7CgkJCQkJCWlmICggIWZsYWdzLm9uY2UgKSB7
CgkJCQkJCQlzdGFjay5wdXNoKCBbIGNvbnRleHQsIGFyZ3MgXSApOwoJCQkJCQl9
CgkJCQkJfSBlbHNlIGlmICggISggZmxhZ3Mub25jZSAmJiBtZW1vcnkgKSApIHsK
CQkJCQkJZmlyZSggY29udGV4dCwgYXJncyApOwoJCQkJCX0KCQkJCX0KCQkJCXJl
dHVybiB0aGlzOwoJCQl9LAoJCQkvLyBDYWxsIGFsbCB0aGUgY2FsbGJhY2tzIHdp
dGggdGhlIGdpdmVuIGFyZ3VtZW50cwoJCQlmaXJlOiBmdW5jdGlvbigpIHsKCQkJ
CXNlbGYuZmlyZVdpdGgoIHRoaXMsIGFyZ3VtZW50cyApOwoJCQkJcmV0dXJuIHRo
aXM7CgkJCX0sCgkJCS8vIFRvIGtub3cgaWYgdGhlIGNhbGxiYWNrcyBoYXZlIGFs
cmVhZHkgYmVlbiBjYWxsZWQgYXQgbGVhc3Qgb25jZQoJCQlmaXJlZDogZnVuY3Rp
b24oKSB7CgkJCQlyZXR1cm4gISFmaXJlZDsKCQkJfQoJCX07CgoJcmV0dXJuIHNl
bGY7Cn07CgoKCgp2YXIgLy8gU3RhdGljIHJlZmVyZW5jZSB0byBzbGljZQoJc2xp
Y2VEZWZlcnJlZCA9IFtdLnNsaWNlOwoKalF1ZXJ5LmV4dGVuZCh7CgoJRGVmZXJy
ZWQ6IGZ1bmN0aW9uKCBmdW5jICkgewoJCXZhciBkb25lTGlzdCA9IGpRdWVyeS5D
YWxsYmFja3MoICJvbmNlIG1lbW9yeSIgKSwKCQkJZmFpbExpc3QgPSBqUXVlcnku
Q2FsbGJhY2tzKCAib25jZSBtZW1vcnkiICksCgkJCXByb2dyZXNzTGlzdCA9IGpR
dWVyeS5DYWxsYmFja3MoICJtZW1vcnkiICksCgkJCXN0YXRlID0gInBlbmRpbmci
LAoJCQlsaXN0cyA9IHsKCQkJCXJlc29sdmU6IGRvbmVMaXN0LAoJCQkJcmVqZWN0
OiBmYWlsTGlzdCwKCQkJCW5vdGlmeTogcHJvZ3Jlc3NMaXN0CgkJCX0sCgkJCXBy
b21pc2UgPSB7CgkJCQlkb25lOiBkb25lTGlzdC5hZGQsCgkJCQlmYWlsOiBmYWls
TGlzdC5hZGQsCgkJCQlwcm9ncmVzczogcHJvZ3Jlc3NMaXN0LmFkZCwKCgkJCQlz
dGF0ZTogZnVuY3Rpb24oKSB7CgkJCQkJcmV0dXJuIHN0YXRlOwoJCQkJfSwKCgkJ
CQkvLyBEZXByZWNhdGVkCgkJCQlpc1Jlc29sdmVkOiBkb25lTGlzdC5maXJlZCwK
CQkJCWlzUmVqZWN0ZWQ6IGZhaWxMaXN0LmZpcmVkLAoKCQkJCXRoZW46IGZ1bmN0
aW9uKCBkb25lQ2FsbGJhY2tzLCBmYWlsQ2FsbGJhY2tzLCBwcm9ncmVzc0NhbGxi
YWNrcyApIHsKCQkJCQlkZWZlcnJlZC5kb25lKCBkb25lQ2FsbGJhY2tzICkuZmFp
bCggZmFpbENhbGxiYWNrcyApLnByb2dyZXNzKCBwcm9ncmVzc0NhbGxiYWNrcyAp
OwoJCQkJCXJldHVybiB0aGlzOwoJCQkJfSwKCQkJCWFsd2F5czogZnVuY3Rpb24o
KSB7CgkJCQkJZGVmZXJyZWQuZG9uZS5hcHBseSggZGVmZXJyZWQsIGFyZ3VtZW50
cyApLmZhaWwuYXBwbHkoIGRlZmVycmVkLCBhcmd1bWVudHMgKTsKCQkJCQlyZXR1
cm4gdGhpczsKCQkJCX0sCgkJCQlwaXBlOiBmdW5jdGlvbiggZm5Eb25lLCBmbkZh
aWwsIGZuUHJvZ3Jlc3MgKSB7CgkJCQkJcmV0dXJuIGpRdWVyeS5EZWZlcnJlZChm
dW5jdGlvbiggbmV3RGVmZXIgKSB7CgkJCQkJCWpRdWVyeS5lYWNoKCB7CgkJCQkJ
CQlkb25lOiBbIGZuRG9uZSwgInJlc29sdmUiIF0sCgkJCQkJCQlmYWlsOiBbIGZu
RmFpbCwgInJlamVjdCIgXSwKCQkJCQkJCXByb2dyZXNzOiBbIGZuUHJvZ3Jlc3Ms
ICJub3RpZnkiIF0KCQkJCQkJfSwgZnVuY3Rpb24oIGhhbmRsZXIsIGRhdGEgKSB7
CgkJCQkJCQl2YXIgZm4gPSBkYXRhWyAwIF0sCgkJCQkJCQkJYWN0aW9uID0gZGF0
YVsgMSBdLAoJCQkJCQkJCXJldHVybmVkOwoJCQkJCQkJaWYgKCBqUXVlcnkuaXNG
dW5jdGlvbiggZm4gKSApIHsKCQkJCQkJCQlkZWZlcnJlZFsgaGFuZGxlciBdKGZ1
bmN0aW9uKCkgewoJCQkJCQkJCQlyZXR1cm5lZCA9IGZuLmFwcGx5KCB0aGlzLCBh
cmd1bWVudHMgKTsKCQkJCQkJCQkJaWYgKCByZXR1cm5lZCAmJiBqUXVlcnkuaXNG
dW5jdGlvbiggcmV0dXJuZWQucHJvbWlzZSApICkgewoJCQkJCQkJCQkJcmV0dXJu
ZWQucHJvbWlzZSgpLnRoZW4oIG5ld0RlZmVyLnJlc29sdmUsIG5ld0RlZmVyLnJl
amVjdCwgbmV3RGVmZXIubm90aWZ5ICk7CgkJCQkJCQkJCX0gZWxzZSB7CgkJCQkJ
CQkJCQluZXdEZWZlclsgYWN0aW9uICsgIldpdGgiIF0oIHRoaXMgPT09IGRlZmVy
cmVkID8gbmV3RGVmZXIgOiB0aGlzLCBbIHJldHVybmVkIF0gKTsKCQkJCQkJCQkJ
fQoJCQkJCQkJCX0pOwoJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQlkZWZlcnJlZFsg
aGFuZGxlciBdKCBuZXdEZWZlclsgYWN0aW9uIF0gKTsKCQkJCQkJCX0KCQkJCQkJ
fSk7CgkJCQkJfSkucHJvbWlzZSgpOwoJCQkJfSwKCQkJCS8vIEdldCBhIHByb21p
c2UgZm9yIHRoaXMgZGVmZXJyZWQKCQkJCS8vIElmIG9iaiBpcyBwcm92aWRlZCwg
dGhlIHByb21pc2UgYXNwZWN0IGlzIGFkZGVkIHRvIHRoZSBvYmplY3QKCQkJCXBy
b21pc2U6IGZ1bmN0aW9uKCBvYmogKSB7CgkJCQkJaWYgKCBvYmogPT0gbnVsbCAp
IHsKCQkJCQkJb2JqID0gcHJvbWlzZTsKCQkJCQl9IGVsc2UgewoJCQkJCQlmb3Ig
KCB2YXIga2V5IGluIHByb21pc2UgKSB7CgkJCQkJCQlvYmpbIGtleSBdID0gcHJv
bWlzZVsga2V5IF07CgkJCQkJCX0KCQkJCQl9CgkJCQkJcmV0dXJuIG9iajsKCQkJ
CX0KCQkJfSwKCQkJZGVmZXJyZWQgPSBwcm9taXNlLnByb21pc2Uoe30pLAoJCQlr
ZXk7CgoJCWZvciAoIGtleSBpbiBsaXN0cyApIHsKCQkJZGVmZXJyZWRbIGtleSBd
ID0gbGlzdHNbIGtleSBdLmZpcmU7CgkJCWRlZmVycmVkWyBrZXkgKyAiV2l0aCIg
XSA9IGxpc3RzWyBrZXkgXS5maXJlV2l0aDsKCQl9CgoJCS8vIEhhbmRsZSBzdGF0
ZQoJCWRlZmVycmVkLmRvbmUoIGZ1bmN0aW9uKCkgewoJCQlzdGF0ZSA9ICJyZXNv
bHZlZCI7CgkJfSwgZmFpbExpc3QuZGlzYWJsZSwgcHJvZ3Jlc3NMaXN0LmxvY2sg
KS5mYWlsKCBmdW5jdGlvbigpIHsKCQkJc3RhdGUgPSAicmVqZWN0ZWQiOwoJCX0s
IGRvbmVMaXN0LmRpc2FibGUsIHByb2dyZXNzTGlzdC5sb2NrICk7CgoJCS8vIENh
bGwgZ2l2ZW4gZnVuYyBpZiBhbnkKCQlpZiAoIGZ1bmMgKSB7CgkJCWZ1bmMuY2Fs
bCggZGVmZXJyZWQsIGRlZmVycmVkICk7CgkJfQoKCQkvLyBBbGwgZG9uZSEKCQly
ZXR1cm4gZGVmZXJyZWQ7Cgl9LAoKCS8vIERlZmVycmVkIGhlbHBlcgoJd2hlbjog
ZnVuY3Rpb24oIGZpcnN0UGFyYW0gKSB7CgkJdmFyIGFyZ3MgPSBzbGljZURlZmVy
cmVkLmNhbGwoIGFyZ3VtZW50cywgMCApLAoJCQlpID0gMCwKCQkJbGVuZ3RoID0g
YXJncy5sZW5ndGgsCgkJCXBWYWx1ZXMgPSBuZXcgQXJyYXkoIGxlbmd0aCApLAoJ
CQljb3VudCA9IGxlbmd0aCwKCQkJcENvdW50ID0gbGVuZ3RoLAoJCQlkZWZlcnJl
ZCA9IGxlbmd0aCA8PSAxICYmIGZpcnN0UGFyYW0gJiYgalF1ZXJ5LmlzRnVuY3Rp
b24oIGZpcnN0UGFyYW0ucHJvbWlzZSApID8KCQkJCWZpcnN0UGFyYW0gOgoJCQkJ
alF1ZXJ5LkRlZmVycmVkKCksCgkJCXByb21pc2UgPSBkZWZlcnJlZC5wcm9taXNl
KCk7CgkJZnVuY3Rpb24gcmVzb2x2ZUZ1bmMoIGkgKSB7CgkJCXJldHVybiBmdW5j
dGlvbiggdmFsdWUgKSB7CgkJCQlhcmdzWyBpIF0gPSBhcmd1bWVudHMubGVuZ3Ro
ID4gMSA/IHNsaWNlRGVmZXJyZWQuY2FsbCggYXJndW1lbnRzLCAwICkgOiB2YWx1
ZTsKCQkJCWlmICggISggLS1jb3VudCApICkgewoJCQkJCWRlZmVycmVkLnJlc29s
dmVXaXRoKCBkZWZlcnJlZCwgYXJncyApOwoJCQkJfQoJCQl9OwoJCX0KCQlmdW5j
dGlvbiBwcm9ncmVzc0Z1bmMoIGkgKSB7CgkJCXJldHVybiBmdW5jdGlvbiggdmFs
dWUgKSB7CgkJCQlwVmFsdWVzWyBpIF0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/
IHNsaWNlRGVmZXJyZWQuY2FsbCggYXJndW1lbnRzLCAwICkgOiB2YWx1ZTsKCQkJ
CWRlZmVycmVkLm5vdGlmeVdpdGgoIHByb21pc2UsIHBWYWx1ZXMgKTsKCQkJfTsK
CQl9CgkJaWYgKCBsZW5ndGggPiAxICkgewoJCQlmb3IgKCA7IGkgPCBsZW5ndGg7
IGkrKyApIHsKCQkJCWlmICggYXJnc1sgaSBdICYmIGFyZ3NbIGkgXS5wcm9taXNl
ICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCBhcmdzWyBpIF0ucHJvbWlzZSApICkgewoJ
CQkJCWFyZ3NbIGkgXS5wcm9taXNlKCkudGhlbiggcmVzb2x2ZUZ1bmMoaSksIGRl
ZmVycmVkLnJlamVjdCwgcHJvZ3Jlc3NGdW5jKGkpICk7CgkJCQl9IGVsc2UgewoJ
CQkJCS0tY291bnQ7CgkJCQl9CgkJCX0KCQkJaWYgKCAhY291bnQgKSB7CgkJCQlk
ZWZlcnJlZC5yZXNvbHZlV2l0aCggZGVmZXJyZWQsIGFyZ3MgKTsKCQkJfQoJCX0g
ZWxzZSBpZiAoIGRlZmVycmVkICE9PSBmaXJzdFBhcmFtICkgewoJCQlkZWZlcnJl
ZC5yZXNvbHZlV2l0aCggZGVmZXJyZWQsIGxlbmd0aCA/IFsgZmlyc3RQYXJhbSBd
IDogW10gKTsKCQl9CgkJcmV0dXJuIHByb21pc2U7Cgl9Cn0pOwoKCgoKalF1ZXJ5
LnN1cHBvcnQgPSAoZnVuY3Rpb24oKSB7CgoJdmFyIHN1cHBvcnQsCgkJYWxsLAoJ
CWEsCgkJc2VsZWN0LAoJCW9wdCwKCQlpbnB1dCwKCQlmcmFnbWVudCwKCQl0ZHMs
CgkJZXZlbnRzLAoJCWV2ZW50TmFtZSwKCQlpLAoJCWlzU3VwcG9ydGVkLAoJCWRp
diA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJkaXYiICksCgkJZG9jdW1lbnRF
bGVtZW50ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50OwoKCS8vIFByZWxpbWlu
YXJ5IHRlc3RzCglkaXYuc2V0QXR0cmlidXRlKCJjbGFzc05hbWUiLCAidCIpOwoJ
ZGl2LmlubmVySFRNTCA9ICIgICA8bGluay8+PHRhYmxlPjwvdGFibGU+PGEgaHJl
Zj0nL2EnIHN0eWxlPSd0b3A6MXB4O2Zsb2F0OmxlZnQ7b3BhY2l0eTouNTU7Jz5h
PC9hPjxpbnB1dCB0eXBlPSdjaGVja2JveCcvPiI7CgoJYWxsID0gZGl2LmdldEVs
ZW1lbnRzQnlUYWdOYW1lKCAiKiIgKTsKCWEgPSBkaXYuZ2V0RWxlbWVudHNCeVRh
Z05hbWUoICJhIiApWyAwIF07CgoJLy8gQ2FuJ3QgZ2V0IGJhc2ljIHRlc3Qgc3Vw
cG9ydAoJaWYgKCAhYWxsIHx8ICFhbGwubGVuZ3RoIHx8ICFhICkgewoJCXJldHVy
biB7fTsKCX0KCgkvLyBGaXJzdCBiYXRjaCBvZiBzdXBwb3J0cyB0ZXN0cwoJc2Vs
ZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggInNlbGVjdCIgKTsKCW9wdCA9
IHNlbGVjdC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0
aW9uIikgKTsKCWlucHV0ID0gZGl2LmdldEVsZW1lbnRzQnlUYWdOYW1lKCAiaW5w
dXQiIClbIDAgXTsKCglzdXBwb3J0ID0gewoJCS8vIElFIHN0cmlwcyBsZWFkaW5n
IHdoaXRlc3BhY2Ugd2hlbiAuaW5uZXJIVE1MIGlzIHVzZWQKCQlsZWFkaW5nV2hp
dGVzcGFjZTogKCBkaXYuZmlyc3RDaGlsZC5ub2RlVHlwZSA9PT0gMyApLAoKCQkv
LyBNYWtlIHN1cmUgdGhhdCB0Ym9keSBlbGVtZW50cyBhcmVuJ3QgYXV0b21hdGlj
YWxseSBpbnNlcnRlZAoJCS8vIElFIHdpbGwgaW5zZXJ0IHRoZW0gaW50byBlbXB0
eSB0YWJsZXMKCQl0Ym9keTogIWRpdi5nZXRFbGVtZW50c0J5VGFnTmFtZSgidGJv
ZHkiKS5sZW5ndGgsCgoJCS8vIE1ha2Ugc3VyZSB0aGF0IGxpbmsgZWxlbWVudHMg
Z2V0IHNlcmlhbGl6ZWQgY29ycmVjdGx5IGJ5IGlubmVySFRNTAoJCS8vIFRoaXMg
cmVxdWlyZXMgYSB3cmFwcGVyIGVsZW1lbnQgaW4gSUUKCQlodG1sU2VyaWFsaXpl
OiAhIWRpdi5nZXRFbGVtZW50c0J5VGFnTmFtZSgibGluayIpLmxlbmd0aCwKCgkJ
Ly8gR2V0IHRoZSBzdHlsZSBpbmZvcm1hdGlvbiBmcm9tIGdldEF0dHJpYnV0ZQoJ
CS8vIChJRSB1c2VzIC5jc3NUZXh0IGluc3RlYWQpCgkJc3R5bGU6IC90b3AvLnRl
c3QoIGEuZ2V0QXR0cmlidXRlKCJzdHlsZSIpICksCgoJCS8vIE1ha2Ugc3VyZSB0
aGF0IFVSTHMgYXJlbid0IG1hbmlwdWxhdGVkCgkJLy8gKElFIG5vcm1hbGl6ZXMg
aXQgYnkgZGVmYXVsdCkKCQlocmVmTm9ybWFsaXplZDogKCBhLmdldEF0dHJpYnV0
ZSgiaHJlZiIpID09PSAiL2EiICksCgoJCS8vIE1ha2Ugc3VyZSB0aGF0IGVsZW1l
bnQgb3BhY2l0eSBleGlzdHMKCQkvLyAoSUUgdXNlcyBmaWx0ZXIgaW5zdGVhZCkK
CQkvLyBVc2UgYSByZWdleCB0byB3b3JrIGFyb3VuZCBhIFdlYktpdCBpc3N1ZS4g
U2VlICM1MTQ1CgkJb3BhY2l0eTogL14wLjU1Ly50ZXN0KCBhLnN0eWxlLm9wYWNp
dHkgKSwKCgkJLy8gVmVyaWZ5IHN0eWxlIGZsb2F0IGV4aXN0ZW5jZQoJCS8vIChJ
RSB1c2VzIHN0eWxlRmxvYXQgaW5zdGVhZCBvZiBjc3NGbG9hdCkKCQljc3NGbG9h
dDogISFhLnN0eWxlLmNzc0Zsb2F0LAoKCQkvLyBNYWtlIHN1cmUgdGhhdCBpZiBu
byB2YWx1ZSBpcyBzcGVjaWZpZWQgZm9yIGEgY2hlY2tib3gKCQkvLyB0aGF0IGl0
IGRlZmF1bHRzIHRvICJvbiIuCgkJLy8gKFdlYktpdCBkZWZhdWx0cyB0byAiIiBp
bnN0ZWFkKQoJCWNoZWNrT246ICggaW5wdXQudmFsdWUgPT09ICJvbiIgKSwKCgkJ
Ly8gTWFrZSBzdXJlIHRoYXQgYSBzZWxlY3RlZC1ieS1kZWZhdWx0IG9wdGlvbiBo
YXMgYSB3b3JraW5nIHNlbGVjdGVkIHByb3BlcnR5LgoJCS8vIChXZWJLaXQgZGVm
YXVsdHMgdG8gZmFsc2UgaW5zdGVhZCBvZiB0cnVlLCBJRSB0b28sIGlmIGl0J3Mg
aW4gYW4gb3B0Z3JvdXApCgkJb3B0U2VsZWN0ZWQ6IG9wdC5zZWxlY3RlZCwKCgkJ
Ly8gVGVzdCBzZXRBdHRyaWJ1dGUgb24gY2FtZWxDYXNlIGNsYXNzLiBJZiBpdCB3
b3Jrcywgd2UgbmVlZCBhdHRyRml4ZXMgd2hlbiBkb2luZyBnZXQvc2V0QXR0cmli
dXRlIChpZTYvNykKCQlnZXRTZXRBdHRyaWJ1dGU6IGRpdi5jbGFzc05hbWUgIT09
ICJ0IiwKCgkJLy8gVGVzdHMgZm9yIGVuY3R5cGUgc3VwcG9ydCBvbiBhIGZvcm0o
IzY3NDMpCgkJZW5jdHlwZTogISFkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJmb3Jt
IikuZW5jdHlwZSwKCgkJLy8gTWFrZXMgc3VyZSBjbG9uaW5nIGFuIGh0bWw1IGVs
ZW1lbnQgZG9lcyBub3QgY2F1c2UgcHJvYmxlbXMKCQkvLyBXaGVyZSBvdXRlckhU
TUwgaXMgdW5kZWZpbmVkLCB0aGlzIHN0aWxsIHdvcmtzCgkJaHRtbDVDbG9uZTog
ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgibmF2IikuY2xvbmVOb2RlKCB0cnVlICku
b3V0ZXJIVE1MICE9PSAiPDpuYXY+PC86bmF2PiIsCgoJCS8vIFdpbGwgYmUgZGVm
aW5lZCBsYXRlcgoJCXN1Ym1pdEJ1YmJsZXM6IHRydWUsCgkJY2hhbmdlQnViYmxl
czogdHJ1ZSwKCQlmb2N1c2luQnViYmxlczogZmFsc2UsCgkJZGVsZXRlRXhwYW5k
bzogdHJ1ZSwKCQlub0Nsb25lRXZlbnQ6IHRydWUsCgkJaW5saW5lQmxvY2tOZWVk
c0xheW91dDogZmFsc2UsCgkJc2hyaW5rV3JhcEJsb2NrczogZmFsc2UsCgkJcmVs
aWFibGVNYXJnaW5SaWdodDogdHJ1ZSwKCQlwaXhlbE1hcmdpbjogdHJ1ZQoJfTsK
CgkvLyBqUXVlcnkuYm94TW9kZWwgREVQUkVDQVRFRCBpbiAxLjMsIHVzZSBqUXVl
cnkuc3VwcG9ydC5ib3hNb2RlbCBpbnN0ZWFkCglqUXVlcnkuYm94TW9kZWwgPSBz
dXBwb3J0LmJveE1vZGVsID0gKGRvY3VtZW50LmNvbXBhdE1vZGUgPT09ICJDU1Mx
Q29tcGF0Iik7CgoJLy8gTWFrZSBzdXJlIGNoZWNrZWQgc3RhdHVzIGlzIHByb3Bl
cmx5IGNsb25lZAoJaW5wdXQuY2hlY2tlZCA9IHRydWU7CglzdXBwb3J0Lm5vQ2xv
bmVDaGVja2VkID0gaW5wdXQuY2xvbmVOb2RlKCB0cnVlICkuY2hlY2tlZDsKCgkv
LyBNYWtlIHN1cmUgdGhhdCB0aGUgb3B0aW9ucyBpbnNpZGUgZGlzYWJsZWQgc2Vs
ZWN0cyBhcmVuJ3QgbWFya2VkIGFzIGRpc2FibGVkCgkvLyAoV2ViS2l0IG1hcmtz
IHRoZW0gYXMgZGlzYWJsZWQpCglzZWxlY3QuZGlzYWJsZWQgPSB0cnVlOwoJc3Vw
cG9ydC5vcHREaXNhYmxlZCA9ICFvcHQuZGlzYWJsZWQ7CgoJLy8gVGVzdCB0byBz
ZWUgaWYgaXQncyBwb3NzaWJsZSB0byBkZWxldGUgYW4gZXhwYW5kbyBmcm9tIGFu
IGVsZW1lbnQKCS8vIEZhaWxzIGluIEludGVybmV0IEV4cGxvcmVyCgl0cnkgewoJ
CWRlbGV0ZSBkaXYudGVzdDsKCX0gY2F0Y2goIGUgKSB7CgkJc3VwcG9ydC5kZWxl
dGVFeHBhbmRvID0gZmFsc2U7Cgl9CgoJaWYgKCAhZGl2LmFkZEV2ZW50TGlzdGVu
ZXIgJiYgZGl2LmF0dGFjaEV2ZW50ICYmIGRpdi5maXJlRXZlbnQgKSB7CgkJZGl2
LmF0dGFjaEV2ZW50KCAib25jbGljayIsIGZ1bmN0aW9uKCkgewoJCQkvLyBDbG9u
aW5nIGEgbm9kZSBzaG91bGRuJ3QgY29weSBvdmVyIGFueQoJCQkvLyBib3VuZCBl
dmVudCBoYW5kbGVycyAoSUUgZG9lcyB0aGlzKQoJCQlzdXBwb3J0Lm5vQ2xvbmVF
dmVudCA9IGZhbHNlOwoJCX0pOwoJCWRpdi5jbG9uZU5vZGUoIHRydWUgKS5maXJl
RXZlbnQoICJvbmNsaWNrIiApOwoJfQoKCS8vIENoZWNrIGlmIGEgcmFkaW8gbWFp
bnRhaW5zIGl0cyB2YWx1ZQoJLy8gYWZ0ZXIgYmVpbmcgYXBwZW5kZWQgdG8gdGhl
IERPTQoJaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpOwoJ
aW5wdXQudmFsdWUgPSAidCI7CglpbnB1dC5zZXRBdHRyaWJ1dGUoInR5cGUiLCAi
cmFkaW8iKTsKCXN1cHBvcnQucmFkaW9WYWx1ZSA9IGlucHV0LnZhbHVlID09PSAi
dCI7CgoJaW5wdXQuc2V0QXR0cmlidXRlKCJjaGVja2VkIiwgImNoZWNrZWQiKTsK
CgkvLyAjMTEyMTcgLSBXZWJLaXQgbG9zZXMgY2hlY2sgd2hlbiB0aGUgbmFtZSBp
cyBhZnRlciB0aGUgY2hlY2tlZCBhdHRyaWJ1dGUKCWlucHV0LnNldEF0dHJpYnV0
ZSggIm5hbWUiLCAidCIgKTsKCglkaXYuYXBwZW5kQ2hpbGQoIGlucHV0ICk7Cglm
cmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTsKCWZy
YWdtZW50LmFwcGVuZENoaWxkKCBkaXYubGFzdENoaWxkICk7CgoJLy8gV2ViS2l0
IGRvZXNuJ3QgY2xvbmUgY2hlY2tlZCBzdGF0ZSBjb3JyZWN0bHkgaW4gZnJhZ21l
bnRzCglzdXBwb3J0LmNoZWNrQ2xvbmUgPSBmcmFnbWVudC5jbG9uZU5vZGUoIHRy
dWUgKS5jbG9uZU5vZGUoIHRydWUgKS5sYXN0Q2hpbGQuY2hlY2tlZDsKCgkvLyBD
aGVjayBpZiBhIGRpc2Nvbm5lY3RlZCBjaGVja2JveCB3aWxsIHJldGFpbiBpdHMg
Y2hlY2tlZAoJLy8gdmFsdWUgb2YgdHJ1ZSBhZnRlciBhcHBlbmRlZCB0byB0aGUg
RE9NIChJRTYvNykKCXN1cHBvcnQuYXBwZW5kQ2hlY2tlZCA9IGlucHV0LmNoZWNr
ZWQ7CgoJZnJhZ21lbnQucmVtb3ZlQ2hpbGQoIGlucHV0ICk7CglmcmFnbWVudC5h
cHBlbmRDaGlsZCggZGl2ICk7CgoJLy8gVGVjaG5pcXVlIGZyb20gSnVyaXkgWmF5
dHNldgoJLy8gaHR0cDovL3BlcmZlY3Rpb25raWxscy5jb20vZGV0ZWN0aW5nLWV2
ZW50LXN1cHBvcnQtd2l0aG91dC1icm93c2VyLXNuaWZmaW5nLwoJLy8gV2Ugb25s
eSBjYXJlIGFib3V0IHRoZSBjYXNlIHdoZXJlIG5vbi1zdGFuZGFyZCBldmVudCBz
eXN0ZW1zCgkvLyBhcmUgdXNlZCwgbmFtZWx5IGluIElFLiBTaG9ydC1jaXJjdWl0
aW5nIGhlcmUgaGVscHMgdXMgdG8KCS8vIGF2b2lkIGFuIGV2YWwgY2FsbCAoaW4g
c2V0QXR0cmlidXRlKSB3aGljaCBjYW4gY2F1c2UgQ1NQCgkvLyB0byBnbyBoYXl3
aXJlLiBTZWU6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL1NlY3Vy
aXR5L0NTUAoJaWYgKCBkaXYuYXR0YWNoRXZlbnQgKSB7CgkJZm9yICggaSBpbiB7
CgkJCXN1Ym1pdDogMSwKCQkJY2hhbmdlOiAxLAoJCQlmb2N1c2luOiAxCgkJfSkg
ewoJCQlldmVudE5hbWUgPSAib24iICsgaTsKCQkJaXNTdXBwb3J0ZWQgPSAoIGV2
ZW50TmFtZSBpbiBkaXYgKTsKCQkJaWYgKCAhaXNTdXBwb3J0ZWQgKSB7CgkJCQlk
aXYuc2V0QXR0cmlidXRlKCBldmVudE5hbWUsICJyZXR1cm47IiApOwoJCQkJaXNT
dXBwb3J0ZWQgPSAoIHR5cGVvZiBkaXZbIGV2ZW50TmFtZSBdID09PSAiZnVuY3Rp
b24iICk7CgkJCX0KCQkJc3VwcG9ydFsgaSArICJCdWJibGVzIiBdID0gaXNTdXBw
b3J0ZWQ7CgkJfQoJfQoKCWZyYWdtZW50LnJlbW92ZUNoaWxkKCBkaXYgKTsKCgkv
LyBOdWxsIGVsZW1lbnRzIHRvIGF2b2lkIGxlYWtzIGluIElFCglmcmFnbWVudCA9
IHNlbGVjdCA9IG9wdCA9IGRpdiA9IGlucHV0ID0gbnVsbDsKCgkvLyBSdW4gdGVz
dHMgdGhhdCBuZWVkIGEgYm9keSBhdCBkb2MgcmVhZHkKCWpRdWVyeShmdW5jdGlv
bigpIHsKCQl2YXIgY29udGFpbmVyLCBvdXRlciwgaW5uZXIsIHRhYmxlLCB0ZCwg
b2Zmc2V0U3VwcG9ydCwKCQkJbWFyZ2luRGl2LCBjb25NYXJnaW5Ub3AsIHN0eWxl
LCBodG1sLCBwb3NpdGlvblRvcExlZnRXaWR0aEhlaWdodCwKCQkJcGFkZGluZ01h
cmdpbkJvcmRlclZpc2liaWxpdHksIHBhZGRpbmdNYXJnaW5Cb3JkZXIsCgkJCWJv
ZHkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYm9keSIpWzBdOwoK
CQlpZiAoICFib2R5ICkgewoJCQkvLyBSZXR1cm4gZm9yIGZyYW1lc2V0IGRvY3Mg
dGhhdCBkb24ndCBoYXZlIGEgYm9keQoJCQlyZXR1cm47CgkJfQoKCQljb25NYXJn
aW5Ub3AgPSAxOwoJCXBhZGRpbmdNYXJnaW5Cb3JkZXIgPSAicGFkZGluZzowO21h
cmdpbjowO2JvcmRlcjoiOwoJCXBvc2l0aW9uVG9wTGVmdFdpZHRoSGVpZ2h0ID0g
InBvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDt3aWR0aDoxcHg7aGVpZ2h0
OjFweDsiOwoJCXBhZGRpbmdNYXJnaW5Cb3JkZXJWaXNpYmlsaXR5ID0gcGFkZGlu
Z01hcmdpbkJvcmRlciArICIwO3Zpc2liaWxpdHk6aGlkZGVuOyI7CgkJc3R5bGUg
PSAic3R5bGU9JyIgKyBwb3NpdGlvblRvcExlZnRXaWR0aEhlaWdodCArIHBhZGRp
bmdNYXJnaW5Cb3JkZXIgKyAiNXB4IHNvbGlkICMwMDA7IjsKCQlodG1sID0gIjxk
aXYgIiArIHN0eWxlICsgImRpc3BsYXk6YmxvY2s7Jz48ZGl2IHN0eWxlPSciICsg
cGFkZGluZ01hcmdpbkJvcmRlciArICIwO2Rpc3BsYXk6YmxvY2s7b3ZlcmZsb3c6
aGlkZGVuOyc+PC9kaXY+PC9kaXY+IiArCgkJCSI8dGFibGUgIiArIHN0eWxlICsg
IicgY2VsbHBhZGRpbmc9JzAnIGNlbGxzcGFjaW5nPScwJz4iICsKCQkJIjx0cj48
dGQ+PC90ZD48L3RyPjwvdGFibGU+IjsKCgkJY29udGFpbmVyID0gZG9jdW1lbnQu
Y3JlYXRlRWxlbWVudCgiZGl2Iik7CgkJY29udGFpbmVyLnN0eWxlLmNzc1RleHQg
PSBwYWRkaW5nTWFyZ2luQm9yZGVyVmlzaWJpbGl0eSArICJ3aWR0aDowO2hlaWdo
dDowO3Bvc2l0aW9uOnN0YXRpYzt0b3A6MDttYXJnaW4tdG9wOiIgKyBjb25NYXJn
aW5Ub3AgKyAicHgiOwoJCWJvZHkuaW5zZXJ0QmVmb3JlKCBjb250YWluZXIsIGJv
ZHkuZmlyc3RDaGlsZCApOwoKCQkvLyBDb25zdHJ1Y3QgdGhlIHRlc3QgZWxlbWVu
dAoJCWRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwoJCWNvbnRh
aW5lci5hcHBlbmRDaGlsZCggZGl2ICk7CgoJCS8vIENoZWNrIGlmIHRhYmxlIGNl
bGxzIHN0aWxsIGhhdmUgb2Zmc2V0V2lkdGgvSGVpZ2h0IHdoZW4gdGhleSBhcmUg
c2V0CgkJLy8gdG8gZGlzcGxheTpub25lIGFuZCB0aGVyZSBhcmUgc3RpbGwgb3Ro
ZXIgdmlzaWJsZSB0YWJsZSBjZWxscyBpbiBhCgkJLy8gdGFibGUgcm93OyBpZiBz
bywgb2Zmc2V0V2lkdGgvSGVpZ2h0IGFyZSBub3QgcmVsaWFibGUgZm9yIHVzZSB3
aGVuCgkJLy8gZGV0ZXJtaW5pbmcgaWYgYW4gZWxlbWVudCBoYXMgYmVlbiBoaWRk
ZW4gZGlyZWN0bHkgdXNpbmcKCQkvLyBkaXNwbGF5Om5vbmUgKGl0IGlzIHN0aWxs
IHNhZmUgdG8gdXNlIG9mZnNldHMgaWYgYSBwYXJlbnQgZWxlbWVudCBpcwoJCS8v
IGhpZGRlbjsgZG9uIHNhZmV0eSBnb2dnbGVzIGFuZCBzZWUgYnVnICM0NTEyIGZv
ciBtb3JlIGluZm9ybWF0aW9uKS4KCQkvLyAob25seSBJRSA4IGZhaWxzIHRoaXMg
dGVzdCkKCQlkaXYuaW5uZXJIVE1MID0gIjx0YWJsZT48dHI+PHRkIHN0eWxlPSci
ICsgcGFkZGluZ01hcmdpbkJvcmRlciArICIwO2Rpc3BsYXk6bm9uZSc+PC90ZD48
dGQ+dDwvdGQ+PC90cj48L3RhYmxlPiI7CgkJdGRzID0gZGl2LmdldEVsZW1lbnRz
QnlUYWdOYW1lKCAidGQiICk7CgkJaXNTdXBwb3J0ZWQgPSAoIHRkc1sgMCBdLm9m
ZnNldEhlaWdodCA9PT0gMCApOwoKCQl0ZHNbIDAgXS5zdHlsZS5kaXNwbGF5ID0g
IiI7CgkJdGRzWyAxIF0uc3R5bGUuZGlzcGxheSA9ICJub25lIjsKCgkJLy8gQ2hl
Y2sgaWYgZW1wdHkgdGFibGUgY2VsbHMgc3RpbGwgaGF2ZSBvZmZzZXRXaWR0aC9I
ZWlnaHQKCQkvLyAoSUUgPD0gOCBmYWlsIHRoaXMgdGVzdCkKCQlzdXBwb3J0LnJl
bGlhYmxlSGlkZGVuT2Zmc2V0cyA9IGlzU3VwcG9ydGVkICYmICggdGRzWyAwIF0u
b2Zmc2V0SGVpZ2h0ID09PSAwICk7CgoJCS8vIENoZWNrIGlmIGRpdiB3aXRoIGV4
cGxpY2l0IHdpZHRoIGFuZCBubyBtYXJnaW4tcmlnaHQgaW5jb3JyZWN0bHkKCQkv
LyBnZXRzIGNvbXB1dGVkIG1hcmdpbi1yaWdodCBiYXNlZCBvbiB3aWR0aCBvZiBj
b250YWluZXIuIEZvciBtb3JlCgkJLy8gaW5mbyBzZWUgYnVnICMzMzMzCgkJLy8g
RmFpbHMgaW4gV2ViS2l0IGJlZm9yZSBGZWIgMjAxMSBuaWdodGxpZXMKCQkvLyBX
ZWJLaXQgQnVnIDEzMzQzIC0gZ2V0Q29tcHV0ZWRTdHlsZSByZXR1cm5zIHdyb25n
IHZhbHVlIGZvciBtYXJnaW4tcmlnaHQKCQlpZiAoIHdpbmRvdy5nZXRDb21wdXRl
ZFN0eWxlICkgewoJCQlkaXYuaW5uZXJIVE1MID0gIiI7CgkJCW1hcmdpbkRpdiA9
IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJkaXYiICk7CgkJCW1hcmdpbkRpdi5z
dHlsZS53aWR0aCA9ICIwIjsKCQkJbWFyZ2luRGl2LnN0eWxlLm1hcmdpblJpZ2h0
ID0gIjAiOwoJCQlkaXYuc3R5bGUud2lkdGggPSAiMnB4IjsKCQkJZGl2LmFwcGVu
ZENoaWxkKCBtYXJnaW5EaXYgKTsKCQkJc3VwcG9ydC5yZWxpYWJsZU1hcmdpblJp
Z2h0ID0KCQkJCSggcGFyc2VJbnQoICggd2luZG93LmdldENvbXB1dGVkU3R5bGUo
IG1hcmdpbkRpdiwgbnVsbCApIHx8IHsgbWFyZ2luUmlnaHQ6IDAgfSApLm1hcmdp
blJpZ2h0LCAxMCApIHx8IDAgKSA9PT0gMDsKCQl9CgoJCWlmICggdHlwZW9mIGRp
di5zdHlsZS56b29tICE9PSAidW5kZWZpbmVkIiApIHsKCQkJLy8gQ2hlY2sgaWYg
bmF0aXZlbHkgYmxvY2stbGV2ZWwgZWxlbWVudHMgYWN0IGxpa2UgaW5saW5lLWJs
b2NrCgkJCS8vIGVsZW1lbnRzIHdoZW4gc2V0dGluZyB0aGVpciBkaXNwbGF5IHRv
ICdpbmxpbmUnIGFuZCBnaXZpbmcKCQkJLy8gdGhlbSBsYXlvdXQKCQkJLy8gKElF
IDwgOCBkb2VzIHRoaXMpCgkJCWRpdi5pbm5lckhUTUwgPSAiIjsKCQkJZGl2LnN0
eWxlLndpZHRoID0gZGl2LnN0eWxlLnBhZGRpbmcgPSAiMXB4IjsKCQkJZGl2LnN0
eWxlLmJvcmRlciA9IDA7CgkJCWRpdi5zdHlsZS5vdmVyZmxvdyA9ICJoaWRkZW4i
OwoJCQlkaXYuc3R5bGUuZGlzcGxheSA9ICJpbmxpbmUiOwoJCQlkaXYuc3R5bGUu
em9vbSA9IDE7CgkJCXN1cHBvcnQuaW5saW5lQmxvY2tOZWVkc0xheW91dCA9ICgg
ZGl2Lm9mZnNldFdpZHRoID09PSAzICk7CgoJCQkvLyBDaGVjayBpZiBlbGVtZW50
cyB3aXRoIGxheW91dCBzaHJpbmstd3JhcCB0aGVpciBjaGlsZHJlbgoJCQkvLyAo
SUUgNiBkb2VzIHRoaXMpCgkJCWRpdi5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsK
CQkJZGl2LnN0eWxlLm92ZXJmbG93ID0gInZpc2libGUiOwoJCQlkaXYuaW5uZXJI
VE1MID0gIjxkaXYgc3R5bGU9J3dpZHRoOjVweDsnPjwvZGl2PiI7CgkJCXN1cHBv
cnQuc2hyaW5rV3JhcEJsb2NrcyA9ICggZGl2Lm9mZnNldFdpZHRoICE9PSAzICk7
CgkJfQoKCQlkaXYuc3R5bGUuY3NzVGV4dCA9IHBvc2l0aW9uVG9wTGVmdFdpZHRo
SGVpZ2h0ICsgcGFkZGluZ01hcmdpbkJvcmRlclZpc2liaWxpdHk7CgkJZGl2Lmlu
bmVySFRNTCA9IGh0bWw7CgoJCW91dGVyID0gZGl2LmZpcnN0Q2hpbGQ7CgkJaW5u
ZXIgPSBvdXRlci5maXJzdENoaWxkOwoJCXRkID0gb3V0ZXIubmV4dFNpYmxpbmcu
Zmlyc3RDaGlsZC5maXJzdENoaWxkOwoKCQlvZmZzZXRTdXBwb3J0ID0gewoJCQlk
b2VzTm90QWRkQm9yZGVyOiAoIGlubmVyLm9mZnNldFRvcCAhPT0gNSApLAoJCQlk
b2VzQWRkQm9yZGVyRm9yVGFibGVBbmRDZWxsczogKCB0ZC5vZmZzZXRUb3AgPT09
IDUgKQoJCX07CgoJCWlubmVyLnN0eWxlLnBvc2l0aW9uID0gImZpeGVkIjsKCQlp
bm5lci5zdHlsZS50b3AgPSAiMjBweCI7CgoJCS8vIHNhZmFyaSBzdWJ0cmFjdHMg
cGFyZW50IGJvcmRlciB3aWR0aCBoZXJlIHdoaWNoIGlzIDVweAoJCW9mZnNldFN1
cHBvcnQuZml4ZWRQb3NpdGlvbiA9ICggaW5uZXIub2Zmc2V0VG9wID09PSAyMCB8
fCBpbm5lci5vZmZzZXRUb3AgPT09IDE1ICk7CgkJaW5uZXIuc3R5bGUucG9zaXRp
b24gPSBpbm5lci5zdHlsZS50b3AgPSAiIjsKCgkJb3V0ZXIuc3R5bGUub3ZlcmZs
b3cgPSAiaGlkZGVuIjsKCQlvdXRlci5zdHlsZS5wb3NpdGlvbiA9ICJyZWxhdGl2
ZSI7CgoJCW9mZnNldFN1cHBvcnQuc3VidHJhY3RzQm9yZGVyRm9yT3ZlcmZsb3dO
b3RWaXNpYmxlID0gKCBpbm5lci5vZmZzZXRUb3AgPT09IC01ICk7CgkJb2Zmc2V0
U3VwcG9ydC5kb2VzTm90SW5jbHVkZU1hcmdpbkluQm9keU9mZnNldCA9ICggYm9k
eS5vZmZzZXRUb3AgIT09IGNvbk1hcmdpblRvcCApOwoKCQlpZiAoIHdpbmRvdy5n
ZXRDb21wdXRlZFN0eWxlICkgewoJCQlkaXYuc3R5bGUubWFyZ2luVG9wID0gIjEl
IjsKCQkJc3VwcG9ydC5waXhlbE1hcmdpbiA9ICggd2luZG93LmdldENvbXB1dGVk
U3R5bGUoIGRpdiwgbnVsbCApIHx8IHsgbWFyZ2luVG9wOiAwIH0gKS5tYXJnaW5U
b3AgIT09ICIxJSI7CgkJfQoKCQlpZiAoIHR5cGVvZiBjb250YWluZXIuc3R5bGUu
em9vbSAhPT0gInVuZGVmaW5lZCIgKSB7CgkJCWNvbnRhaW5lci5zdHlsZS56b29t
ID0gMTsKCQl9CgoJCWJvZHkucmVtb3ZlQ2hpbGQoIGNvbnRhaW5lciApOwoJCW1h
cmdpbkRpdiA9IGRpdiA9IGNvbnRhaW5lciA9IG51bGw7CgoJCWpRdWVyeS5leHRl
bmQoIHN1cHBvcnQsIG9mZnNldFN1cHBvcnQgKTsKCX0pOwoKCXJldHVybiBzdXBw
b3J0Owp9KSgpOwoKCgoKdmFyIHJicmFjZSA9IC9eKD86XHsuKlx9fFxbLipcXSkk
LywKCXJtdWx0aURhc2ggPSAvKFtBLVpdKS9nOwoKalF1ZXJ5LmV4dGVuZCh7Cglj
YWNoZToge30sCgoJLy8gUGxlYXNlIHVzZSB3aXRoIGNhdXRpb24KCXV1aWQ6IDAs
CgoJLy8gVW5pcXVlIGZvciBlYWNoIGNvcHkgb2YgalF1ZXJ5IG9uIHRoZSBwYWdl
CgkvLyBOb24tZGlnaXRzIHJlbW92ZWQgdG8gbWF0Y2ggcmlubGluZWpRdWVyeQoJ
ZXhwYW5kbzogImpRdWVyeSIgKyAoIGpRdWVyeS5mbi5qcXVlcnkgKyBNYXRoLnJh
bmRvbSgpICkucmVwbGFjZSggL1xEL2csICIiICksCgoJLy8gVGhlIGZvbGxvd2lu
ZyBlbGVtZW50cyB0aHJvdyB1bmNhdGNoYWJsZSBleGNlcHRpb25zIGlmIHlvdQoJ
Ly8gYXR0ZW1wdCB0byBhZGQgZXhwYW5kbyBwcm9wZXJ0aWVzIHRvIHRoZW0uCglu
b0RhdGE6IHsKCQkiZW1iZWQiOiB0cnVlLAoJCS8vIEJhbiBhbGwgb2JqZWN0cyBl
eGNlcHQgZm9yIEZsYXNoICh3aGljaCBoYW5kbGUgZXhwYW5kb3MpCgkJIm9iamVj
dCI6ICJjbHNpZDpEMjdDREI2RS1BRTZELTExY2YtOTZCOC00NDQ1NTM1NDAwMDAi
LAoJCSJhcHBsZXQiOiB0cnVlCgl9LAoKCWhhc0RhdGE6IGZ1bmN0aW9uKCBlbGVt
ICkgewoJCWVsZW0gPSBlbGVtLm5vZGVUeXBlID8galF1ZXJ5LmNhY2hlWyBlbGVt
W2pRdWVyeS5leHBhbmRvXSBdIDogZWxlbVsgalF1ZXJ5LmV4cGFuZG8gXTsKCQly
ZXR1cm4gISFlbGVtICYmICFpc0VtcHR5RGF0YU9iamVjdCggZWxlbSApOwoJfSwK
CglkYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSwgcHZ0IC8qIEludGVy
bmFsIFVzZSBPbmx5ICovICkgewoJCWlmICggIWpRdWVyeS5hY2NlcHREYXRhKCBl
bGVtICkgKSB7CgkJCXJldHVybjsKCQl9CgoJCXZhciBwcml2YXRlQ2FjaGUsIHRo
aXNDYWNoZSwgcmV0LAoJCQlpbnRlcm5hbEtleSA9IGpRdWVyeS5leHBhbmRvLAoJ
CQlnZXRCeU5hbWUgPSB0eXBlb2YgbmFtZSA9PT0gInN0cmluZyIsCgoJCQkvLyBX
ZSBoYXZlIHRvIGhhbmRsZSBET00gbm9kZXMgYW5kIEpTIG9iamVjdHMgZGlmZmVy
ZW50bHkgYmVjYXVzZSBJRTYtNwoJCQkvLyBjYW4ndCBHQyBvYmplY3QgcmVmZXJl
bmNlcyBwcm9wZXJseSBhY3Jvc3MgdGhlIERPTS1KUyBib3VuZGFyeQoJCQlpc05v
ZGUgPSBlbGVtLm5vZGVUeXBlLAoKCQkJLy8gT25seSBET00gbm9kZXMgbmVlZCB0
aGUgZ2xvYmFsIGpRdWVyeSBjYWNoZTsgSlMgb2JqZWN0IGRhdGEgaXMKCQkJLy8g
YXR0YWNoZWQgZGlyZWN0bHkgdG8gdGhlIG9iamVjdCBzbyBHQyBjYW4gb2NjdXIg
YXV0b21hdGljYWxseQoJCQljYWNoZSA9IGlzTm9kZSA/IGpRdWVyeS5jYWNoZSA6
IGVsZW0sCgoJCQkvLyBPbmx5IGRlZmluaW5nIGFuIElEIGZvciBKUyBvYmplY3Rz
IGlmIGl0cyBjYWNoZSBhbHJlYWR5IGV4aXN0cyBhbGxvd3MKCQkJLy8gdGhlIGNv
ZGUgdG8gc2hvcnRjdXQgb24gdGhlIHNhbWUgcGF0aCBhcyBhIERPTSBub2RlIHdp
dGggbm8gY2FjaGUKCQkJaWQgPSBpc05vZGUgPyBlbGVtWyBpbnRlcm5hbEtleSBd
IDogZWxlbVsgaW50ZXJuYWxLZXkgXSAmJiBpbnRlcm5hbEtleSwKCQkJaXNFdmVu
dHMgPSBuYW1lID09PSAiZXZlbnRzIjsKCgkJLy8gQXZvaWQgZG9pbmcgYW55IG1v
cmUgd29yayB0aGFuIHdlIG5lZWQgdG8gd2hlbiB0cnlpbmcgdG8gZ2V0IGRhdGEg
b24gYW4KCQkvLyBvYmplY3QgdGhhdCBoYXMgbm8gZGF0YSBhdCBhbGwKCQlpZiAo
ICghaWQgfHwgIWNhY2hlW2lkXSB8fCAoIWlzRXZlbnRzICYmICFwdnQgJiYgIWNh
Y2hlW2lkXS5kYXRhKSkgJiYgZ2V0QnlOYW1lICYmIGRhdGEgPT09IHVuZGVmaW5l
ZCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJaWYgKCAhaWQgKSB7CgkJCS8vIE9ubHkg
RE9NIG5vZGVzIG5lZWQgYSBuZXcgdW5pcXVlIElEIGZvciBlYWNoIGVsZW1lbnQg
c2luY2UgdGhlaXIgZGF0YQoJCQkvLyBlbmRzIHVwIGluIHRoZSBnbG9iYWwgY2Fj
aGUKCQkJaWYgKCBpc05vZGUgKSB7CgkJCQllbGVtWyBpbnRlcm5hbEtleSBdID0g
aWQgPSArK2pRdWVyeS51dWlkOwoJCQl9IGVsc2UgewoJCQkJaWQgPSBpbnRlcm5h
bEtleTsKCQkJfQoJCX0KCgkJaWYgKCAhY2FjaGVbIGlkIF0gKSB7CgkJCWNhY2hl
WyBpZCBdID0ge307CgoJCQkvLyBBdm9pZHMgZXhwb3NpbmcgalF1ZXJ5IG1ldGFk
YXRhIG9uIHBsYWluIEpTIG9iamVjdHMgd2hlbiB0aGUgb2JqZWN0CgkJCS8vIGlz
IHNlcmlhbGl6ZWQgdXNpbmcgSlNPTi5zdHJpbmdpZnkKCQkJaWYgKCAhaXNOb2Rl
ICkgewoJCQkJY2FjaGVbIGlkIF0udG9KU09OID0galF1ZXJ5Lm5vb3A7CgkJCX0K
CQl9CgoJCS8vIEFuIG9iamVjdCBjYW4gYmUgcGFzc2VkIHRvIGpRdWVyeS5kYXRh
IGluc3RlYWQgb2YgYSBrZXkvdmFsdWUgcGFpcjsgdGhpcyBnZXRzCgkJLy8gc2hh
bGxvdyBjb3BpZWQgb3ZlciBvbnRvIHRoZSBleGlzdGluZyBjYWNoZQoJCWlmICgg
dHlwZW9mIG5hbWUgPT09ICJvYmplY3QiIHx8IHR5cGVvZiBuYW1lID09PSAiZnVu
Y3Rpb24iICkgewoJCQlpZiAoIHB2dCApIHsKCQkJCWNhY2hlWyBpZCBdID0galF1
ZXJ5LmV4dGVuZCggY2FjaGVbIGlkIF0sIG5hbWUgKTsKCQkJfSBlbHNlIHsKCQkJ
CWNhY2hlWyBpZCBdLmRhdGEgPSBqUXVlcnkuZXh0ZW5kKCBjYWNoZVsgaWQgXS5k
YXRhLCBuYW1lICk7CgkJCX0KCQl9CgoJCXByaXZhdGVDYWNoZSA9IHRoaXNDYWNo
ZSA9IGNhY2hlWyBpZCBdOwoKCQkvLyBqUXVlcnkgZGF0YSgpIGlzIHN0b3JlZCBp
biBhIHNlcGFyYXRlIG9iamVjdCBpbnNpZGUgdGhlIG9iamVjdCdzIGludGVybmFs
IGRhdGEKCQkvLyBjYWNoZSBpbiBvcmRlciB0byBhdm9pZCBrZXkgY29sbGlzaW9u
cyBiZXR3ZWVuIGludGVybmFsIGRhdGEgYW5kIHVzZXItZGVmaW5lZAoJCS8vIGRh
dGEuCgkJaWYgKCAhcHZ0ICkgewoJCQlpZiAoICF0aGlzQ2FjaGUuZGF0YSApIHsK
CQkJCXRoaXNDYWNoZS5kYXRhID0ge307CgkJCX0KCgkJCXRoaXNDYWNoZSA9IHRo
aXNDYWNoZS5kYXRhOwoJCX0KCgkJaWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7
CgkJCXRoaXNDYWNoZVsgalF1ZXJ5LmNhbWVsQ2FzZSggbmFtZSApIF0gPSBkYXRh
OwoJCX0KCgkJLy8gVXNlcnMgc2hvdWxkIG5vdCBhdHRlbXB0IHRvIGluc3BlY3Qg
dGhlIGludGVybmFsIGV2ZW50cyBvYmplY3QgdXNpbmcgalF1ZXJ5LmRhdGEsCgkJ
Ly8gaXQgaXMgdW5kb2N1bWVudGVkIGFuZCBzdWJqZWN0IHRvIGNoYW5nZS4gQnV0
IGRvZXMgYW55b25lIGxpc3Rlbj8gTm8uCgkJaWYgKCBpc0V2ZW50cyAmJiAhdGhp
c0NhY2hlWyBuYW1lIF0gKSB7CgkJCXJldHVybiBwcml2YXRlQ2FjaGUuZXZlbnRz
OwoJCX0KCgkJLy8gQ2hlY2sgZm9yIGJvdGggY29udmVydGVkLXRvLWNhbWVsIGFu
ZCBub24tY29udmVydGVkIGRhdGEgcHJvcGVydHkgbmFtZXMKCQkvLyBJZiBhIGRh
dGEgcHJvcGVydHkgd2FzIHNwZWNpZmllZAoJCWlmICggZ2V0QnlOYW1lICkgewoK
CQkJLy8gRmlyc3QgVHJ5IHRvIGZpbmQgYXMtaXMgcHJvcGVydHkgZGF0YQoJCQly
ZXQgPSB0aGlzQ2FjaGVbIG5hbWUgXTsKCgkJCS8vIFRlc3QgZm9yIG51bGx8dW5k
ZWZpbmVkIHByb3BlcnR5IGRhdGEKCQkJaWYgKCByZXQgPT0gbnVsbCApIHsKCgkJ
CQkvLyBUcnkgdG8gZmluZCB0aGUgY2FtZWxDYXNlZCBwcm9wZXJ0eQoJCQkJcmV0
ID0gdGhpc0NhY2hlWyBqUXVlcnkuY2FtZWxDYXNlKCBuYW1lICkgXTsKCQkJfQoJ
CX0gZWxzZSB7CgkJCXJldCA9IHRoaXNDYWNoZTsKCQl9CgoJCXJldHVybiByZXQ7
Cgl9LAoKCXJlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBwdnQgLyog
SW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7CgkJaWYgKCAhalF1ZXJ5LmFjY2VwdERh
dGEoIGVsZW0gKSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdmFyIHRoaXNDYWNoZSwg
aSwgbCwKCgkJCS8vIFJlZmVyZW5jZSB0byBpbnRlcm5hbCBkYXRhIGNhY2hlIGtl
eQoJCQlpbnRlcm5hbEtleSA9IGpRdWVyeS5leHBhbmRvLAoKCQkJaXNOb2RlID0g
ZWxlbS5ub2RlVHlwZSwKCgkJCS8vIFNlZSBqUXVlcnkuZGF0YSBmb3IgbW9yZSBp
bmZvcm1hdGlvbgoJCQljYWNoZSA9IGlzTm9kZSA/IGpRdWVyeS5jYWNoZSA6IGVs
ZW0sCgoJCQkvLyBTZWUgalF1ZXJ5LmRhdGEgZm9yIG1vcmUgaW5mb3JtYXRpb24K
CQkJaWQgPSBpc05vZGUgPyBlbGVtWyBpbnRlcm5hbEtleSBdIDogaW50ZXJuYWxL
ZXk7CgoJCS8vIElmIHRoZXJlIGlzIGFscmVhZHkgbm8gY2FjaGUgZW50cnkgZm9y
IHRoaXMgb2JqZWN0LCB0aGVyZSBpcyBubwoJCS8vIHB1cnBvc2UgaW4gY29udGlu
dWluZwoJCWlmICggIWNhY2hlWyBpZCBdICkgewoJCQlyZXR1cm47CgkJfQoKCQlp
ZiAoIG5hbWUgKSB7CgoJCQl0aGlzQ2FjaGUgPSBwdnQgPyBjYWNoZVsgaWQgXSA6
IGNhY2hlWyBpZCBdLmRhdGE7CgoJCQlpZiAoIHRoaXNDYWNoZSApIHsKCgkJCQkv
LyBTdXBwb3J0IGFycmF5IG9yIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmcgbmFtZXMg
Zm9yIGRhdGEga2V5cwoJCQkJaWYgKCAhalF1ZXJ5LmlzQXJyYXkoIG5hbWUgKSAp
IHsKCgkJCQkJLy8gdHJ5IHRoZSBzdHJpbmcgYXMgYSBrZXkgYmVmb3JlIGFueSBt
YW5pcHVsYXRpb24KCQkJCQlpZiAoIG5hbWUgaW4gdGhpc0NhY2hlICkgewoJCQkJ
CQluYW1lID0gWyBuYW1lIF07CgkJCQkJfSBlbHNlIHsKCgkJCQkJCS8vIHNwbGl0
IHRoZSBjYW1lbCBjYXNlZCB2ZXJzaW9uIGJ5IHNwYWNlcyB1bmxlc3MgYSBrZXkg
d2l0aCB0aGUgc3BhY2VzIGV4aXN0cwoJCQkJCQluYW1lID0galF1ZXJ5LmNhbWVs
Q2FzZSggbmFtZSApOwoJCQkJCQlpZiAoIG5hbWUgaW4gdGhpc0NhY2hlICkgewoJ
CQkJCQkJbmFtZSA9IFsgbmFtZSBdOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJbmFt
ZSA9IG5hbWUuc3BsaXQoICIgIiApOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoKCQkJ
CWZvciAoIGkgPSAwLCBsID0gbmFtZS5sZW5ndGg7IGkgPCBsOyBpKysgKSB7CgkJ
CQkJZGVsZXRlIHRoaXNDYWNoZVsgbmFtZVtpXSBdOwoJCQkJfQoKCQkJCS8vIElm
IHRoZXJlIGlzIG5vIGRhdGEgbGVmdCBpbiB0aGUgY2FjaGUsIHdlIHdhbnQgdG8g
Y29udGludWUKCQkJCS8vIGFuZCBsZXQgdGhlIGNhY2hlIG9iamVjdCBpdHNlbGYg
Z2V0IGRlc3Ryb3llZAoJCQkJaWYgKCAhKCBwdnQgPyBpc0VtcHR5RGF0YU9iamVj
dCA6IGpRdWVyeS5pc0VtcHR5T2JqZWN0ICkoIHRoaXNDYWNoZSApICkgewoJCQkJ
CXJldHVybjsKCQkJCX0KCQkJfQoJCX0KCgkJLy8gU2VlIGpRdWVyeS5kYXRhIGZv
ciBtb3JlIGluZm9ybWF0aW9uCgkJaWYgKCAhcHZ0ICkgewoJCQlkZWxldGUgY2Fj
aGVbIGlkIF0uZGF0YTsKCgkJCS8vIERvbid0IGRlc3Ryb3kgdGhlIHBhcmVudCBj
YWNoZSB1bmxlc3MgdGhlIGludGVybmFsIGRhdGEgb2JqZWN0CgkJCS8vIGhhZCBi
ZWVuIHRoZSBvbmx5IHRoaW5nIGxlZnQgaW4gaXQKCQkJaWYgKCAhaXNFbXB0eURh
dGFPYmplY3QoY2FjaGVbIGlkIF0pICkgewoJCQkJcmV0dXJuOwoJCQl9CgkJfQoK
CQkvLyBCcm93c2VycyB0aGF0IGZhaWwgZXhwYW5kbyBkZWxldGlvbiBhbHNvIHJl
ZnVzZSB0byBkZWxldGUgZXhwYW5kb3Mgb24KCQkvLyB0aGUgd2luZG93LCBidXQg
aXQgd2lsbCBhbGxvdyBpdCBvbiBhbGwgb3RoZXIgSlMgb2JqZWN0czsgb3RoZXIg
YnJvd3NlcnMKCQkvLyBkb24ndCBjYXJlCgkJLy8gRW5zdXJlIHRoYXQgYGNhY2hl
YCBpcyBub3QgYSB3aW5kb3cgb2JqZWN0ICMxMDA4MAoJCWlmICggalF1ZXJ5LnN1
cHBvcnQuZGVsZXRlRXhwYW5kbyB8fCAhY2FjaGUuc2V0SW50ZXJ2YWwgKSB7CgkJ
CWRlbGV0ZSBjYWNoZVsgaWQgXTsKCQl9IGVsc2UgewoJCQljYWNoZVsgaWQgXSA9
IG51bGw7CgkJfQoKCQkvLyBXZSBkZXN0cm95ZWQgdGhlIGNhY2hlIGFuZCBuZWVk
IHRvIGVsaW1pbmF0ZSB0aGUgZXhwYW5kbyBvbiB0aGUgbm9kZSB0byBhdm9pZAoJ
CS8vIGZhbHNlIGxvb2t1cHMgaW4gdGhlIGNhY2hlIGZvciBlbnRyaWVzIHRoYXQg
bm8gbG9uZ2VyIGV4aXN0CgkJaWYgKCBpc05vZGUgKSB7CgkJCS8vIElFIGRvZXMg
bm90IGFsbG93IHVzIHRvIGRlbGV0ZSBleHBhbmRvIHByb3BlcnRpZXMgZnJvbSBu
b2RlcywKCQkJLy8gbm9yIGRvZXMgaXQgaGF2ZSBhIHJlbW92ZUF0dHJpYnV0ZSBm
dW5jdGlvbiBvbiBEb2N1bWVudCBub2RlczsKCQkJLy8gd2UgbXVzdCBoYW5kbGUg
YWxsIG9mIHRoZXNlIGNhc2VzCgkJCWlmICggalF1ZXJ5LnN1cHBvcnQuZGVsZXRl
RXhwYW5kbyApIHsKCQkJCWRlbGV0ZSBlbGVtWyBpbnRlcm5hbEtleSBdOwoJCQl9
IGVsc2UgaWYgKCBlbGVtLnJlbW92ZUF0dHJpYnV0ZSApIHsKCQkJCWVsZW0ucmVt
b3ZlQXR0cmlidXRlKCBpbnRlcm5hbEtleSApOwoJCQl9IGVsc2UgewoJCQkJZWxl
bVsgaW50ZXJuYWxLZXkgXSA9IG51bGw7CgkJCX0KCQl9Cgl9LAoKCS8vIEZvciBp
bnRlcm5hbCB1c2Ugb25seS4KCV9kYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwg
ZGF0YSApIHsKCQlyZXR1cm4galF1ZXJ5LmRhdGEoIGVsZW0sIG5hbWUsIGRhdGEs
IHRydWUgKTsKCX0sCgoJLy8gQSBtZXRob2QgZm9yIGRldGVybWluaW5nIGlmIGEg
RE9NIG5vZGUgY2FuIGhhbmRsZSB0aGUgZGF0YSBleHBhbmRvCglhY2NlcHREYXRh
OiBmdW5jdGlvbiggZWxlbSApIHsKCQlpZiAoIGVsZW0ubm9kZU5hbWUgKSB7CgkJ
CXZhciBtYXRjaCA9IGpRdWVyeS5ub0RhdGFbIGVsZW0ubm9kZU5hbWUudG9Mb3dl
ckNhc2UoKSBdOwoKCQkJaWYgKCBtYXRjaCApIHsKCQkJCXJldHVybiAhKG1hdGNo
ID09PSB0cnVlIHx8IGVsZW0uZ2V0QXR0cmlidXRlKCJjbGFzc2lkIikgIT09IG1h
dGNoKTsKCQkJfQoJCX0KCgkJcmV0dXJuIHRydWU7Cgl9Cn0pOwoKalF1ZXJ5LmZu
LmV4dGVuZCh7CglkYXRhOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQl2YXIg
cGFydHMsIHBhcnQsIGF0dHIsIG5hbWUsIGwsCgkJCWVsZW0gPSB0aGlzWzBdLAoJ
CQlpID0gMCwKCQkJZGF0YSA9IG51bGw7CgoJCS8vIEdldHMgYWxsIHZhbHVlcwoJ
CWlmICgga2V5ID09PSB1bmRlZmluZWQgKSB7CgkJCWlmICggdGhpcy5sZW5ndGgg
KSB7CgkJCQlkYXRhID0galF1ZXJ5LmRhdGEoIGVsZW0gKTsKCgkJCQlpZiAoIGVs
ZW0ubm9kZVR5cGUgPT09IDEgJiYgIWpRdWVyeS5fZGF0YSggZWxlbSwgInBhcnNl
ZEF0dHJzIiApICkgewoJCQkJCWF0dHIgPSBlbGVtLmF0dHJpYnV0ZXM7CgkJCQkJ
Zm9yICggbCA9IGF0dHIubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCQkJCQluYW1l
ID0gYXR0cltpXS5uYW1lOwoKCQkJCQkJaWYgKCBuYW1lLmluZGV4T2YoICJkYXRh
LSIgKSA9PT0gMCApIHsKCQkJCQkJCW5hbWUgPSBqUXVlcnkuY2FtZWxDYXNlKCBu
YW1lLnN1YnN0cmluZyg1KSApOwoKCQkJCQkJCWRhdGFBdHRyKCBlbGVtLCBuYW1l
LCBkYXRhWyBuYW1lIF0gKTsKCQkJCQkJfQoJCQkJCX0KCQkJCQlqUXVlcnkuX2Rh
dGEoIGVsZW0sICJwYXJzZWRBdHRycyIsIHRydWUgKTsKCQkJCX0KCQkJfQoKCQkJ
cmV0dXJuIGRhdGE7CgkJfQoKCQkvLyBTZXRzIG11bHRpcGxlIHZhbHVlcwoJCWlm
ICggdHlwZW9mIGtleSA9PT0gIm9iamVjdCIgKSB7CgkJCXJldHVybiB0aGlzLmVh
Y2goZnVuY3Rpb24oKSB7CgkJCQlqUXVlcnkuZGF0YSggdGhpcywga2V5ICk7CgkJ
CX0pOwoJCX0KCgkJcGFydHMgPSBrZXkuc3BsaXQoICIuIiwgMiApOwoJCXBhcnRz
WzFdID0gcGFydHNbMV0gPyAiLiIgKyBwYXJ0c1sxXSA6ICIiOwoJCXBhcnQgPSBw
YXJ0c1sxXSArICIhIjsKCgkJcmV0dXJuIGpRdWVyeS5hY2Nlc3MoIHRoaXMsIGZ1
bmN0aW9uKCB2YWx1ZSApIHsKCgkJCWlmICggdmFsdWUgPT09IHVuZGVmaW5lZCAp
IHsKCQkJCWRhdGEgPSB0aGlzLnRyaWdnZXJIYW5kbGVyKCAiZ2V0RGF0YSIgKyBw
YXJ0LCBbIHBhcnRzWzBdIF0gKTsKCgkJCQkvLyBUcnkgdG8gZmV0Y2ggYW55IGlu
dGVybmFsbHkgc3RvcmVkIGRhdGEgZmlyc3QKCQkJCWlmICggZGF0YSA9PT0gdW5k
ZWZpbmVkICYmIGVsZW0gKSB7CgkJCQkJZGF0YSA9IGpRdWVyeS5kYXRhKCBlbGVt
LCBrZXkgKTsKCQkJCQlkYXRhID0gZGF0YUF0dHIoIGVsZW0sIGtleSwgZGF0YSAp
OwoJCQkJfQoKCQkJCXJldHVybiBkYXRhID09PSB1bmRlZmluZWQgJiYgcGFydHNb
MV0gPwoJCQkJCXRoaXMuZGF0YSggcGFydHNbMF0gKSA6CgkJCQkJZGF0YTsKCQkJ
fQoKCQkJcGFydHNbMV0gPSB2YWx1ZTsKCQkJdGhpcy5lYWNoKGZ1bmN0aW9uKCkg
ewoJCQkJdmFyIHNlbGYgPSBqUXVlcnkoIHRoaXMgKTsKCgkJCQlzZWxmLnRyaWdn
ZXJIYW5kbGVyKCAic2V0RGF0YSIgKyBwYXJ0LCBwYXJ0cyApOwoJCQkJalF1ZXJ5
LmRhdGEoIHRoaXMsIGtleSwgdmFsdWUgKTsKCQkJCXNlbGYudHJpZ2dlckhhbmRs
ZXIoICJjaGFuZ2VEYXRhIiArIHBhcnQsIHBhcnRzICk7CgkJCX0pOwoJCX0sIG51
bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSwgbnVsbCwgZmFsc2UgKTsK
CX0sCgoJcmVtb3ZlRGF0YTogZnVuY3Rpb24oIGtleSApIHsKCQlyZXR1cm4gdGhp
cy5lYWNoKGZ1bmN0aW9uKCkgewoJCQlqUXVlcnkucmVtb3ZlRGF0YSggdGhpcywg
a2V5ICk7CgkJfSk7Cgl9Cn0pOwoKZnVuY3Rpb24gZGF0YUF0dHIoIGVsZW0sIGtl
eSwgZGF0YSApIHsKCS8vIElmIG5vdGhpbmcgd2FzIGZvdW5kIGludGVybmFsbHks
IHRyeSB0byBmZXRjaCBhbnkKCS8vIGRhdGEgZnJvbSB0aGUgSFRNTDUgZGF0YS0q
IGF0dHJpYnV0ZQoJaWYgKCBkYXRhID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2Rl
VHlwZSA9PT0gMSApIHsKCgkJdmFyIG5hbWUgPSAiZGF0YS0iICsga2V5LnJlcGxh
Y2UoIHJtdWx0aURhc2gsICItJDEiICkudG9Mb3dlckNhc2UoKTsKCgkJZGF0YSA9
IGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICk7CgoJCWlmICggdHlwZW9mIGRhdGEg
PT09ICJzdHJpbmciICkgewoJCQl0cnkgewoJCQkJZGF0YSA9IGRhdGEgPT09ICJ0
cnVlIiA/IHRydWUgOgoJCQkJZGF0YSA9PT0gImZhbHNlIiA/IGZhbHNlIDoKCQkJ
CWRhdGEgPT09ICJudWxsIiA/IG51bGwgOgoJCQkJalF1ZXJ5LmlzTnVtZXJpYygg
ZGF0YSApID8gK2RhdGEgOgoJCQkJCXJicmFjZS50ZXN0KCBkYXRhICkgPyBqUXVl
cnkucGFyc2VKU09OKCBkYXRhICkgOgoJCQkJCWRhdGE7CgkJCX0gY2F0Y2goIGUg
KSB7fQoKCQkJLy8gTWFrZSBzdXJlIHdlIHNldCB0aGUgZGF0YSBzbyBpdCBpc24n
dCBjaGFuZ2VkIGxhdGVyCgkJCWpRdWVyeS5kYXRhKCBlbGVtLCBrZXksIGRhdGEg
KTsKCgkJfSBlbHNlIHsKCQkJZGF0YSA9IHVuZGVmaW5lZDsKCQl9Cgl9CgoJcmV0
dXJuIGRhdGE7Cn0KCi8vIGNoZWNrcyBhIGNhY2hlIG9iamVjdCBmb3IgZW1wdGlu
ZXNzCmZ1bmN0aW9uIGlzRW1wdHlEYXRhT2JqZWN0KCBvYmogKSB7Cglmb3IgKCB2
YXIgbmFtZSBpbiBvYmogKSB7CgoJCS8vIGlmIHRoZSBwdWJsaWMgZGF0YSBvYmpl
Y3QgaXMgZW1wdHksIHRoZSBwcml2YXRlIGlzIHN0aWxsIGVtcHR5CgkJaWYgKCBu
YW1lID09PSAiZGF0YSIgJiYgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIG9ialtuYW1l
XSApICkgewoJCQljb250aW51ZTsKCQl9CgkJaWYgKCBuYW1lICE9PSAidG9KU09O
IiApIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCX0KCglyZXR1cm4gdHJ1ZTsKfQoK
CgoKZnVuY3Rpb24gaGFuZGxlUXVldWVNYXJrRGVmZXIoIGVsZW0sIHR5cGUsIHNy
YyApIHsKCXZhciBkZWZlckRhdGFLZXkgPSB0eXBlICsgImRlZmVyIiwKCQlxdWV1
ZURhdGFLZXkgPSB0eXBlICsgInF1ZXVlIiwKCQltYXJrRGF0YUtleSA9IHR5cGUg
KyAibWFyayIsCgkJZGVmZXIgPSBqUXVlcnkuX2RhdGEoIGVsZW0sIGRlZmVyRGF0
YUtleSApOwoJaWYgKCBkZWZlciAmJgoJCSggc3JjID09PSAicXVldWUiIHx8ICFq
UXVlcnkuX2RhdGEoZWxlbSwgcXVldWVEYXRhS2V5KSApICYmCgkJKCBzcmMgPT09
ICJtYXJrIiB8fCAhalF1ZXJ5Ll9kYXRhKGVsZW0sIG1hcmtEYXRhS2V5KSApICkg
ewoJCS8vIEdpdmUgcm9vbSBmb3IgaGFyZC1jb2RlZCBjYWxsYmFja3MgdG8gZmly
ZSBmaXJzdAoJCS8vIGFuZCBldmVudHVhbGx5IG1hcmsvcXVldWUgc29tZXRoaW5n
IGVsc2Ugb24gdGhlIGVsZW1lbnQKCQlzZXRUaW1lb3V0KCBmdW5jdGlvbigpIHsK
CQkJaWYgKCAhalF1ZXJ5Ll9kYXRhKCBlbGVtLCBxdWV1ZURhdGFLZXkgKSAmJgoJ
CQkJIWpRdWVyeS5fZGF0YSggZWxlbSwgbWFya0RhdGFLZXkgKSApIHsKCQkJCWpR
dWVyeS5yZW1vdmVEYXRhKCBlbGVtLCBkZWZlckRhdGFLZXksIHRydWUgKTsKCQkJ
CWRlZmVyLmZpcmUoKTsKCQkJfQoJCX0sIDAgKTsKCX0KfQoKalF1ZXJ5LmV4dGVu
ZCh7CgoJX21hcms6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkgewoJCWlmICggZWxl
bSApIHsKCQkJdHlwZSA9ICggdHlwZSB8fCAiZngiICkgKyAibWFyayI7CgkJCWpR
dWVyeS5fZGF0YSggZWxlbSwgdHlwZSwgKGpRdWVyeS5fZGF0YSggZWxlbSwgdHlw
ZSApIHx8IDApICsgMSApOwoJCX0KCX0sCgoJX3VubWFyazogZnVuY3Rpb24oIGZv
cmNlLCBlbGVtLCB0eXBlICkgewoJCWlmICggZm9yY2UgIT09IHRydWUgKSB7CgkJ
CXR5cGUgPSBlbGVtOwoJCQllbGVtID0gZm9yY2U7CgkJCWZvcmNlID0gZmFsc2U7
CgkJfQoJCWlmICggZWxlbSApIHsKCQkJdHlwZSA9IHR5cGUgfHwgImZ4IjsKCQkJ
dmFyIGtleSA9IHR5cGUgKyAibWFyayIsCgkJCQljb3VudCA9IGZvcmNlID8gMCA6
ICggKGpRdWVyeS5fZGF0YSggZWxlbSwga2V5ICkgfHwgMSkgLSAxICk7CgkJCWlm
ICggY291bnQgKSB7CgkJCQlqUXVlcnkuX2RhdGEoIGVsZW0sIGtleSwgY291bnQg
KTsKCQkJfSBlbHNlIHsKCQkJCWpRdWVyeS5yZW1vdmVEYXRhKCBlbGVtLCBrZXks
IHRydWUgKTsKCQkJCWhhbmRsZVF1ZXVlTWFya0RlZmVyKCBlbGVtLCB0eXBlLCAi
bWFyayIgKTsKCQkJfQoJCX0KCX0sCgoJcXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0
eXBlLCBkYXRhICkgewoJCXZhciBxOwoJCWlmICggZWxlbSApIHsKCQkJdHlwZSA9
ICggdHlwZSB8fCAiZngiICkgKyAicXVldWUiOwoJCQlxID0galF1ZXJ5Ll9kYXRh
KCBlbGVtLCB0eXBlICk7CgoJCQkvLyBTcGVlZCB1cCBkZXF1ZXVlIGJ5IGdldHRp
bmcgb3V0IHF1aWNrbHkgaWYgdGhpcyBpcyBqdXN0IGEgbG9va3VwCgkJCWlmICgg
ZGF0YSApIHsKCQkJCWlmICggIXEgfHwgalF1ZXJ5LmlzQXJyYXkoZGF0YSkgKSB7
CgkJCQkJcSA9IGpRdWVyeS5fZGF0YSggZWxlbSwgdHlwZSwgalF1ZXJ5Lm1ha2VB
cnJheShkYXRhKSApOwoJCQkJfSBlbHNlIHsKCQkJCQlxLnB1c2goIGRhdGEgKTsK
CQkJCX0KCQkJfQoJCQlyZXR1cm4gcSB8fCBbXTsKCQl9Cgl9LAoKCWRlcXVldWU6
IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkgewoJCXR5cGUgPSB0eXBlIHx8ICJmeCI7
CgoJCXZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggZWxlbSwgdHlwZSApLAoJCQlm
biA9IHF1ZXVlLnNoaWZ0KCksCgkJCWhvb2tzID0ge307CgoJCS8vIElmIHRoZSBm
eCBxdWV1ZSBpcyBkZXF1ZXVlZCwgYWx3YXlzIHJlbW92ZSB0aGUgcHJvZ3Jlc3Mg
c2VudGluZWwKCQlpZiAoIGZuID09PSAiaW5wcm9ncmVzcyIgKSB7CgkJCWZuID0g
cXVldWUuc2hpZnQoKTsKCQl9CgoJCWlmICggZm4gKSB7CgkJCS8vIEFkZCBhIHBy
b2dyZXNzIHNlbnRpbmVsIHRvIHByZXZlbnQgdGhlIGZ4IHF1ZXVlIGZyb20gYmVp
bmcKCQkJLy8gYXV0b21hdGljYWxseSBkZXF1ZXVlZAoJCQlpZiAoIHR5cGUgPT09
ICJmeCIgKSB7CgkJCQlxdWV1ZS51bnNoaWZ0KCAiaW5wcm9ncmVzcyIgKTsKCQkJ
fQoKCQkJalF1ZXJ5Ll9kYXRhKCBlbGVtLCB0eXBlICsgIi5ydW4iLCBob29rcyAp
OwoJCQlmbi5jYWxsKCBlbGVtLCBmdW5jdGlvbigpIHsKCQkJCWpRdWVyeS5kZXF1
ZXVlKCBlbGVtLCB0eXBlICk7CgkJCX0sIGhvb2tzICk7CgkJfQoKCQlpZiAoICFx
dWV1ZS5sZW5ndGggKSB7CgkJCWpRdWVyeS5yZW1vdmVEYXRhKCBlbGVtLCB0eXBl
ICsgInF1ZXVlICIgKyB0eXBlICsgIi5ydW4iLCB0cnVlICk7CgkJCWhhbmRsZVF1
ZXVlTWFya0RlZmVyKCBlbGVtLCB0eXBlLCAicXVldWUiICk7CgkJfQoJfQp9KTsK
CmpRdWVyeS5mbi5leHRlbmQoewoJcXVldWU6IGZ1bmN0aW9uKCB0eXBlLCBkYXRh
ICkgewoJCXZhciBzZXR0ZXIgPSAyOwoKCQlpZiAoIHR5cGVvZiB0eXBlICE9PSAi
c3RyaW5nIiApIHsKCQkJZGF0YSA9IHR5cGU7CgkJCXR5cGUgPSAiZngiOwoJCQlz
ZXR0ZXItLTsKCQl9CgoJCWlmICggYXJndW1lbnRzLmxlbmd0aCA8IHNldHRlciAp
IHsKCQkJcmV0dXJuIGpRdWVyeS5xdWV1ZSggdGhpc1swXSwgdHlwZSApOwoJCX0K
CgkJcmV0dXJuIGRhdGEgPT09IHVuZGVmaW5lZCA/CgkJCXRoaXMgOgoJCQl0aGlz
LmVhY2goZnVuY3Rpb24oKSB7CgkJCQl2YXIgcXVldWUgPSBqUXVlcnkucXVldWUo
IHRoaXMsIHR5cGUsIGRhdGEgKTsKCgkJCQlpZiAoIHR5cGUgPT09ICJmeCIgJiYg
cXVldWVbMF0gIT09ICJpbnByb2dyZXNzIiApIHsKCQkJCQlqUXVlcnkuZGVxdWV1
ZSggdGhpcywgdHlwZSApOwoJCQkJfQoJCQl9KTsKCX0sCglkZXF1ZXVlOiBmdW5j
dGlvbiggdHlwZSApIHsKCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkgewoJ
CQlqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApOwoJCX0pOwoJfSwKCS8vIEJh
c2VkIG9mZiBvZiB0aGUgcGx1Z2luIGJ5IENsaW50IEhlbGZlcnMsIHdpdGggcGVy
bWlzc2lvbi4KCS8vIGh0dHA6Ly9ibGluZHNpZ25hbHMuY29tL2luZGV4LnBocC8y
MDA5LzA3L2pxdWVyeS1kZWxheS8KCWRlbGF5OiBmdW5jdGlvbiggdGltZSwgdHlw
ZSApIHsKCQl0aW1lID0galF1ZXJ5LmZ4ID8galF1ZXJ5LmZ4LnNwZWVkc1sgdGlt
ZSBdIHx8IHRpbWUgOiB0aW1lOwoJCXR5cGUgPSB0eXBlIHx8ICJmeCI7CgoJCXJl
dHVybiB0aGlzLnF1ZXVlKCB0eXBlLCBmdW5jdGlvbiggbmV4dCwgaG9va3MgKSB7
CgkJCXZhciB0aW1lb3V0ID0gc2V0VGltZW91dCggbmV4dCwgdGltZSApOwoJCQlo
b29rcy5zdG9wID0gZnVuY3Rpb24oKSB7CgkJCQljbGVhclRpbWVvdXQoIHRpbWVv
dXQgKTsKCQkJfTsKCQl9KTsKCX0sCgljbGVhclF1ZXVlOiBmdW5jdGlvbiggdHlw
ZSApIHsKCQlyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSB8fCAiZngiLCBbXSApOwoJ
fSwKCS8vIEdldCBhIHByb21pc2UgcmVzb2x2ZWQgd2hlbiBxdWV1ZXMgb2YgYSBj
ZXJ0YWluIHR5cGUKCS8vIGFyZSBlbXB0aWVkIChmeCBpcyB0aGUgdHlwZSBieSBk
ZWZhdWx0KQoJcHJvbWlzZTogZnVuY3Rpb24oIHR5cGUsIG9iamVjdCApIHsKCQlp
ZiAoIHR5cGVvZiB0eXBlICE9PSAic3RyaW5nIiApIHsKCQkJb2JqZWN0ID0gdHlw
ZTsKCQkJdHlwZSA9IHVuZGVmaW5lZDsKCQl9CgkJdHlwZSA9IHR5cGUgfHwgImZ4
IjsKCQl2YXIgZGVmZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSwKCQkJZWxlbWVudHMg
PSB0aGlzLAoJCQlpID0gZWxlbWVudHMubGVuZ3RoLAoJCQljb3VudCA9IDEsCgkJ
CWRlZmVyRGF0YUtleSA9IHR5cGUgKyAiZGVmZXIiLAoJCQlxdWV1ZURhdGFLZXkg
PSB0eXBlICsgInF1ZXVlIiwKCQkJbWFya0RhdGFLZXkgPSB0eXBlICsgIm1hcmsi
LAoJCQl0bXA7CgkJZnVuY3Rpb24gcmVzb2x2ZSgpIHsKCQkJaWYgKCAhKCAtLWNv
dW50ICkgKSB7CgkJCQlkZWZlci5yZXNvbHZlV2l0aCggZWxlbWVudHMsIFsgZWxl
bWVudHMgXSApOwoJCQl9CgkJfQoJCXdoaWxlKCBpLS0gKSB7CgkJCWlmICgoIHRt
cCA9IGpRdWVyeS5kYXRhKCBlbGVtZW50c1sgaSBdLCBkZWZlckRhdGFLZXksIHVu
ZGVmaW5lZCwgdHJ1ZSApIHx8CgkJCQkJKCBqUXVlcnkuZGF0YSggZWxlbWVudHNb
IGkgXSwgcXVldWVEYXRhS2V5LCB1bmRlZmluZWQsIHRydWUgKSB8fAoJCQkJCQlq
UXVlcnkuZGF0YSggZWxlbWVudHNbIGkgXSwgbWFya0RhdGFLZXksIHVuZGVmaW5l
ZCwgdHJ1ZSApICkgJiYKCQkJCQlqUXVlcnkuZGF0YSggZWxlbWVudHNbIGkgXSwg
ZGVmZXJEYXRhS2V5LCBqUXVlcnkuQ2FsbGJhY2tzKCAib25jZSBtZW1vcnkiICks
IHRydWUgKSApKSB7CgkJCQljb3VudCsrOwoJCQkJdG1wLmFkZCggcmVzb2x2ZSAp
OwoJCQl9CgkJfQoJCXJlc29sdmUoKTsKCQlyZXR1cm4gZGVmZXIucHJvbWlzZSgg
b2JqZWN0ICk7Cgl9Cn0pOwoKCgoKdmFyIHJjbGFzcyA9IC9bXG5cdFxyXS9nLAoJ
cnNwYWNlID0gL1xzKy8sCglycmV0dXJuID0gL1xyL2csCglydHlwZSA9IC9eKD86
YnV0dG9ufGlucHV0KSQvaSwKCXJmb2N1c2FibGUgPSAvXig/OmJ1dHRvbnxpbnB1
dHxvYmplY3R8c2VsZWN0fHRleHRhcmVhKSQvaSwKCXJjbGlja2FibGUgPSAvXmEo
PzpyZWEpPyQvaSwKCXJib29sZWFuID0gL14oPzphdXRvZm9jdXN8YXV0b3BsYXl8
YXN5bmN8Y2hlY2tlZHxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58bG9v
cHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZHxzZWxlY3Rl
ZCkkL2ksCglnZXRTZXRBdHRyaWJ1dGUgPSBqUXVlcnkuc3VwcG9ydC5nZXRTZXRB
dHRyaWJ1dGUsCglub2RlSG9vaywgYm9vbEhvb2ssIGZpeFNwZWNpZmllZDsKCmpR
dWVyeS5mbi5leHRlbmQoewoJYXR0cjogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkg
ewoJCXJldHVybiBqUXVlcnkuYWNjZXNzKCB0aGlzLCBqUXVlcnkuYXR0ciwgbmFt
ZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7Cgl9LAoKCXJlbW92ZUF0
dHI6IGZ1bmN0aW9uKCBuYW1lICkgewoJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rp
b24oKSB7CgkJCWpRdWVyeS5yZW1vdmVBdHRyKCB0aGlzLCBuYW1lICk7CgkJfSk7
Cgl9LAoKCXByb3A6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHsKCQlyZXR1cm4g
alF1ZXJ5LmFjY2VzcyggdGhpcywgalF1ZXJ5LnByb3AsIG5hbWUsIHZhbHVlLCBh
cmd1bWVudHMubGVuZ3RoID4gMSApOwoJfSwKCglyZW1vdmVQcm9wOiBmdW5jdGlv
biggbmFtZSApIHsKCQluYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBu
YW1lOwoJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7CgkJCS8vIHRyeS9j
YXRjaCBoYW5kbGVzIGNhc2VzIHdoZXJlIElFIGJhbGtzIChzdWNoIGFzIHJlbW92
aW5nIGEgcHJvcGVydHkgb24gd2luZG93KQoJCQl0cnkgewoJCQkJdGhpc1sgbmFt
ZSBdID0gdW5kZWZpbmVkOwoJCQkJZGVsZXRlIHRoaXNbIG5hbWUgXTsKCQkJfSBj
YXRjaCggZSApIHt9CgkJfSk7Cgl9LAoKCWFkZENsYXNzOiBmdW5jdGlvbiggdmFs
dWUgKSB7CgkJdmFyIGNsYXNzTmFtZXMsIGksIGwsIGVsZW0sCgkJCXNldENsYXNz
LCBjLCBjbDsKCgkJaWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKSApIHsK
CQkJcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiggaiApIHsKCQkJCWpRdWVyeSgg
dGhpcyApLmFkZENsYXNzKCB2YWx1ZS5jYWxsKHRoaXMsIGosIHRoaXMuY2xhc3NO
YW1lKSApOwoJCQl9KTsKCQl9CgoJCWlmICggdmFsdWUgJiYgdHlwZW9mIHZhbHVl
ID09PSAic3RyaW5nIiApIHsKCQkJY2xhc3NOYW1lcyA9IHZhbHVlLnNwbGl0KCBy
c3BhY2UgKTsKCgkJCWZvciAoIGkgPSAwLCBsID0gdGhpcy5sZW5ndGg7IGkgPCBs
OyBpKysgKSB7CgkJCQllbGVtID0gdGhpc1sgaSBdOwoKCQkJCWlmICggZWxlbS5u
b2RlVHlwZSA9PT0gMSApIHsKCQkJCQlpZiAoICFlbGVtLmNsYXNzTmFtZSAmJiBj
bGFzc05hbWVzLmxlbmd0aCA9PT0gMSApIHsKCQkJCQkJZWxlbS5jbGFzc05hbWUg
PSB2YWx1ZTsKCgkJCQkJfSBlbHNlIHsKCQkJCQkJc2V0Q2xhc3MgPSAiICIgKyBl
bGVtLmNsYXNzTmFtZSArICIgIjsKCgkJCQkJCWZvciAoIGMgPSAwLCBjbCA9IGNs
YXNzTmFtZXMubGVuZ3RoOyBjIDwgY2w7IGMrKyApIHsKCQkJCQkJCWlmICggIX5z
ZXRDbGFzcy5pbmRleE9mKCAiICIgKyBjbGFzc05hbWVzWyBjIF0gKyAiICIgKSAp
IHsKCQkJCQkJCQlzZXRDbGFzcyArPSBjbGFzc05hbWVzWyBjIF0gKyAiICI7CgkJ
CQkJCQl9CgkJCQkJCX0KCQkJCQkJZWxlbS5jbGFzc05hbWUgPSBqUXVlcnkudHJp
bSggc2V0Q2xhc3MgKTsKCQkJCQl9CgkJCQl9CgkJCX0KCQl9CgoJCXJldHVybiB0
aGlzOwoJfSwKCglyZW1vdmVDbGFzczogZnVuY3Rpb24oIHZhbHVlICkgewoJCXZh
ciBjbGFzc05hbWVzLCBpLCBsLCBlbGVtLCBjbGFzc05hbWUsIGMsIGNsOwoKCQlp
ZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApICkgewoJCQlyZXR1cm4gdGhp
cy5lYWNoKGZ1bmN0aW9uKCBqICkgewoJCQkJalF1ZXJ5KCB0aGlzICkucmVtb3Zl
Q2xhc3MoIHZhbHVlLmNhbGwodGhpcywgaiwgdGhpcy5jbGFzc05hbWUpICk7CgkJ
CX0pOwoJCX0KCgkJaWYgKCAodmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAic3Ry
aW5nIikgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCApIHsKCQkJY2xhc3NOYW1lcyA9
ICggdmFsdWUgfHwgIiIgKS5zcGxpdCggcnNwYWNlICk7CgoJCQlmb3IgKCBpID0g
MCwgbCA9IHRoaXMubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCQkJZWxlbSA9IHRo
aXNbIGkgXTsKCgkJCQlpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgZWxlbS5j
bGFzc05hbWUgKSB7CgkJCQkJaWYgKCB2YWx1ZSApIHsKCQkJCQkJY2xhc3NOYW1l
ID0gKCIgIiArIGVsZW0uY2xhc3NOYW1lICsgIiAiKS5yZXBsYWNlKCByY2xhc3Ms
ICIgIiApOwoJCQkJCQlmb3IgKCBjID0gMCwgY2wgPSBjbGFzc05hbWVzLmxlbmd0
aDsgYyA8IGNsOyBjKysgKSB7CgkJCQkJCQljbGFzc05hbWUgPSBjbGFzc05hbWUu
cmVwbGFjZSgiICIgKyBjbGFzc05hbWVzWyBjIF0gKyAiICIsICIgIik7CgkJCQkJ
CX0KCQkJCQkJZWxlbS5jbGFzc05hbWUgPSBqUXVlcnkudHJpbSggY2xhc3NOYW1l
ICk7CgoJCQkJCX0gZWxzZSB7CgkJCQkJCWVsZW0uY2xhc3NOYW1lID0gIiI7CgkJ
CQkJfQoJCQkJfQoJCQl9CgkJfQoKCQlyZXR1cm4gdGhpczsKCX0sCgoJdG9nZ2xl
Q2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSwgc3RhdGVWYWwgKSB7CgkJdmFyIHR5cGUg
PSB0eXBlb2YgdmFsdWUsCgkJCWlzQm9vbCA9IHR5cGVvZiBzdGF0ZVZhbCA9PT0g
ImJvb2xlYW4iOwoKCQlpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApICkg
ewoJCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCBpICkgewoJCQkJalF1ZXJ5
KCB0aGlzICkudG9nZ2xlQ2xhc3MoIHZhbHVlLmNhbGwodGhpcywgaSwgdGhpcy5j
bGFzc05hbWUsIHN0YXRlVmFsKSwgc3RhdGVWYWwgKTsKCQkJfSk7CgkJfQoKCQly
ZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkgewoJCQlpZiAoIHR5cGUgPT09ICJz
dHJpbmciICkgewoJCQkJLy8gdG9nZ2xlIGluZGl2aWR1YWwgY2xhc3MgbmFtZXMK
CQkJCXZhciBjbGFzc05hbWUsCgkJCQkJaSA9IDAsCgkJCQkJc2VsZiA9IGpRdWVy
eSggdGhpcyApLAoJCQkJCXN0YXRlID0gc3RhdGVWYWwsCgkJCQkJY2xhc3NOYW1l
cyA9IHZhbHVlLnNwbGl0KCByc3BhY2UgKTsKCgkJCQl3aGlsZSAoIChjbGFzc05h
bWUgPSBjbGFzc05hbWVzWyBpKysgXSkgKSB7CgkJCQkJLy8gY2hlY2sgZWFjaCBj
bGFzc05hbWUgZ2l2ZW4sIHNwYWNlIHNlcGVyYXRlZCBsaXN0CgkJCQkJc3RhdGUg
PSBpc0Jvb2wgPyBzdGF0ZSA6ICFzZWxmLmhhc0NsYXNzKCBjbGFzc05hbWUgKTsK
CQkJCQlzZWxmWyBzdGF0ZSA/ICJhZGRDbGFzcyIgOiAicmVtb3ZlQ2xhc3MiIF0o
IGNsYXNzTmFtZSApOwoJCQkJfQoKCQkJfSBlbHNlIGlmICggdHlwZSA9PT0gInVu
ZGVmaW5lZCIgfHwgdHlwZSA9PT0gImJvb2xlYW4iICkgewoJCQkJaWYgKCB0aGlz
LmNsYXNzTmFtZSApIHsKCQkJCQkvLyBzdG9yZSBjbGFzc05hbWUgaWYgc2V0CgkJ
CQkJalF1ZXJ5Ll9kYXRhKCB0aGlzLCAiX19jbGFzc05hbWVfXyIsIHRoaXMuY2xh
c3NOYW1lICk7CgkJCQl9CgoJCQkJLy8gdG9nZ2xlIHdob2xlIGNsYXNzTmFtZQoJ
CQkJdGhpcy5jbGFzc05hbWUgPSB0aGlzLmNsYXNzTmFtZSB8fCB2YWx1ZSA9PT0g
ZmFsc2UgPyAiIiA6IGpRdWVyeS5fZGF0YSggdGhpcywgIl9fY2xhc3NOYW1lX18i
ICkgfHwgIiI7CgkJCX0KCQl9KTsKCX0sCgoJaGFzQ2xhc3M6IGZ1bmN0aW9uKCBz
ZWxlY3RvciApIHsKCQl2YXIgY2xhc3NOYW1lID0gIiAiICsgc2VsZWN0b3IgKyAi
ICIsCgkJCWkgPSAwLAoJCQlsID0gdGhpcy5sZW5ndGg7CgkJZm9yICggOyBpIDwg
bDsgaSsrICkgewoJCQlpZiAoIHRoaXNbaV0ubm9kZVR5cGUgPT09IDEgJiYgKCIg
IiArIHRoaXNbaV0uY2xhc3NOYW1lICsgIiAiKS5yZXBsYWNlKHJjbGFzcywgIiAi
KS5pbmRleE9mKCBjbGFzc05hbWUgKSA+IC0xICkgewoJCQkJcmV0dXJuIHRydWU7
CgkJCX0KCQl9CgoJCXJldHVybiBmYWxzZTsKCX0sCgoJdmFsOiBmdW5jdGlvbigg
dmFsdWUgKSB7CgkJdmFyIGhvb2tzLCByZXQsIGlzRnVuY3Rpb24sCgkJCWVsZW0g
PSB0aGlzWzBdOwoKCQlpZiAoICFhcmd1bWVudHMubGVuZ3RoICkgewoJCQlpZiAo
IGVsZW0gKSB7CgkJCQlob29rcyA9IGpRdWVyeS52YWxIb29rc1sgZWxlbS50eXBl
IF0gfHwgalF1ZXJ5LnZhbEhvb2tzWyBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNl
KCkgXTsKCgkJCQlpZiAoIGhvb2tzICYmICJnZXQiIGluIGhvb2tzICYmIChyZXQg
PSBob29rcy5nZXQoIGVsZW0sICJ2YWx1ZSIgKSkgIT09IHVuZGVmaW5lZCApIHsK
CQkJCQlyZXR1cm4gcmV0OwoJCQkJfQoKCQkJCXJldCA9IGVsZW0udmFsdWU7CgoJ
CQkJcmV0dXJuIHR5cGVvZiByZXQgPT09ICJzdHJpbmciID8KCQkJCQkvLyBoYW5k
bGUgbW9zdCBjb21tb24gc3RyaW5nIGNhc2VzCgkJCQkJcmV0LnJlcGxhY2UocnJl
dHVybiwgIiIpIDoKCQkJCQkvLyBoYW5kbGUgY2FzZXMgd2hlcmUgdmFsdWUgaXMg
bnVsbC91bmRlZiBvciBudW1iZXIKCQkJCQlyZXQgPT0gbnVsbCA/ICIiIDogcmV0
OwoJCQl9CgoJCQlyZXR1cm47CgkJfQoKCQlpc0Z1bmN0aW9uID0galF1ZXJ5Lmlz
RnVuY3Rpb24oIHZhbHVlICk7CgoJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24o
IGkgKSB7CgkJCXZhciBzZWxmID0galF1ZXJ5KHRoaXMpLCB2YWw7CgoJCQlpZiAo
IHRoaXMubm9kZVR5cGUgIT09IDEgKSB7CgkJCQlyZXR1cm47CgkJCX0KCgkJCWlm
ICggaXNGdW5jdGlvbiApIHsKCQkJCXZhbCA9IHZhbHVlLmNhbGwoIHRoaXMsIGks
IHNlbGYudmFsKCkgKTsKCQkJfSBlbHNlIHsKCQkJCXZhbCA9IHZhbHVlOwoJCQl9
CgoJCQkvLyBUcmVhdCBudWxsL3VuZGVmaW5lZCBhcyAiIjsgY29udmVydCBudW1i
ZXJzIHRvIHN0cmluZwoJCQlpZiAoIHZhbCA9PSBudWxsICkgewoJCQkJdmFsID0g
IiI7CgkJCX0gZWxzZSBpZiAoIHR5cGVvZiB2YWwgPT09ICJudW1iZXIiICkgewoJ
CQkJdmFsICs9ICIiOwoJCQl9IGVsc2UgaWYgKCBqUXVlcnkuaXNBcnJheSggdmFs
ICkgKSB7CgkJCQl2YWwgPSBqUXVlcnkubWFwKHZhbCwgZnVuY3Rpb24gKCB2YWx1
ZSApIHsKCQkJCQlyZXR1cm4gdmFsdWUgPT0gbnVsbCA/ICIiIDogdmFsdWUgKyAi
IjsKCQkJCX0pOwoJCQl9CgoJCQlob29rcyA9IGpRdWVyeS52YWxIb29rc1sgdGhp
cy50eXBlIF0gfHwgalF1ZXJ5LnZhbEhvb2tzWyB0aGlzLm5vZGVOYW1lLnRvTG93
ZXJDYXNlKCkgXTsKCgkJCS8vIElmIHNldCByZXR1cm5zIHVuZGVmaW5lZCwgZmFs
bCBiYWNrIHRvIG5vcm1hbCBzZXR0aW5nCgkJCWlmICggIWhvb2tzIHx8ICEoInNl
dCIgaW4gaG9va3MpIHx8IGhvb2tzLnNldCggdGhpcywgdmFsLCAidmFsdWUiICkg
PT09IHVuZGVmaW5lZCApIHsKCQkJCXRoaXMudmFsdWUgPSB2YWw7CgkJCX0KCQl9
KTsKCX0KfSk7CgpqUXVlcnkuZXh0ZW5kKHsKCXZhbEhvb2tzOiB7CgkJb3B0aW9u
OiB7CgkJCWdldDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQkvLyBhdHRyaWJ1dGVz
LnZhbHVlIGlzIHVuZGVmaW5lZCBpbiBCbGFja2JlcnJ5IDQuNyBidXQKCQkJCS8v
IHVzZXMgLnZhbHVlLiBTZWUgIzY5MzIKCQkJCXZhciB2YWwgPSBlbGVtLmF0dHJp
YnV0ZXMudmFsdWU7CgkJCQlyZXR1cm4gIXZhbCB8fCB2YWwuc3BlY2lmaWVkID8g
ZWxlbS52YWx1ZSA6IGVsZW0udGV4dDsKCQkJfQoJCX0sCgkJc2VsZWN0OiB7CgkJ
CWdldDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQl2YXIgdmFsdWUsIGksIG1heCwg
b3B0aW9uLAoJCQkJCWluZGV4ID0gZWxlbS5zZWxlY3RlZEluZGV4LAoJCQkJCXZh
bHVlcyA9IFtdLAoJCQkJCW9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsCgkJCQkJb25l
ID0gZWxlbS50eXBlID09PSAic2VsZWN0LW9uZSI7CgoJCQkJLy8gTm90aGluZyB3
YXMgc2VsZWN0ZWQKCQkJCWlmICggaW5kZXggPCAwICkgewoJCQkJCXJldHVybiBu
dWxsOwoJCQkJfQoKCQkJCS8vIExvb3AgdGhyb3VnaCBhbGwgdGhlIHNlbGVjdGVk
IG9wdGlvbnMKCQkJCWkgPSBvbmUgPyBpbmRleCA6IDA7CgkJCQltYXggPSBvbmUg
PyBpbmRleCArIDEgOiBvcHRpb25zLmxlbmd0aDsKCQkJCWZvciAoIDsgaSA8IG1h
eDsgaSsrICkgewoJCQkJCW9wdGlvbiA9IG9wdGlvbnNbIGkgXTsKCgkJCQkJLy8g
RG9uJ3QgcmV0dXJuIG9wdGlvbnMgdGhhdCBhcmUgZGlzYWJsZWQgb3IgaW4gYSBk
aXNhYmxlZCBvcHRncm91cAoJCQkJCWlmICggb3B0aW9uLnNlbGVjdGVkICYmIChq
UXVlcnkuc3VwcG9ydC5vcHREaXNhYmxlZCA/ICFvcHRpb24uZGlzYWJsZWQgOiBv
cHRpb24uZ2V0QXR0cmlidXRlKCJkaXNhYmxlZCIpID09PSBudWxsKSAmJgoJCQkJ
CQkJKCFvcHRpb24ucGFyZW50Tm9kZS5kaXNhYmxlZCB8fCAhalF1ZXJ5Lm5vZGVO
YW1lKCBvcHRpb24ucGFyZW50Tm9kZSwgIm9wdGdyb3VwIiApKSApIHsKCgkJCQkJ
CS8vIEdldCB0aGUgc3BlY2lmaWMgdmFsdWUgZm9yIHRoZSBvcHRpb24KCQkJCQkJ
dmFsdWUgPSBqUXVlcnkoIG9wdGlvbiApLnZhbCgpOwoKCQkJCQkJLy8gV2UgZG9u
J3QgbmVlZCBhbiBhcnJheSBmb3Igb25lIHNlbGVjdHMKCQkJCQkJaWYgKCBvbmUg
KSB7CgkJCQkJCQlyZXR1cm4gdmFsdWU7CgkJCQkJCX0KCgkJCQkJCS8vIE11bHRp
LVNlbGVjdHMgcmV0dXJuIGFuIGFycmF5CgkJCQkJCXZhbHVlcy5wdXNoKCB2YWx1
ZSApOwoJCQkJCX0KCQkJCX0KCgkJCQkvLyBGaXhlcyBCdWcgIzI1NTEgLS0gc2Vs
ZWN0LnZhbCgpIGJyb2tlbiBpbiBJRSBhZnRlciBmb3JtLnJlc2V0KCkKCQkJCWlm
ICggb25lICYmICF2YWx1ZXMubGVuZ3RoICYmIG9wdGlvbnMubGVuZ3RoICkgewoJ
CQkJCXJldHVybiBqUXVlcnkoIG9wdGlvbnNbIGluZGV4IF0gKS52YWwoKTsKCQkJ
CX0KCgkJCQlyZXR1cm4gdmFsdWVzOwoJCQl9LAoKCQkJc2V0OiBmdW5jdGlvbigg
ZWxlbSwgdmFsdWUgKSB7CgkJCQl2YXIgdmFsdWVzID0galF1ZXJ5Lm1ha2VBcnJh
eSggdmFsdWUgKTsKCgkJCQlqUXVlcnkoZWxlbSkuZmluZCgib3B0aW9uIikuZWFj
aChmdW5jdGlvbigpIHsKCQkJCQl0aGlzLnNlbGVjdGVkID0galF1ZXJ5LmluQXJy
YXkoIGpRdWVyeSh0aGlzKS52YWwoKSwgdmFsdWVzICkgPj0gMDsKCQkJCX0pOwoK
CQkJCWlmICggIXZhbHVlcy5sZW5ndGggKSB7CgkJCQkJZWxlbS5zZWxlY3RlZElu
ZGV4ID0gLTE7CgkJCQl9CgkJCQlyZXR1cm4gdmFsdWVzOwoJCQl9CgkJfQoJfSwK
CglhdHRyRm46IHsKCQl2YWw6IHRydWUsCgkJY3NzOiB0cnVlLAoJCWh0bWw6IHRy
dWUsCgkJdGV4dDogdHJ1ZSwKCQlkYXRhOiB0cnVlLAoJCXdpZHRoOiB0cnVlLAoJ
CWhlaWdodDogdHJ1ZSwKCQlvZmZzZXQ6IHRydWUKCX0sCgoJYXR0cjogZnVuY3Rp
b24oIGVsZW0sIG5hbWUsIHZhbHVlLCBwYXNzICkgewoJCXZhciByZXQsIGhvb2tz
LCBub3R4bWwsCgkJCW5UeXBlID0gZWxlbS5ub2RlVHlwZTsKCgkJLy8gZG9uJ3Qg
Z2V0L3NldCBhdHRyaWJ1dGVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0
ZSBub2RlcwoJCWlmICggIWVsZW0gfHwgblR5cGUgPT09IDMgfHwgblR5cGUgPT09
IDggfHwgblR5cGUgPT09IDIgKSB7CgkJCXJldHVybjsKCQl9CgoJCWlmICggcGFz
cyAmJiBuYW1lIGluIGpRdWVyeS5hdHRyRm4gKSB7CgkJCXJldHVybiBqUXVlcnko
IGVsZW0gKVsgbmFtZSBdKCB2YWx1ZSApOwoJCX0KCgkJLy8gRmFsbGJhY2sgdG8g
cHJvcCB3aGVuIGF0dHJpYnV0ZXMgYXJlIG5vdCBzdXBwb3J0ZWQKCQlpZiAoIHR5
cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSA9PT0gInVuZGVmaW5lZCIgKSB7CgkJCXJl
dHVybiBqUXVlcnkucHJvcCggZWxlbSwgbmFtZSwgdmFsdWUgKTsKCQl9CgoJCW5v
dHhtbCA9IG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKTsK
CgkJLy8gQWxsIGF0dHJpYnV0ZXMgYXJlIGxvd2VyY2FzZQoJCS8vIEdyYWIgbmVj
ZXNzYXJ5IGhvb2sgaWYgb25lIGlzIGRlZmluZWQKCQlpZiAoIG5vdHhtbCApIHsK
CQkJbmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTsKCQkJaG9va3MgPSBqUXVlcnku
YXR0ckhvb2tzWyBuYW1lIF0gfHwgKCByYm9vbGVhbi50ZXN0KCBuYW1lICkgPyBi
b29sSG9vayA6IG5vZGVIb29rICk7CgkJfQoKCQlpZiAoIHZhbHVlICE9PSB1bmRl
ZmluZWQgKSB7CgoJCQlpZiAoIHZhbHVlID09PSBudWxsICkgewoJCQkJalF1ZXJ5
LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTsKCQkJCXJldHVybjsKCgkJCX0gZWxz
ZSBpZiAoIGhvb2tzICYmICJzZXQiIGluIGhvb2tzICYmIG5vdHhtbCAmJiAocmV0
ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApKSAhPT0gdW5kZWZpbmVk
ICkgewoJCQkJcmV0dXJuIHJldDsKCgkJCX0gZWxzZSB7CgkJCQllbGVtLnNldEF0
dHJpYnV0ZSggbmFtZSwgIiIgKyB2YWx1ZSApOwoJCQkJcmV0dXJuIHZhbHVlOwoJ
CQl9CgoJCX0gZWxzZSBpZiAoIGhvb2tzICYmICJnZXQiIGluIGhvb2tzICYmIG5v
dHhtbCAmJiAocmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkpICE9PSBudWxs
ICkgewoJCQlyZXR1cm4gcmV0OwoKCQl9IGVsc2UgewoKCQkJcmV0ID0gZWxlbS5n
ZXRBdHRyaWJ1dGUoIG5hbWUgKTsKCgkJCS8vIE5vbi1leGlzdGVudCBhdHRyaWJ1
dGVzIHJldHVybiBudWxsLCB3ZSBub3JtYWxpemUgdG8gdW5kZWZpbmVkCgkJCXJl
dHVybiByZXQgPT09IG51bGwgPwoJCQkJdW5kZWZpbmVkIDoKCQkJCXJldDsKCQl9
Cgl9LAoKCXJlbW92ZUF0dHI6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHsKCQl2
YXIgcHJvcE5hbWUsIGF0dHJOYW1lcywgbmFtZSwgbCwgaXNCb29sLAoJCQlpID0g
MDsKCgkJaWYgKCB2YWx1ZSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkgewoJCQlh
dHRyTmFtZXMgPSB2YWx1ZS50b0xvd2VyQ2FzZSgpLnNwbGl0KCByc3BhY2UgKTsK
CQkJbCA9IGF0dHJOYW1lcy5sZW5ndGg7CgoJCQlmb3IgKCA7IGkgPCBsOyBpKysg
KSB7CgkJCQluYW1lID0gYXR0ck5hbWVzWyBpIF07CgoJCQkJaWYgKCBuYW1lICkg
ewoJCQkJCXByb3BOYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1l
OwoJCQkJCWlzQm9vbCA9IHJib29sZWFuLnRlc3QoIG5hbWUgKTsKCgkJCQkJLy8g
U2VlICM5Njk5IGZvciBleHBsYW5hdGlvbiBvZiB0aGlzIGFwcHJvYWNoIChzZXR0
aW5nIGZpcnN0LCB0aGVuIHJlbW92YWwpCgkJCQkJLy8gRG8gbm90IGRvIHRoaXMg
Zm9yIGJvb2xlYW4gYXR0cmlidXRlcyAoc2VlICMxMDg3MCkKCQkJCQlpZiAoICFp
c0Jvb2wgKSB7CgkJCQkJCWpRdWVyeS5hdHRyKCBlbGVtLCBuYW1lLCAiIiApOwoJ
CQkJCX0KCQkJCQllbGVtLnJlbW92ZUF0dHJpYnV0ZSggZ2V0U2V0QXR0cmlidXRl
ID8gbmFtZSA6IHByb3BOYW1lICk7CgoJCQkJCS8vIFNldCBjb3JyZXNwb25kaW5n
IHByb3BlcnR5IHRvIGZhbHNlIGZvciBib29sZWFuIGF0dHJpYnV0ZXMKCQkJCQlp
ZiAoIGlzQm9vbCAmJiBwcm9wTmFtZSBpbiBlbGVtICkgewoJCQkJCQllbGVtWyBw
cm9wTmFtZSBdID0gZmFsc2U7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoJfSwKCglh
dHRySG9va3M6IHsKCQl0eXBlOiB7CgkJCXNldDogZnVuY3Rpb24oIGVsZW0sIHZh
bHVlICkgewoJCQkJLy8gV2UgY2FuJ3QgYWxsb3cgdGhlIHR5cGUgcHJvcGVydHkg
dG8gYmUgY2hhbmdlZCAoc2luY2UgaXQgY2F1c2VzIHByb2JsZW1zIGluIElFKQoJ
CQkJaWYgKCBydHlwZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgJiYgZWxlbS5wYXJl
bnROb2RlICkgewoJCQkJCWpRdWVyeS5lcnJvciggInR5cGUgcHJvcGVydHkgY2Fu
J3QgYmUgY2hhbmdlZCIgKTsKCQkJCX0gZWxzZSBpZiAoICFqUXVlcnkuc3VwcG9y
dC5yYWRpb1ZhbHVlICYmIHZhbHVlID09PSAicmFkaW8iICYmIGpRdWVyeS5ub2Rl
TmFtZShlbGVtLCAiaW5wdXQiKSApIHsKCQkJCQkvLyBTZXR0aW5nIHRoZSB0eXBl
IG9uIGEgcmFkaW8gYnV0dG9uIGFmdGVyIHRoZSB2YWx1ZSByZXNldHMgdGhlIHZh
bHVlIGluIElFNi05CgkJCQkJLy8gUmVzZXQgdmFsdWUgdG8gaXQncyBkZWZhdWx0
IGluIGNhc2UgdHlwZSBpcyBzZXQgYWZ0ZXIgdmFsdWUKCQkJCQkvLyBUaGlzIGlz
IGZvciBlbGVtZW50IGNyZWF0aW9uCgkJCQkJdmFyIHZhbCA9IGVsZW0udmFsdWU7
CgkJCQkJZWxlbS5zZXRBdHRyaWJ1dGUoICJ0eXBlIiwgdmFsdWUgKTsKCQkJCQlp
ZiAoIHZhbCApIHsKCQkJCQkJZWxlbS52YWx1ZSA9IHZhbDsKCQkJCQl9CgkJCQkJ
cmV0dXJuIHZhbHVlOwoJCQkJfQoJCQl9CgkJfSwKCQkvLyBVc2UgdGhlIHZhbHVl
IHByb3BlcnR5IGZvciBiYWNrIGNvbXBhdAoJCS8vIFVzZSB0aGUgbm9kZUhvb2sg
Zm9yIGJ1dHRvbiBlbGVtZW50cyBpbiBJRTYvNyAoIzE5NTQpCgkJdmFsdWU6IHsK
CQkJZ2V0OiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHsKCQkJCWlmICggbm9kZUhv
b2sgJiYgalF1ZXJ5Lm5vZGVOYW1lKCBlbGVtLCAiYnV0dG9uIiApICkgewoJCQkJ
CXJldHVybiBub2RlSG9vay5nZXQoIGVsZW0sIG5hbWUgKTsKCQkJCX0KCQkJCXJl
dHVybiBuYW1lIGluIGVsZW0gPwoJCQkJCWVsZW0udmFsdWUgOgoJCQkJCW51bGw7
CgkJCX0sCgkJCXNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBuYW1lICkgewoJ
CQkJaWYgKCBub2RlSG9vayAmJiBqUXVlcnkubm9kZU5hbWUoIGVsZW0sICJidXR0
b24iICkgKSB7CgkJCQkJcmV0dXJuIG5vZGVIb29rLnNldCggZWxlbSwgdmFsdWUs
IG5hbWUgKTsKCQkJCX0KCQkJCS8vIERvZXMgbm90IHJldHVybiBzbyB0aGF0IHNl
dEF0dHJpYnV0ZSBpcyBhbHNvIHVzZWQKCQkJCWVsZW0udmFsdWUgPSB2YWx1ZTsK
CQkJfQoJCX0KCX0sCgoJcHJvcEZpeDogewoJCXRhYmluZGV4OiAidGFiSW5kZXgi
LAoJCXJlYWRvbmx5OiAicmVhZE9ubHkiLAoJCSJmb3IiOiAiaHRtbEZvciIsCgkJ
ImNsYXNzIjogImNsYXNzTmFtZSIsCgkJbWF4bGVuZ3RoOiAibWF4TGVuZ3RoIiwK
CQljZWxsc3BhY2luZzogImNlbGxTcGFjaW5nIiwKCQljZWxscGFkZGluZzogImNl
bGxQYWRkaW5nIiwKCQlyb3dzcGFuOiAicm93U3BhbiIsCgkJY29sc3BhbjogImNv
bFNwYW4iLAoJCXVzZW1hcDogInVzZU1hcCIsCgkJZnJhbWVib3JkZXI6ICJmcmFt
ZUJvcmRlciIsCgkJY29udGVudGVkaXRhYmxlOiAiY29udGVudEVkaXRhYmxlIgoJ
fSwKCglwcm9wOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7CgkJdmFy
IHJldCwgaG9va3MsIG5vdHhtbCwKCQkJblR5cGUgPSBlbGVtLm5vZGVUeXBlOwoK
CQkvLyBkb24ndCBnZXQvc2V0IHByb3BlcnRpZXMgb24gdGV4dCwgY29tbWVudCBh
bmQgYXR0cmlidXRlIG5vZGVzCgkJaWYgKCAhZWxlbSB8fCBuVHlwZSA9PT0gMyB8
fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHsKCQkJcmV0dXJuOwoJCX0K
CgkJbm90eG1sID0gblR5cGUgIT09IDEgfHwgIWpRdWVyeS5pc1hNTERvYyggZWxl
bSApOwoKCQlpZiAoIG5vdHhtbCApIHsKCQkJLy8gRml4IG5hbWUgYW5kIGF0dGFj
aCBob29rcwoJCQluYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1l
OwoJCQlob29rcyA9IGpRdWVyeS5wcm9wSG9va3NbIG5hbWUgXTsKCQl9CgoJCWlm
ICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHsKCQkJaWYgKCBob29rcyAmJiAic2V0
IiBpbiBob29rcyAmJiAocmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFt
ZSApKSAhPT0gdW5kZWZpbmVkICkgewoJCQkJcmV0dXJuIHJldDsKCgkJCX0gZWxz
ZSB7CgkJCQlyZXR1cm4gKCBlbGVtWyBuYW1lIF0gPSB2YWx1ZSApOwoJCQl9CgoJ
CX0gZWxzZSB7CgkJCWlmICggaG9va3MgJiYgImdldCIgaW4gaG9va3MgJiYgKHJl
dCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApKSAhPT0gbnVsbCApIHsKCQkJCXJl
dHVybiByZXQ7CgoJCQl9IGVsc2UgewoJCQkJcmV0dXJuIGVsZW1bIG5hbWUgXTsK
CQkJfQoJCX0KCX0sCgoJcHJvcEhvb2tzOiB7CgkJdGFiSW5kZXg6IHsKCQkJZ2V0
OiBmdW5jdGlvbiggZWxlbSApIHsKCQkJCS8vIGVsZW0udGFiSW5kZXggZG9lc24n
dCBhbHdheXMgcmV0dXJuIHRoZSBjb3JyZWN0IHZhbHVlIHdoZW4gaXQgaGFzbid0
IGJlZW4gZXhwbGljaXRseSBzZXQKCQkJCS8vIGh0dHA6Ly9mbHVpZHByb2plY3Qu
b3JnL2Jsb2cvMjAwOC8wMS8wOS9nZXR0aW5nLXNldHRpbmctYW5kLXJlbW92aW5n
LXRhYmluZGV4LXZhbHVlcy13aXRoLWphdmFzY3JpcHQvCgkJCQl2YXIgYXR0cmli
dXRlTm9kZSA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSgidGFiaW5kZXgiKTsKCgkJ
CQlyZXR1cm4gYXR0cmlidXRlTm9kZSAmJiBhdHRyaWJ1dGVOb2RlLnNwZWNpZmll
ZCA/CgkJCQkJcGFyc2VJbnQoIGF0dHJpYnV0ZU5vZGUudmFsdWUsIDEwICkgOgoJ
CQkJCXJmb2N1c2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApIHx8IHJjbGlja2Fi
bGUudGVzdCggZWxlbS5ub2RlTmFtZSApICYmIGVsZW0uaHJlZiA/CgkJCQkJCTAg
OgoJCQkJCQl1bmRlZmluZWQ7CgkJCX0KCQl9Cgl9Cn0pOwoKLy8gQWRkIHRoZSB0
YWJJbmRleCBwcm9wSG9vayB0byBhdHRySG9va3MgZm9yIGJhY2stY29tcGF0IChk
aWZmZXJlbnQgY2FzZSBpcyBpbnRlbnRpb25hbCkKalF1ZXJ5LmF0dHJIb29rcy50
YWJpbmRleCA9IGpRdWVyeS5wcm9wSG9va3MudGFiSW5kZXg7CgovLyBIb29rIGZv
ciBib29sZWFuIGF0dHJpYnV0ZXMKYm9vbEhvb2sgPSB7CglnZXQ6IGZ1bmN0aW9u
KCBlbGVtLCBuYW1lICkgewoJCS8vIEFsaWduIGJvb2xlYW4gYXR0cmlidXRlcyB3
aXRoIGNvcnJlc3BvbmRpbmcgcHJvcGVydGllcwoJCS8vIEZhbGwgYmFjayB0byBh
dHRyaWJ1dGUgcHJlc2VuY2Ugd2hlcmUgc29tZSBib29sZWFucyBhcmUgbm90IHN1
cHBvcnRlZAoJCXZhciBhdHRyTm9kZSwKCQkJcHJvcGVydHkgPSBqUXVlcnkucHJv
cCggZWxlbSwgbmFtZSApOwoJCXJldHVybiBwcm9wZXJ0eSA9PT0gdHJ1ZSB8fCB0
eXBlb2YgcHJvcGVydHkgIT09ICJib29sZWFuIiAmJiAoIGF0dHJOb2RlID0gZWxl
bS5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUpICkgJiYgYXR0ck5vZGUubm9kZVZhbHVl
ICE9PSBmYWxzZSA/CgkJCW5hbWUudG9Mb3dlckNhc2UoKSA6CgkJCXVuZGVmaW5l
ZDsKCX0sCglzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSwgbmFtZSApIHsKCQl2
YXIgcHJvcE5hbWU7CgkJaWYgKCB2YWx1ZSA9PT0gZmFsc2UgKSB7CgkJCS8vIFJl
bW92ZSBib29sZWFuIGF0dHJpYnV0ZXMgd2hlbiBzZXQgdG8gZmFsc2UKCQkJalF1
ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTsKCQl9IGVsc2UgewoJCQkvLyB2
YWx1ZSBpcyB0cnVlIHNpbmNlIHdlIGtub3cgYXQgdGhpcyBwb2ludCBpdCdzIHR5
cGUgYm9vbGVhbiBhbmQgbm90IGZhbHNlCgkJCS8vIFNldCBib29sZWFuIGF0dHJp
YnV0ZXMgdG8gdGhlIHNhbWUgbmFtZSBhbmQgc2V0IHRoZSBET00gcHJvcGVydHkK
CQkJcHJvcE5hbWUgPSBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWU7CgkJ
CWlmICggcHJvcE5hbWUgaW4gZWxlbSApIHsKCQkJCS8vIE9ubHkgc2V0IHRoZSBJ
REwgc3BlY2lmaWNhbGx5IGlmIGl0IGFscmVhZHkgZXhpc3RzIG9uIHRoZSBlbGVt
ZW50CgkJCQllbGVtWyBwcm9wTmFtZSBdID0gdHJ1ZTsKCQkJfQoKCQkJZWxlbS5z
ZXRBdHRyaWJ1dGUoIG5hbWUsIG5hbWUudG9Mb3dlckNhc2UoKSApOwoJCX0KCQly
ZXR1cm4gbmFtZTsKCX0KfTsKCi8vIElFNi83IGRvIG5vdCBzdXBwb3J0IGdldHRp
bmcvc2V0dGluZyBzb21lIGF0dHJpYnV0ZXMgd2l0aCBnZXQvc2V0QXR0cmlidXRl
CmlmICggIWdldFNldEF0dHJpYnV0ZSApIHsKCglmaXhTcGVjaWZpZWQgPSB7CgkJ
bmFtZTogdHJ1ZSwKCQlpZDogdHJ1ZSwKCQljb29yZHM6IHRydWUKCX07CgoJLy8g
VXNlIHRoaXMgZm9yIGFueSBhdHRyaWJ1dGUgaW4gSUU2LzcKCS8vIFRoaXMgZml4
ZXMgYWxtb3N0IGV2ZXJ5IElFNi83IGlzc3VlCglub2RlSG9vayA9IGpRdWVyeS52
YWxIb29rcy5idXR0b24gPSB7CgkJZ2V0OiBmdW5jdGlvbiggZWxlbSwgbmFtZSAp
IHsKCQkJdmFyIHJldDsKCQkJcmV0ID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBu
YW1lICk7CgkJCXJldHVybiByZXQgJiYgKCBmaXhTcGVjaWZpZWRbIG5hbWUgXSA/
IHJldC5ub2RlVmFsdWUgIT09ICIiIDogcmV0LnNwZWNpZmllZCApID8KCQkJCXJl
dC5ub2RlVmFsdWUgOgoJCQkJdW5kZWZpbmVkOwoJCX0sCgkJc2V0OiBmdW5jdGlv
biggZWxlbSwgdmFsdWUsIG5hbWUgKSB7CgkJCS8vIFNldCB0aGUgZXhpc3Rpbmcg
b3IgY3JlYXRlIGEgbmV3IGF0dHJpYnV0ZSBub2RlCgkJCXZhciByZXQgPSBlbGVt
LmdldEF0dHJpYnV0ZU5vZGUoIG5hbWUgKTsKCQkJaWYgKCAhcmV0ICkgewoJCQkJ
cmV0ID0gZG9jdW1lbnQuY3JlYXRlQXR0cmlidXRlKCBuYW1lICk7CgkJCQllbGVt
LnNldEF0dHJpYnV0ZU5vZGUoIHJldCApOwoJCQl9CgkJCXJldHVybiAoIHJldC5u
b2RlVmFsdWUgPSB2YWx1ZSArICIiICk7CgkJfQoJfTsKCgkvLyBBcHBseSB0aGUg
bm9kZUhvb2sgdG8gdGFiaW5kZXgKCWpRdWVyeS5hdHRySG9va3MudGFiaW5kZXgu
c2V0ID0gbm9kZUhvb2suc2V0OwoKCS8vIFNldCB3aWR0aCBhbmQgaGVpZ2h0IHRv
IGF1dG8gaW5zdGVhZCBvZiAwIG9uIGVtcHR5IHN0cmluZyggQnVnICM4MTUwICkK
CS8vIFRoaXMgaXMgZm9yIHJlbW92YWxzCglqUXVlcnkuZWFjaChbICJ3aWR0aCIs
ICJoZWlnaHQiIF0sIGZ1bmN0aW9uKCBpLCBuYW1lICkgewoJCWpRdWVyeS5hdHRy
SG9va3NbIG5hbWUgXSA9IGpRdWVyeS5leHRlbmQoIGpRdWVyeS5hdHRySG9va3Nb
IG5hbWUgXSwgewoJCQlzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHsKCQkJ
CWlmICggdmFsdWUgPT09ICIiICkgewoJCQkJCWVsZW0uc2V0QXR0cmlidXRlKCBu
YW1lLCAiYXV0byIgKTsKCQkJCQlyZXR1cm4gdmFsdWU7CgkJCQl9CgkJCX0KCQl9
KTsKCX0pOwoKCS8vIFNldCBjb250ZW50ZWRpdGFibGUgdG8gZmFsc2Ugb24gcmVt
b3ZhbHMoIzEwNDI5KQoJLy8gU2V0dGluZyB0byBlbXB0eSBzdHJpbmcgdGhyb3dz
IGFuIGVycm9yIGFzIGFuIGludmFsaWQgdmFsdWUKCWpRdWVyeS5hdHRySG9va3Mu
Y29udGVudGVkaXRhYmxlID0gewoJCWdldDogbm9kZUhvb2suZ2V0LAoJCXNldDog
ZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBuYW1lICkgewoJCQlpZiAoIHZhbHVlID09
PSAiIiApIHsKCQkJCXZhbHVlID0gImZhbHNlIjsKCQkJfQoJCQlub2RlSG9vay5z
ZXQoIGVsZW0sIHZhbHVlLCBuYW1lICk7CgkJfQoJfTsKfQoKCi8vIFNvbWUgYXR0
cmlidXRlcyByZXF1aXJlIGEgc3BlY2lhbCBjYWxsIG9uIElFCmlmICggIWpRdWVy
eS5zdXBwb3J0LmhyZWZOb3JtYWxpemVkICkgewoJalF1ZXJ5LmVhY2goWyAiaHJl
ZiIsICJzcmMiLCAid2lkdGgiLCAiaGVpZ2h0IiBdLCBmdW5jdGlvbiggaSwgbmFt
ZSApIHsKCQlqUXVlcnkuYXR0ckhvb2tzWyBuYW1lIF0gPSBqUXVlcnkuZXh0ZW5k
KCBqUXVlcnkuYXR0ckhvb2tzWyBuYW1lIF0sIHsKCQkJZ2V0OiBmdW5jdGlvbigg
ZWxlbSApIHsKCQkJCXZhciByZXQgPSBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSwg
MiApOwoJCQkJcmV0dXJuIHJldCA9PT0gbnVsbCA/IHVuZGVmaW5lZCA6IHJldDsK
CQkJfQoJCX0pOwoJfSk7Cn0KCmlmICggIWpRdWVyeS5zdXBwb3J0LnN0eWxlICkg
ewoJalF1ZXJ5LmF0dHJIb29rcy5zdHlsZSA9IHsKCQlnZXQ6IGZ1bmN0aW9uKCBl
bGVtICkgewoJCQkvLyBSZXR1cm4gdW5kZWZpbmVkIGluIHRoZSBjYXNlIG9mIGVt
cHR5IHN0cmluZwoJCQkvLyBOb3JtYWxpemUgdG8gbG93ZXJjYXNlIHNpbmNlIElF
IHVwcGVyY2FzZXMgY3NzIHByb3BlcnR5IG5hbWVzCgkJCXJldHVybiBlbGVtLnN0
eWxlLmNzc1RleHQudG9Mb3dlckNhc2UoKSB8fCB1bmRlZmluZWQ7CgkJfSwKCQlz
ZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHsKCQkJcmV0dXJuICggZWxlbS5z
dHlsZS5jc3NUZXh0ID0gIiIgKyB2YWx1ZSApOwoJCX0KCX07Cn0KCi8vIFNhZmFy
aSBtaXMtcmVwb3J0cyB0aGUgZGVmYXVsdCBzZWxlY3RlZCBwcm9wZXJ0eSBvZiBh
biBvcHRpb24KLy8gQWNjZXNzaW5nIHRoZSBwYXJlbnQncyBzZWxlY3RlZEluZGV4
IHByb3BlcnR5IGZpeGVzIGl0CmlmICggIWpRdWVyeS5zdXBwb3J0Lm9wdFNlbGVj
dGVkICkgewoJalF1ZXJ5LnByb3BIb29rcy5zZWxlY3RlZCA9IGpRdWVyeS5leHRl
bmQoIGpRdWVyeS5wcm9wSG9va3Muc2VsZWN0ZWQsIHsKCQlnZXQ6IGZ1bmN0aW9u
KCBlbGVtICkgewoJCQl2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlOwoKCQkJ
aWYgKCBwYXJlbnQgKSB7CgkJCQlwYXJlbnQuc2VsZWN0ZWRJbmRleDsKCgkJCQkv
LyBNYWtlIHN1cmUgdGhhdCBpdCBhbHNvIHdvcmtzIHdpdGggb3B0Z3JvdXBzLCBz
ZWUgIzU3MDEKCQkJCWlmICggcGFyZW50LnBhcmVudE5vZGUgKSB7CgkJCQkJcGFy
ZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDsKCQkJCX0KCQkJfQoJCQlyZXR1
cm4gbnVsbDsKCQl9Cgl9KTsKfQoKLy8gSUU2LzcgY2FsbCBlbmN0eXBlIGVuY29k
aW5nCmlmICggIWpRdWVyeS5zdXBwb3J0LmVuY3R5cGUgKSB7CglqUXVlcnkucHJv
cEZpeC5lbmN0eXBlID0gImVuY29kaW5nIjsKfQoKLy8gUmFkaW9zIGFuZCBjaGVj
a2JveGVzIGdldHRlci9zZXR0ZXIKaWYgKCAhalF1ZXJ5LnN1cHBvcnQuY2hlY2tP
biApIHsKCWpRdWVyeS5lYWNoKFsgInJhZGlvIiwgImNoZWNrYm94IiBdLCBmdW5j
dGlvbigpIHsKCQlqUXVlcnkudmFsSG9va3NbIHRoaXMgXSA9IHsKCQkJZ2V0OiBm
dW5jdGlvbiggZWxlbSApIHsKCQkJCS8vIEhhbmRsZSB0aGUgY2FzZSB3aGVyZSBp
biBXZWJraXQgIiIgaXMgcmV0dXJuZWQgaW5zdGVhZCBvZiAib24iIGlmIGEgdmFs
dWUgaXNuJ3Qgc3BlY2lmaWVkCgkJCQlyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUo
InZhbHVlIikgPT09IG51bGwgPyAib24iIDogZWxlbS52YWx1ZTsKCQkJfQoJCX07
Cgl9KTsKfQpqUXVlcnkuZWFjaChbICJyYWRpbyIsICJjaGVja2JveCIgXSwgZnVu
Y3Rpb24oKSB7CglqUXVlcnkudmFsSG9va3NbIHRoaXMgXSA9IGpRdWVyeS5leHRl
bmQoIGpRdWVyeS52YWxIb29rc1sgdGhpcyBdLCB7CgkJc2V0OiBmdW5jdGlvbigg
ZWxlbSwgdmFsdWUgKSB7CgkJCWlmICggalF1ZXJ5LmlzQXJyYXkoIHZhbHVlICkg
KSB7CgkJCQlyZXR1cm4gKCBlbGVtLmNoZWNrZWQgPSBqUXVlcnkuaW5BcnJheSgg
alF1ZXJ5KGVsZW0pLnZhbCgpLCB2YWx1ZSApID49IDAgKTsKCQkJfQoJCX0KCX0p
Owp9KTsKCgoKCnZhciByZm9ybUVsZW1zID0gL14oPzp0ZXh0YXJlYXxpbnB1dHxz
ZWxlY3QpJC9pLAoJcnR5cGVuYW1lc3BhY2UgPSAvXihbXlwuXSopPyg/OlwuKC4r
KSk/JC8sCglyaG92ZXJIYWNrID0gLyg/Ol58XHMpaG92ZXIoXC5cUyspP1xiLywK
CXJrZXlFdmVudCA9IC9ea2V5LywKCXJtb3VzZUV2ZW50ID0gL14oPzptb3VzZXxj
b250ZXh0bWVudSl8Y2xpY2svLAoJcmZvY3VzTW9ycGggPSAvXig/OmZvY3VzaW5m
b2N1c3xmb2N1c291dGJsdXIpJC8sCglycXVpY2tJcyA9IC9eKFx3KikoPzojKFtc
d1wtXSspKT8oPzpcLihbXHdcLV0rKSk/JC8sCglxdWlja1BhcnNlID0gZnVuY3Rp
b24oIHNlbGVjdG9yICkgewoJCXZhciBxdWljayA9IHJxdWlja0lzLmV4ZWMoIHNl
bGVjdG9yICk7CgkJaWYgKCBxdWljayApIHsKCQkJLy8gICAwICAxICAgIDIgICAz
CgkJCS8vIFsgXywgdGFnLCBpZCwgY2xhc3MgXQoJCQlxdWlja1sxXSA9ICggcXVp
Y2tbMV0gfHwgIiIgKS50b0xvd2VyQ2FzZSgpOwoJCQlxdWlja1szXSA9IHF1aWNr
WzNdICYmIG5ldyBSZWdFeHAoICIoPzpefFxccykiICsgcXVpY2tbM10gKyAiKD86
XFxzfCQpIiApOwoJCX0KCQlyZXR1cm4gcXVpY2s7Cgl9LAoJcXVpY2tJcyA9IGZ1
bmN0aW9uKCBlbGVtLCBtICkgewoJCXZhciBhdHRycyA9IGVsZW0uYXR0cmlidXRl
cyB8fCB7fTsKCQlyZXR1cm4gKAoJCQkoIW1bMV0gfHwgZWxlbS5ub2RlTmFtZS50
b0xvd2VyQ2FzZSgpID09PSBtWzFdKSAmJgoJCQkoIW1bMl0gfHwgKGF0dHJzLmlk
IHx8IHt9KS52YWx1ZSA9PT0gbVsyXSkgJiYKCQkJKCFtWzNdIHx8IG1bM10udGVz
dCggKGF0dHJzWyAiY2xhc3MiIF0gfHwge30pLnZhbHVlICkpCgkJKTsKCX0sCglo
b3ZlckhhY2sgPSBmdW5jdGlvbiggZXZlbnRzICkgewoJCXJldHVybiBqUXVlcnku
ZXZlbnQuc3BlY2lhbC5ob3ZlciA/IGV2ZW50cyA6IGV2ZW50cy5yZXBsYWNlKCBy
aG92ZXJIYWNrLCAibW91c2VlbnRlciQxIG1vdXNlbGVhdmUkMSIgKTsKCX07Cgov
KgogKiBIZWxwZXIgZnVuY3Rpb25zIGZvciBtYW5hZ2luZyBldmVudHMgLS0gbm90
IHBhcnQgb2YgdGhlIHB1YmxpYyBpbnRlcmZhY2UuCiAqIFByb3BzIHRvIERlYW4g
RWR3YXJkcycgYWRkRXZlbnQgbGlicmFyeSBmb3IgbWFueSBvZiB0aGUgaWRlYXMu
CiAqLwpqUXVlcnkuZXZlbnQgPSB7CgoJYWRkOiBmdW5jdGlvbiggZWxlbSwgdHlw
ZXMsIGhhbmRsZXIsIGRhdGEsIHNlbGVjdG9yICkgewoKCQl2YXIgZWxlbURhdGEs
IGV2ZW50SGFuZGxlLCBldmVudHMsCgkJCXQsIHRucywgdHlwZSwgbmFtZXNwYWNl
cywgaGFuZGxlT2JqLAoJCQloYW5kbGVPYmpJbiwgcXVpY2ssIGhhbmRsZXJzLCBz
cGVjaWFsOwoKCQkvLyBEb24ndCBhdHRhY2ggZXZlbnRzIHRvIG5vRGF0YSBvciB0
ZXh0L2NvbW1lbnQgbm9kZXMgKGFsbG93IHBsYWluIG9iamVjdHMgdGhvKQoJCWlm
ICggZWxlbS5ub2RlVHlwZSA9PT0gMyB8fCBlbGVtLm5vZGVUeXBlID09PSA4IHx8
ICF0eXBlcyB8fCAhaGFuZGxlciB8fCAhKGVsZW1EYXRhID0galF1ZXJ5Ll9kYXRh
KCBlbGVtICkpICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBDYWxsZXIgY2FuIHBh
c3MgaW4gYW4gb2JqZWN0IG9mIGN1c3RvbSBkYXRhIGluIGxpZXUgb2YgdGhlIGhh
bmRsZXIKCQlpZiAoIGhhbmRsZXIuaGFuZGxlciApIHsKCQkJaGFuZGxlT2JqSW4g
PSBoYW5kbGVyOwoJCQloYW5kbGVyID0gaGFuZGxlT2JqSW4uaGFuZGxlcjsKCQkJ
c2VsZWN0b3IgPSBoYW5kbGVPYmpJbi5zZWxlY3RvcjsKCQl9CgoJCS8vIE1ha2Ug
c3VyZSB0aGF0IHRoZSBoYW5kbGVyIGhhcyBhIHVuaXF1ZSBJRCwgdXNlZCB0byBm
aW5kL3JlbW92ZSBpdCBsYXRlcgoJCWlmICggIWhhbmRsZXIuZ3VpZCApIHsKCQkJ
aGFuZGxlci5ndWlkID0galF1ZXJ5Lmd1aWQrKzsKCQl9CgoJCS8vIEluaXQgdGhl
IGVsZW1lbnQncyBldmVudCBzdHJ1Y3R1cmUgYW5kIG1haW4gaGFuZGxlciwgaWYg
dGhpcyBpcyB0aGUgZmlyc3QKCQlldmVudHMgPSBlbGVtRGF0YS5ldmVudHM7CgkJ
aWYgKCAhZXZlbnRzICkgewoJCQllbGVtRGF0YS5ldmVudHMgPSBldmVudHMgPSB7
fTsKCQl9CgkJZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGU7CgkJaWYgKCAh
ZXZlbnRIYW5kbGUgKSB7CgkJCWVsZW1EYXRhLmhhbmRsZSA9IGV2ZW50SGFuZGxl
ID0gZnVuY3Rpb24oIGUgKSB7CgkJCQkvLyBEaXNjYXJkIHRoZSBzZWNvbmQgZXZl
bnQgb2YgYSBqUXVlcnkuZXZlbnQudHJpZ2dlcigpIGFuZAoJCQkJLy8gd2hlbiBh
biBldmVudCBpcyBjYWxsZWQgYWZ0ZXIgYSBwYWdlIGhhcyB1bmxvYWRlZAoJCQkJ
cmV0dXJuIHR5cGVvZiBqUXVlcnkgIT09ICJ1bmRlZmluZWQiICYmICghZSB8fCBq
UXVlcnkuZXZlbnQudHJpZ2dlcmVkICE9PSBlLnR5cGUpID8KCQkJCQlqUXVlcnku
ZXZlbnQuZGlzcGF0Y2guYXBwbHkoIGV2ZW50SGFuZGxlLmVsZW0sIGFyZ3VtZW50
cyApIDoKCQkJCQl1bmRlZmluZWQ7CgkJCX07CgkJCS8vIEFkZCBlbGVtIGFzIGEg
cHJvcGVydHkgb2YgdGhlIGhhbmRsZSBmbiB0byBwcmV2ZW50IGEgbWVtb3J5IGxl
YWsgd2l0aCBJRSBub24tbmF0aXZlIGV2ZW50cwoJCQlldmVudEhhbmRsZS5lbGVt
ID0gZWxlbTsKCQl9CgoJCS8vIEhhbmRsZSBtdWx0aXBsZSBldmVudHMgc2VwYXJh
dGVkIGJ5IGEgc3BhY2UKCQkvLyBqUXVlcnkoLi4uKS5iaW5kKCJtb3VzZW92ZXIg
bW91c2VvdXQiLCBmbik7CgkJdHlwZXMgPSBqUXVlcnkudHJpbSggaG92ZXJIYWNr
KHR5cGVzKSApLnNwbGl0KCAiICIgKTsKCQlmb3IgKCB0ID0gMDsgdCA8IHR5cGVz
Lmxlbmd0aDsgdCsrICkgewoKCQkJdG5zID0gcnR5cGVuYW1lc3BhY2UuZXhlYygg
dHlwZXNbdF0gKSB8fCBbXTsKCQkJdHlwZSA9IHRuc1sxXTsKCQkJbmFtZXNwYWNl
cyA9ICggdG5zWzJdIHx8ICIiICkuc3BsaXQoICIuIiApLnNvcnQoKTsKCgkJCS8v
IElmIGV2ZW50IGNoYW5nZXMgaXRzIHR5cGUsIHVzZSB0aGUgc3BlY2lhbCBldmVu
dCBoYW5kbGVycyBmb3IgdGhlIGNoYW5nZWQgdHlwZQoJCQlzcGVjaWFsID0galF1
ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTsKCgkJCS8vIElmIHNlbGVj
dG9yIGRlZmluZWQsIGRldGVybWluZSBzcGVjaWFsIGV2ZW50IGFwaSB0eXBlLCBv
dGhlcndpc2UgZ2l2ZW4gdHlwZQoJCQl0eXBlID0gKCBzZWxlY3RvciA/IHNwZWNp
YWwuZGVsZWdhdGVUeXBlIDogc3BlY2lhbC5iaW5kVHlwZSApIHx8IHR5cGU7CgoJ
CQkvLyBVcGRhdGUgc3BlY2lhbCBiYXNlZCBvbiBuZXdseSByZXNldCB0eXBlCgkJ
CXNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9OwoK
CQkJLy8gaGFuZGxlT2JqIGlzIHBhc3NlZCB0byBhbGwgZXZlbnQgaGFuZGxlcnMK
CQkJaGFuZGxlT2JqID0galF1ZXJ5LmV4dGVuZCh7CgkJCQl0eXBlOiB0eXBlLAoJ
CQkJb3JpZ1R5cGU6IHRuc1sxXSwKCQkJCWRhdGE6IGRhdGEsCgkJCQloYW5kbGVy
OiBoYW5kbGVyLAoJCQkJZ3VpZDogaGFuZGxlci5ndWlkLAoJCQkJc2VsZWN0b3I6
IHNlbGVjdG9yLAoJCQkJcXVpY2s6IHNlbGVjdG9yICYmIHF1aWNrUGFyc2UoIHNl
bGVjdG9yICksCgkJCQluYW1lc3BhY2U6IG5hbWVzcGFjZXMuam9pbigiLiIpCgkJ
CX0sIGhhbmRsZU9iakluICk7CgoJCQkvLyBJbml0IHRoZSBldmVudCBoYW5kbGVy
IHF1ZXVlIGlmIHdlJ3JlIHRoZSBmaXJzdAoJCQloYW5kbGVycyA9IGV2ZW50c1sg
dHlwZSBdOwoJCQlpZiAoICFoYW5kbGVycyApIHsKCQkJCWhhbmRsZXJzID0gZXZl
bnRzWyB0eXBlIF0gPSBbXTsKCQkJCWhhbmRsZXJzLmRlbGVnYXRlQ291bnQgPSAw
OwoKCQkJCS8vIE9ubHkgdXNlIGFkZEV2ZW50TGlzdGVuZXIvYXR0YWNoRXZlbnQg
aWYgdGhlIHNwZWNpYWwgZXZlbnRzIGhhbmRsZXIgcmV0dXJucyBmYWxzZQoJCQkJ
aWYgKCAhc3BlY2lhbC5zZXR1cCB8fCBzcGVjaWFsLnNldHVwLmNhbGwoIGVsZW0s
IGRhdGEsIG5hbWVzcGFjZXMsIGV2ZW50SGFuZGxlICkgPT09IGZhbHNlICkgewoJ
CQkJCS8vIEJpbmQgdGhlIGdsb2JhbCBldmVudCBoYW5kbGVyIHRvIHRoZSBlbGVt
ZW50CgkJCQkJaWYgKCBlbGVtLmFkZEV2ZW50TGlzdGVuZXIgKSB7CgkJCQkJCWVs
ZW0uYWRkRXZlbnRMaXN0ZW5lciggdHlwZSwgZXZlbnRIYW5kbGUsIGZhbHNlICk7
CgoJCQkJCX0gZWxzZSBpZiAoIGVsZW0uYXR0YWNoRXZlbnQgKSB7CgkJCQkJCWVs
ZW0uYXR0YWNoRXZlbnQoICJvbiIgKyB0eXBlLCBldmVudEhhbmRsZSApOwoJCQkJ
CX0KCQkJCX0KCQkJfQoKCQkJaWYgKCBzcGVjaWFsLmFkZCApIHsKCQkJCXNwZWNp
YWwuYWRkLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApOwoKCQkJCWlmICggIWhhbmRs
ZU9iai5oYW5kbGVyLmd1aWQgKSB7CgkJCQkJaGFuZGxlT2JqLmhhbmRsZXIuZ3Vp
ZCA9IGhhbmRsZXIuZ3VpZDsKCQkJCX0KCQkJfQoKCQkJLy8gQWRkIHRvIHRoZSBl
bGVtZW50J3MgaGFuZGxlciBsaXN0LCBkZWxlZ2F0ZXMgaW4gZnJvbnQKCQkJaWYg
KCBzZWxlY3RvciApIHsKCQkJCWhhbmRsZXJzLnNwbGljZSggaGFuZGxlcnMuZGVs
ZWdhdGVDb3VudCsrLCAwLCBoYW5kbGVPYmogKTsKCQkJfSBlbHNlIHsKCQkJCWhh
bmRsZXJzLnB1c2goIGhhbmRsZU9iaiApOwoJCQl9CgoJCQkvLyBLZWVwIHRyYWNr
IG9mIHdoaWNoIGV2ZW50cyBoYXZlIGV2ZXIgYmVlbiB1c2VkLCBmb3IgZXZlbnQg
b3B0aW1pemF0aW9uCgkJCWpRdWVyeS5ldmVudC5nbG9iYWxbIHR5cGUgXSA9IHRy
dWU7CgkJfQoKCQkvLyBOdWxsaWZ5IGVsZW0gdG8gcHJldmVudCBtZW1vcnkgbGVh
a3MgaW4gSUUKCQllbGVtID0gbnVsbDsKCX0sCgoJZ2xvYmFsOiB7fSwKCgkvLyBE
ZXRhY2ggYW4gZXZlbnQgb3Igc2V0IG9mIGV2ZW50cyBmcm9tIGFuIGVsZW1lbnQK
CXJlbW92ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBzZWxlY3Rv
ciwgbWFwcGVkVHlwZXMgKSB7CgoJCXZhciBlbGVtRGF0YSA9IGpRdWVyeS5oYXNE
YXRhKCBlbGVtICkgJiYgalF1ZXJ5Ll9kYXRhKCBlbGVtICksCgkJCXQsIHRucywg
dHlwZSwgb3JpZ1R5cGUsIG5hbWVzcGFjZXMsIG9yaWdDb3VudCwKCQkJaiwgZXZl
bnRzLCBzcGVjaWFsLCBoYW5kbGUsIGV2ZW50VHlwZSwgaGFuZGxlT2JqOwoKCQlp
ZiAoICFlbGVtRGF0YSB8fCAhKGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cykgKSB7
CgkJCXJldHVybjsKCQl9CgoJCS8vIE9uY2UgZm9yIGVhY2ggdHlwZS5uYW1lc3Bh
Y2UgaW4gdHlwZXM7IHR5cGUgbWF5IGJlIG9taXR0ZWQKCQl0eXBlcyA9IGpRdWVy
eS50cmltKCBob3ZlckhhY2soIHR5cGVzIHx8ICIiICkgKS5zcGxpdCgiICIpOwoJ
CWZvciAoIHQgPSAwOyB0IDwgdHlwZXMubGVuZ3RoOyB0KysgKSB7CgkJCXRucyA9
IHJ0eXBlbmFtZXNwYWNlLmV4ZWMoIHR5cGVzW3RdICkgfHwgW107CgkJCXR5cGUg
PSBvcmlnVHlwZSA9IHRuc1sxXTsKCQkJbmFtZXNwYWNlcyA9IHRuc1syXTsKCgkJ
CS8vIFVuYmluZCBhbGwgZXZlbnRzIChvbiB0aGlzIG5hbWVzcGFjZSwgaWYgcHJv
dmlkZWQpIGZvciB0aGUgZWxlbWVudAoJCQlpZiAoICF0eXBlICkgewoJCQkJZm9y
ICggdHlwZSBpbiBldmVudHMgKSB7CgkJCQkJalF1ZXJ5LmV2ZW50LnJlbW92ZSgg
ZWxlbSwgdHlwZSArIHR5cGVzWyB0IF0sIGhhbmRsZXIsIHNlbGVjdG9yLCB0cnVl
ICk7CgkJCQl9CgkJCQljb250aW51ZTsKCQkJfQoKCQkJc3BlY2lhbCA9IGpRdWVy
eS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307CgkJCXR5cGUgPSAoIHNlbGVj
dG9yPyBzcGVjaWFsLmRlbGVnYXRlVHlwZSA6IHNwZWNpYWwuYmluZFR5cGUgKSB8
fCB0eXBlOwoJCQlldmVudFR5cGUgPSBldmVudHNbIHR5cGUgXSB8fCBbXTsKCQkJ
b3JpZ0NvdW50ID0gZXZlbnRUeXBlLmxlbmd0aDsKCQkJbmFtZXNwYWNlcyA9IG5h
bWVzcGFjZXMgPyBuZXcgUmVnRXhwKCIoXnxcXC4pIiArIG5hbWVzcGFjZXMuc3Bs
aXQoIi4iKS5zb3J0KCkuam9pbigiXFwuKD86LipcXC4pPyIpICsgIihcXC58JCki
KSA6IG51bGw7CgoJCQkvLyBSZW1vdmUgbWF0Y2hpbmcgZXZlbnRzCgkJCWZvciAo
IGogPSAwOyBqIDwgZXZlbnRUeXBlLmxlbmd0aDsgaisrICkgewoJCQkJaGFuZGxl
T2JqID0gZXZlbnRUeXBlWyBqIF07CgoJCQkJaWYgKCAoIG1hcHBlZFR5cGVzIHx8
IG9yaWdUeXBlID09PSBoYW5kbGVPYmoub3JpZ1R5cGUgKSAmJgoJCQkJCSAoICFo
YW5kbGVyIHx8IGhhbmRsZXIuZ3VpZCA9PT0gaGFuZGxlT2JqLmd1aWQgKSAmJgoJ
CQkJCSAoICFuYW1lc3BhY2VzIHx8IG5hbWVzcGFjZXMudGVzdCggaGFuZGxlT2Jq
Lm5hbWVzcGFjZSApICkgJiYKCQkJCQkgKCAhc2VsZWN0b3IgfHwgc2VsZWN0b3Ig
PT09IGhhbmRsZU9iai5zZWxlY3RvciB8fCBzZWxlY3RvciA9PT0gIioqIiAmJiBo
YW5kbGVPYmouc2VsZWN0b3IgKSApIHsKCQkJCQlldmVudFR5cGUuc3BsaWNlKCBq
LS0sIDEgKTsKCgkJCQkJaWYgKCBoYW5kbGVPYmouc2VsZWN0b3IgKSB7CgkJCQkJ
CWV2ZW50VHlwZS5kZWxlZ2F0ZUNvdW50LS07CgkJCQkJfQoJCQkJCWlmICggc3Bl
Y2lhbC5yZW1vdmUgKSB7CgkJCQkJCXNwZWNpYWwucmVtb3ZlLmNhbGwoIGVsZW0s
IGhhbmRsZU9iaiApOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJLy8gUmVtb3ZlIGdl
bmVyaWMgZXZlbnQgaGFuZGxlciBpZiB3ZSByZW1vdmVkIHNvbWV0aGluZyBhbmQg
bm8gbW9yZSBoYW5kbGVycyBleGlzdAoJCQkvLyAoYXZvaWRzIHBvdGVudGlhbCBm
b3IgZW5kbGVzcyByZWN1cnNpb24gZHVyaW5nIHJlbW92YWwgb2Ygc3BlY2lhbCBl
dmVudCBoYW5kbGVycykKCQkJaWYgKCBldmVudFR5cGUubGVuZ3RoID09PSAwICYm
IG9yaWdDb3VudCAhPT0gZXZlbnRUeXBlLmxlbmd0aCApIHsKCQkJCWlmICggIXNw
ZWNpYWwudGVhcmRvd24gfHwgc3BlY2lhbC50ZWFyZG93bi5jYWxsKCBlbGVtLCBu
YW1lc3BhY2VzICkgPT09IGZhbHNlICkgewoJCQkJCWpRdWVyeS5yZW1vdmVFdmVu
dCggZWxlbSwgdHlwZSwgZWxlbURhdGEuaGFuZGxlICk7CgkJCQl9CgoJCQkJZGVs
ZXRlIGV2ZW50c1sgdHlwZSBdOwoJCQl9CgkJfQoKCQkvLyBSZW1vdmUgdGhlIGV4
cGFuZG8gaWYgaXQncyBubyBsb25nZXIgdXNlZAoJCWlmICggalF1ZXJ5LmlzRW1w
dHlPYmplY3QoIGV2ZW50cyApICkgewoJCQloYW5kbGUgPSBlbGVtRGF0YS5oYW5k
bGU7CgkJCWlmICggaGFuZGxlICkgewoJCQkJaGFuZGxlLmVsZW0gPSBudWxsOwoJ
CQl9CgoJCQkvLyByZW1vdmVEYXRhIGFsc28gY2hlY2tzIGZvciBlbXB0aW5lc3Mg
YW5kIGNsZWFycyB0aGUgZXhwYW5kbyBpZiBlbXB0eQoJCQkvLyBzbyB1c2UgaXQg
aW5zdGVhZCBvZiBkZWxldGUKCQkJalF1ZXJ5LnJlbW92ZURhdGEoIGVsZW0sIFsg
ImV2ZW50cyIsICJoYW5kbGUiIF0sIHRydWUgKTsKCQl9Cgl9LAoKCS8vIEV2ZW50
cyB0aGF0IGFyZSBzYWZlIHRvIHNob3J0LWNpcmN1aXQgaWYgbm8gaGFuZGxlcnMg
YXJlIGF0dGFjaGVkLgoJLy8gTmF0aXZlIERPTSBldmVudHMgc2hvdWxkIG5vdCBi
ZSBhZGRlZCwgdGhleSBtYXkgaGF2ZSBpbmxpbmUgaGFuZGxlcnMuCgljdXN0b21F
dmVudDogewoJCSJnZXREYXRhIjogdHJ1ZSwKCQkic2V0RGF0YSI6IHRydWUsCgkJ
ImNoYW5nZURhdGEiOiB0cnVlCgl9LAoKCXRyaWdnZXI6IGZ1bmN0aW9uKCBldmVu
dCwgZGF0YSwgZWxlbSwgb25seUhhbmRsZXJzICkgewoJCS8vIERvbid0IGRvIGV2
ZW50cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzCgkJaWYgKCBlbGVtICYmIChl
bGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDgpICkgewoJ
CQlyZXR1cm47CgkJfQoKCQkvLyBFdmVudCBvYmplY3Qgb3IgZXZlbnQgdHlwZQoJ
CXZhciB0eXBlID0gZXZlbnQudHlwZSB8fCBldmVudCwKCQkJbmFtZXNwYWNlcyA9
IFtdLAoJCQljYWNoZSwgZXhjbHVzaXZlLCBpLCBjdXIsIG9sZCwgb250eXBlLCBz
cGVjaWFsLCBoYW5kbGUsIGV2ZW50UGF0aCwgYnViYmxlVHlwZTsKCgkJLy8gZm9j
dXMvYmx1ciBtb3JwaHMgdG8gZm9jdXNpbi9vdXQ7IGVuc3VyZSB3ZSdyZSBub3Qg
ZmlyaW5nIHRoZW0gcmlnaHQgbm93CgkJaWYgKCByZm9jdXNNb3JwaC50ZXN0KCB0
eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkgewoJCQlyZXR1cm47CgkJ
fQoKCQlpZiAoIHR5cGUuaW5kZXhPZiggIiEiICkgPj0gMCApIHsKCQkJLy8gRXhj
bHVzaXZlIGV2ZW50cyB0cmlnZ2VyIG9ubHkgZm9yIHRoZSBleGFjdCBldmVudCAo
bm8gbmFtZXNwYWNlcykKCQkJdHlwZSA9IHR5cGUuc2xpY2UoMCwgLTEpOwoJCQll
eGNsdXNpdmUgPSB0cnVlOwoJCX0KCgkJaWYgKCB0eXBlLmluZGV4T2YoICIuIiAp
ID49IDAgKSB7CgkJCS8vIE5hbWVzcGFjZWQgdHJpZ2dlcjsgY3JlYXRlIGEgcmVn
ZXhwIHRvIG1hdGNoIGV2ZW50IHR5cGUgaW4gaGFuZGxlKCkKCQkJbmFtZXNwYWNl
cyA9IHR5cGUuc3BsaXQoIi4iKTsKCQkJdHlwZSA9IG5hbWVzcGFjZXMuc2hpZnQo
KTsKCQkJbmFtZXNwYWNlcy5zb3J0KCk7CgkJfQoKCQlpZiAoICghZWxlbSB8fCBq
UXVlcnkuZXZlbnQuY3VzdG9tRXZlbnRbIHR5cGUgXSkgJiYgIWpRdWVyeS5ldmVu
dC5nbG9iYWxbIHR5cGUgXSApIHsKCQkJLy8gTm8galF1ZXJ5IGhhbmRsZXJzIGZv
ciB0aGlzIGV2ZW50IHR5cGUsIGFuZCBpdCBjYW4ndCBoYXZlIGlubGluZSBoYW5k
bGVycwoJCQlyZXR1cm47CgkJfQoKCQkvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYW4g
RXZlbnQsIE9iamVjdCwgb3IganVzdCBhbiBldmVudCB0eXBlIHN0cmluZwoJCWV2
ZW50ID0gdHlwZW9mIGV2ZW50ID09PSAib2JqZWN0IiA/CgkJCS8vIGpRdWVyeS5F
dmVudCBvYmplY3QKCQkJZXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gPyBldmVudCA6
CgkJCS8vIE9iamVjdCBsaXRlcmFsCgkJCW5ldyBqUXVlcnkuRXZlbnQoIHR5cGUs
IGV2ZW50ICkgOgoJCQkvLyBKdXN0IHRoZSBldmVudCB0eXBlIChzdHJpbmcpCgkJ
CW5ldyBqUXVlcnkuRXZlbnQoIHR5cGUgKTsKCgkJZXZlbnQudHlwZSA9IHR5cGU7
CgkJZXZlbnQuaXNUcmlnZ2VyID0gdHJ1ZTsKCQlldmVudC5leGNsdXNpdmUgPSBl
eGNsdXNpdmU7CgkJZXZlbnQubmFtZXNwYWNlID0gbmFtZXNwYWNlcy5qb2luKCAi
LiIgKTsKCQlldmVudC5uYW1lc3BhY2VfcmUgPSBldmVudC5uYW1lc3BhY2U/IG5l
dyBSZWdFeHAoIihefFxcLikiICsgbmFtZXNwYWNlcy5qb2luKCJcXC4oPzouKlxc
Lik/IikgKyAiKFxcLnwkKSIpIDogbnVsbDsKCQlvbnR5cGUgPSB0eXBlLmluZGV4
T2YoICI6IiApIDwgMCA/ICJvbiIgKyB0eXBlIDogIiI7CgoJCS8vIEhhbmRsZSBh
IGdsb2JhbCB0cmlnZ2VyCgkJaWYgKCAhZWxlbSApIHsKCgkJCS8vIFRPRE86IFN0
b3AgdGF1bnRpbmcgdGhlIGRhdGEgY2FjaGU7IHJlbW92ZSBnbG9iYWwgZXZlbnRz
IGFuZCBhbHdheXMgYXR0YWNoIHRvIGRvY3VtZW50CgkJCWNhY2hlID0galF1ZXJ5
LmNhY2hlOwoJCQlmb3IgKCBpIGluIGNhY2hlICkgewoJCQkJaWYgKCBjYWNoZVsg
aSBdLmV2ZW50cyAmJiBjYWNoZVsgaSBdLmV2ZW50c1sgdHlwZSBdICkgewoJCQkJ
CWpRdWVyeS5ldmVudC50cmlnZ2VyKCBldmVudCwgZGF0YSwgY2FjaGVbIGkgXS5o
YW5kbGUuZWxlbSwgdHJ1ZSApOwoJCQkJfQoJCQl9CgkJCXJldHVybjsKCQl9CgoJ
CS8vIENsZWFuIHVwIHRoZSBldmVudCBpbiBjYXNlIGl0IGlzIGJlaW5nIHJldXNl
ZAoJCWV2ZW50LnJlc3VsdCA9IHVuZGVmaW5lZDsKCQlpZiAoICFldmVudC50YXJn
ZXQgKSB7CgkJCWV2ZW50LnRhcmdldCA9IGVsZW07CgkJfQoKCQkvLyBDbG9uZSBh
bnkgaW5jb21pbmcgZGF0YSBhbmQgcHJlcGVuZCB0aGUgZXZlbnQsIGNyZWF0aW5n
IHRoZSBoYW5kbGVyIGFyZyBsaXN0CgkJZGF0YSA9IGRhdGEgIT0gbnVsbCA/IGpR
dWVyeS5tYWtlQXJyYXkoIGRhdGEgKSA6IFtdOwoJCWRhdGEudW5zaGlmdCggZXZl
bnQgKTsKCgkJLy8gQWxsb3cgc3BlY2lhbCBldmVudHMgdG8gZHJhdyBvdXRzaWRl
IHRoZSBsaW5lcwoJCXNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlw
ZSBdIHx8IHt9OwoJCWlmICggc3BlY2lhbC50cmlnZ2VyICYmIHNwZWNpYWwudHJp
Z2dlci5hcHBseSggZWxlbSwgZGF0YSApID09PSBmYWxzZSApIHsKCQkJcmV0dXJu
OwoJCX0KCgkJLy8gRGV0ZXJtaW5lIGV2ZW50IHByb3BhZ2F0aW9uIHBhdGggaW4g
YWR2YW5jZSwgcGVyIFczQyBldmVudHMgc3BlYyAoIzk5NTEpCgkJLy8gQnViYmxl
IHVwIHRvIGRvY3VtZW50LCB0aGVuIHRvIHdpbmRvdzsgd2F0Y2ggZm9yIGEgZ2xv
YmFsIG93bmVyRG9jdW1lbnQgdmFyICgjOTcyNCkKCQlldmVudFBhdGggPSBbWyBl
bGVtLCBzcGVjaWFsLmJpbmRUeXBlIHx8IHR5cGUgXV07CgkJaWYgKCAhb25seUhh
bmRsZXJzICYmICFzcGVjaWFsLm5vQnViYmxlICYmICFqUXVlcnkuaXNXaW5kb3co
IGVsZW0gKSApIHsKCgkJCWJ1YmJsZVR5cGUgPSBzcGVjaWFsLmRlbGVnYXRlVHlw
ZSB8fCB0eXBlOwoJCQljdXIgPSByZm9jdXNNb3JwaC50ZXN0KCBidWJibGVUeXBl
ICsgdHlwZSApID8gZWxlbSA6IGVsZW0ucGFyZW50Tm9kZTsKCQkJb2xkID0gbnVs
bDsKCQkJZm9yICggOyBjdXI7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkgewoJCQkJ
ZXZlbnRQYXRoLnB1c2goWyBjdXIsIGJ1YmJsZVR5cGUgXSk7CgkJCQlvbGQgPSBj
dXI7CgkJCX0KCgkJCS8vIE9ubHkgYWRkIHdpbmRvdyBpZiB3ZSBnb3QgdG8gZG9j
dW1lbnQgKGUuZy4sIG5vdCBwbGFpbiBvYmogb3IgZGV0YWNoZWQgRE9NKQoJCQlp
ZiAoIG9sZCAmJiBvbGQgPT09IGVsZW0ub3duZXJEb2N1bWVudCApIHsKCQkJCWV2
ZW50UGF0aC5wdXNoKFsgb2xkLmRlZmF1bHRWaWV3IHx8IG9sZC5wYXJlbnRXaW5k
b3cgfHwgd2luZG93LCBidWJibGVUeXBlIF0pOwoJCQl9CgkJfQoKCQkvLyBGaXJl
IGhhbmRsZXJzIG9uIHRoZSBldmVudCBwYXRoCgkJZm9yICggaSA9IDA7IGkgPCBl
dmVudFBhdGgubGVuZ3RoICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgp
OyBpKysgKSB7CgoJCQljdXIgPSBldmVudFBhdGhbaV1bMF07CgkJCWV2ZW50LnR5
cGUgPSBldmVudFBhdGhbaV1bMV07CgoJCQloYW5kbGUgPSAoIGpRdWVyeS5fZGF0
YSggY3VyLCAiZXZlbnRzIiApIHx8IHt9IClbIGV2ZW50LnR5cGUgXSAmJiBqUXVl
cnkuX2RhdGEoIGN1ciwgImhhbmRsZSIgKTsKCQkJaWYgKCBoYW5kbGUgKSB7CgkJ
CQloYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApOwoJCQl9CgkJCS8vIE5vdGUgdGhh
dCB0aGlzIGlzIGEgYmFyZSBKUyBmdW5jdGlvbiBhbmQgbm90IGEgalF1ZXJ5IGhh
bmRsZXIKCQkJaGFuZGxlID0gb250eXBlICYmIGN1clsgb250eXBlIF07CgkJCWlm
ICggaGFuZGxlICYmIGpRdWVyeS5hY2NlcHREYXRhKCBjdXIgKSAmJiBoYW5kbGUu
YXBwbHkoIGN1ciwgZGF0YSApID09PSBmYWxzZSApIHsKCQkJCWV2ZW50LnByZXZl
bnREZWZhdWx0KCk7CgkJCX0KCQl9CgkJZXZlbnQudHlwZSA9IHR5cGU7CgoJCS8v
IElmIG5vYm9keSBwcmV2ZW50ZWQgdGhlIGRlZmF1bHQgYWN0aW9uLCBkbyBpdCBu
b3cKCQlpZiAoICFvbmx5SGFuZGxlcnMgJiYgIWV2ZW50LmlzRGVmYXVsdFByZXZl
bnRlZCgpICkgewoKCQkJaWYgKCAoIXNwZWNpYWwuX2RlZmF1bHQgfHwgc3BlY2lh
bC5fZGVmYXVsdC5hcHBseSggZWxlbS5vd25lckRvY3VtZW50LCBkYXRhICkgPT09
IGZhbHNlKSAmJgoJCQkJISh0eXBlID09PSAiY2xpY2siICYmIGpRdWVyeS5ub2Rl
TmFtZSggZWxlbSwgImEiICkpICYmIGpRdWVyeS5hY2NlcHREYXRhKCBlbGVtICkg
KSB7CgoJCQkJLy8gQ2FsbCBhIG5hdGl2ZSBET00gbWV0aG9kIG9uIHRoZSB0YXJn
ZXQgd2l0aCB0aGUgc2FtZSBuYW1lIG5hbWUgYXMgdGhlIGV2ZW50LgoJCQkJLy8g
Q2FuJ3QgdXNlIGFuIC5pc0Z1bmN0aW9uKCkgY2hlY2sgaGVyZSBiZWNhdXNlIElF
Ni83IGZhaWxzIHRoYXQgdGVzdC4KCQkJCS8vIERvbid0IGRvIGRlZmF1bHQgYWN0
aW9ucyBvbiB3aW5kb3csIHRoYXQncyB3aGVyZSBnbG9iYWwgdmFyaWFibGVzIGJl
ICgjNjE3MCkKCQkJCS8vIElFPDkgZGllcyBvbiBmb2N1cy9ibHVyIHRvIGhpZGRl
biBlbGVtZW50ICgjMTQ4NikKCQkJCWlmICggb250eXBlICYmIGVsZW1bIHR5cGUg
XSAmJiAoKHR5cGUgIT09ICJmb2N1cyIgJiYgdHlwZSAhPT0gImJsdXIiKSB8fCBl
dmVudC50YXJnZXQub2Zmc2V0V2lkdGggIT09IDApICYmICFqUXVlcnkuaXNXaW5k
b3coIGVsZW0gKSApIHsKCgkJCQkJLy8gRG9uJ3QgcmUtdHJpZ2dlciBhbiBvbkZP
TyBldmVudCB3aGVuIHdlIGNhbGwgaXRzIEZPTygpIG1ldGhvZAoJCQkJCW9sZCA9
IGVsZW1bIG9udHlwZSBdOwoKCQkJCQlpZiAoIG9sZCApIHsKCQkJCQkJZWxlbVsg
b250eXBlIF0gPSBudWxsOwoJCQkJCX0KCgkJCQkJLy8gUHJldmVudCByZS10cmln
Z2VyaW5nIG9mIHRoZSBzYW1lIGV2ZW50LCBzaW5jZSB3ZSBhbHJlYWR5IGJ1YmJs
ZWQgaXQgYWJvdmUKCQkJCQlqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdHlwZTsK
CQkJCQllbGVtWyB0eXBlIF0oKTsKCQkJCQlqUXVlcnkuZXZlbnQudHJpZ2dlcmVk
ID0gdW5kZWZpbmVkOwoKCQkJCQlpZiAoIG9sZCApIHsKCQkJCQkJZWxlbVsgb250
eXBlIF0gPSBvbGQ7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoKCQlyZXR1cm4gZXZl
bnQucmVzdWx0OwoJfSwKCglkaXNwYXRjaDogZnVuY3Rpb24oIGV2ZW50ICkgewoK
CQkvLyBNYWtlIGEgd3JpdGFibGUgalF1ZXJ5LkV2ZW50IGZyb20gdGhlIG5hdGl2
ZSBldmVudCBvYmplY3QKCQlldmVudCA9IGpRdWVyeS5ldmVudC5maXgoIGV2ZW50
IHx8IHdpbmRvdy5ldmVudCApOwoKCQl2YXIgaGFuZGxlcnMgPSAoIChqUXVlcnku
X2RhdGEoIHRoaXMsICJldmVudHMiICkgfHwge30gKVsgZXZlbnQudHlwZSBdIHx8
IFtdKSwKCQkJZGVsZWdhdGVDb3VudCA9IGhhbmRsZXJzLmRlbGVnYXRlQ291bnQs
CgkJCWFyZ3MgPSBbXS5zbGljZS5jYWxsKCBhcmd1bWVudHMsIDAgKSwKCQkJcnVu
X2FsbCA9ICFldmVudC5leGNsdXNpdmUgJiYgIWV2ZW50Lm5hbWVzcGFjZSwKCQkJ
c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyBldmVudC50eXBlIF0gfHwg
e30sCgkJCWhhbmRsZXJRdWV1ZSA9IFtdLAoJCQlpLCBqLCBjdXIsIGpxY3VyLCBy
ZXQsIHNlbE1hdGNoLCBtYXRjaGVkLCBtYXRjaGVzLCBoYW5kbGVPYmosIHNlbCwg
cmVsYXRlZDsKCgkJLy8gVXNlIHRoZSBmaXgtZWQgalF1ZXJ5LkV2ZW50IHJhdGhl
ciB0aGFuIHRoZSAocmVhZC1vbmx5KSBuYXRpdmUgZXZlbnQKCQlhcmdzWzBdID0g
ZXZlbnQ7CgkJZXZlbnQuZGVsZWdhdGVUYXJnZXQgPSB0aGlzOwoKCQkvLyBDYWxs
IHRoZSBwcmVEaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGUsIGFuZCBs
ZXQgaXQgYmFpbCBpZiBkZXNpcmVkCgkJaWYgKCBzcGVjaWFsLnByZURpc3BhdGNo
ICYmIHNwZWNpYWwucHJlRGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKSA9PT0g
ZmFsc2UgKSB7CgkJCXJldHVybjsKCQl9CgoJCS8vIERldGVybWluZSBoYW5kbGVy
cyB0aGF0IHNob3VsZCBydW4gaWYgdGhlcmUgYXJlIGRlbGVnYXRlZCBldmVudHMK
CQkvLyBBdm9pZCBub24tbGVmdC1jbGljayBidWJibGluZyBpbiBGaXJlZm94ICgj
Mzg2MSkKCQlpZiAoIGRlbGVnYXRlQ291bnQgJiYgIShldmVudC5idXR0b24gJiYg
ZXZlbnQudHlwZSA9PT0gImNsaWNrIikgKSB7CgoJCQkvLyBQcmVnZW5lcmF0ZSBh
IHNpbmdsZSBqUXVlcnkgb2JqZWN0IGZvciByZXVzZSB3aXRoIC5pcygpCgkJCWpx
Y3VyID0galF1ZXJ5KHRoaXMpOwoJCQlqcWN1ci5jb250ZXh0ID0gdGhpcy5vd25l
ckRvY3VtZW50IHx8IHRoaXM7CgoJCQlmb3IgKCBjdXIgPSBldmVudC50YXJnZXQ7
IGN1ciAhPSB0aGlzOyBjdXIgPSBjdXIucGFyZW50Tm9kZSB8fCB0aGlzICkgewoK
CQkJCS8vIERvbid0IHByb2Nlc3MgZXZlbnRzIG9uIGRpc2FibGVkIGVsZW1lbnRz
ICgjNjkxMSwgIzgxNjUpCgkJCQlpZiAoIGN1ci5kaXNhYmxlZCAhPT0gdHJ1ZSAp
IHsKCQkJCQlzZWxNYXRjaCA9IHt9OwoJCQkJCW1hdGNoZXMgPSBbXTsKCQkJCQlq
cWN1clswXSA9IGN1cjsKCQkJCQlmb3IgKCBpID0gMDsgaSA8IGRlbGVnYXRlQ291
bnQ7IGkrKyApIHsKCQkJCQkJaGFuZGxlT2JqID0gaGFuZGxlcnNbIGkgXTsKCQkJ
CQkJc2VsID0gaGFuZGxlT2JqLnNlbGVjdG9yOwoKCQkJCQkJaWYgKCBzZWxNYXRj
aFsgc2VsIF0gPT09IHVuZGVmaW5lZCApIHsKCQkJCQkJCXNlbE1hdGNoWyBzZWwg
XSA9ICgKCQkJCQkJCQloYW5kbGVPYmoucXVpY2sgPyBxdWlja0lzKCBjdXIsIGhh
bmRsZU9iai5xdWljayApIDoganFjdXIuaXMoIHNlbCApCgkJCQkJCQkpOwoJCQkJ
CQl9CgkJCQkJCWlmICggc2VsTWF0Y2hbIHNlbCBdICkgewoJCQkJCQkJbWF0Y2hl
cy5wdXNoKCBoYW5kbGVPYmogKTsKCQkJCQkJfQoJCQkJCX0KCQkJCQlpZiAoIG1h
dGNoZXMubGVuZ3RoICkgewoJCQkJCQloYW5kbGVyUXVldWUucHVzaCh7IGVsZW06
IGN1ciwgbWF0Y2hlczogbWF0Y2hlcyB9KTsKCQkJCQl9CgkJCQl9CgkJCX0KCQl9
CgoJCS8vIEFkZCB0aGUgcmVtYWluaW5nIChkaXJlY3RseS1ib3VuZCkgaGFuZGxl
cnMKCQlpZiAoIGhhbmRsZXJzLmxlbmd0aCA+IGRlbGVnYXRlQ291bnQgKSB7CgkJ
CWhhbmRsZXJRdWV1ZS5wdXNoKHsgZWxlbTogdGhpcywgbWF0Y2hlczogaGFuZGxl
cnMuc2xpY2UoIGRlbGVnYXRlQ291bnQgKSB9KTsKCQl9CgoJCS8vIFJ1biBkZWxl
Z2F0ZXMgZmlyc3Q7IHRoZXkgbWF5IHdhbnQgdG8gc3RvcCBwcm9wYWdhdGlvbiBi
ZW5lYXRoIHVzCgkJZm9yICggaSA9IDA7IGkgPCBoYW5kbGVyUXVldWUubGVuZ3Ro
ICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpOyBpKysgKSB7CgkJCW1h
dGNoZWQgPSBoYW5kbGVyUXVldWVbIGkgXTsKCQkJZXZlbnQuY3VycmVudFRhcmdl
dCA9IG1hdGNoZWQuZWxlbTsKCgkJCWZvciAoIGogPSAwOyBqIDwgbWF0Y2hlZC5t
YXRjaGVzLmxlbmd0aCAmJiAhZXZlbnQuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0
b3BwZWQoKTsgaisrICkgewoJCQkJaGFuZGxlT2JqID0gbWF0Y2hlZC5tYXRjaGVz
WyBqIF07CgoJCQkJLy8gVHJpZ2dlcmVkIGV2ZW50IG11c3QgZWl0aGVyIDEpIGJl
IG5vbi1leGNsdXNpdmUgYW5kIGhhdmUgbm8gbmFtZXNwYWNlLCBvcgoJCQkJLy8g
MikgaGF2ZSBuYW1lc3BhY2UocykgYSBzdWJzZXQgb3IgZXF1YWwgdG8gdGhvc2Ug
aW4gdGhlIGJvdW5kIGV2ZW50IChib3RoIGNhbiBoYXZlIG5vIG5hbWVzcGFjZSku
CgkJCQlpZiAoIHJ1bl9hbGwgfHwgKCFldmVudC5uYW1lc3BhY2UgJiYgIWhhbmRs
ZU9iai5uYW1lc3BhY2UpIHx8IGV2ZW50Lm5hbWVzcGFjZV9yZSAmJiBldmVudC5u
YW1lc3BhY2VfcmUudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkgewoKCQkJ
CQlldmVudC5kYXRhID0gaGFuZGxlT2JqLmRhdGE7CgkJCQkJZXZlbnQuaGFuZGxl
T2JqID0gaGFuZGxlT2JqOwoKCQkJCQlyZXQgPSAoIChqUXVlcnkuZXZlbnQuc3Bl
Y2lhbFsgaGFuZGxlT2JqLm9yaWdUeXBlIF0gfHwge30pLmhhbmRsZSB8fCBoYW5k
bGVPYmouaGFuZGxlciApCgkJCQkJCQkuYXBwbHkoIG1hdGNoZWQuZWxlbSwgYXJn
cyApOwoKCQkJCQlpZiAoIHJldCAhPT0gdW5kZWZpbmVkICkgewoJCQkJCQlldmVu
dC5yZXN1bHQgPSByZXQ7CgkJCQkJCWlmICggcmV0ID09PSBmYWxzZSApIHsKCQkJ
CQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCQkJCQlldmVudC5zdG9wUHJv
cGFnYXRpb24oKTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCgkJLy8g
Q2FsbCB0aGUgcG9zdERpc3BhdGNoIGhvb2sgZm9yIHRoZSBtYXBwZWQgdHlwZQoJ
CWlmICggc3BlY2lhbC5wb3N0RGlzcGF0Y2ggKSB7CgkJCXNwZWNpYWwucG9zdERp
c3BhdGNoLmNhbGwoIHRoaXMsIGV2ZW50ICk7CgkJfQoKCQlyZXR1cm4gZXZlbnQu
cmVzdWx0OwoJfSwKCgkvLyBJbmNsdWRlcyBzb21lIGV2ZW50IHByb3BzIHNoYXJl
ZCBieSBLZXlFdmVudCBhbmQgTW91c2VFdmVudAoJLy8gKioqIGF0dHJDaGFuZ2Ug
YXR0ck5hbWUgcmVsYXRlZE5vZGUgc3JjRWxlbWVudCAgYXJlIG5vdCBub3JtYWxp
emVkLCBub24tVzNDLCBkZXByZWNhdGVkLCB3aWxsIGJlIHJlbW92ZWQgaW4gMS44
ICoqKgoJcHJvcHM6ICJhdHRyQ2hhbmdlIGF0dHJOYW1lIHJlbGF0ZWROb2RlIHNy
Y0VsZW1lbnQgYWx0S2V5IGJ1YmJsZXMgY2FuY2VsYWJsZSBjdHJsS2V5IGN1cnJl
bnRUYXJnZXQgZXZlbnRQaGFzZSBtZXRhS2V5IHJlbGF0ZWRUYXJnZXQgc2hpZnRL
ZXkgdGFyZ2V0IHRpbWVTdGFtcCB2aWV3IHdoaWNoIi5zcGxpdCgiICIpLAoKCWZp
eEhvb2tzOiB7fSwKCglrZXlIb29rczogewoJCXByb3BzOiAiY2hhciBjaGFyQ29k
ZSBrZXkga2V5Q29kZSIuc3BsaXQoIiAiKSwKCQlmaWx0ZXI6IGZ1bmN0aW9uKCBl
dmVudCwgb3JpZ2luYWwgKSB7CgoJCQkvLyBBZGQgd2hpY2ggZm9yIGtleSBldmVu
dHMKCQkJaWYgKCBldmVudC53aGljaCA9PSBudWxsICkgewoJCQkJZXZlbnQud2hp
Y2ggPSBvcmlnaW5hbC5jaGFyQ29kZSAhPSBudWxsID8gb3JpZ2luYWwuY2hhckNv
ZGUgOiBvcmlnaW5hbC5rZXlDb2RlOwoJCQl9CgoJCQlyZXR1cm4gZXZlbnQ7CgkJ
fQoJfSwKCgltb3VzZUhvb2tzOiB7CgkJcHJvcHM6ICJidXR0b24gYnV0dG9ucyBj
bGllbnRYIGNsaWVudFkgZnJvbUVsZW1lbnQgb2Zmc2V0WCBvZmZzZXRZIHBhZ2VY
IHBhZ2VZIHNjcmVlblggc2NyZWVuWSB0b0VsZW1lbnQiLnNwbGl0KCIgIiksCgkJ
ZmlsdGVyOiBmdW5jdGlvbiggZXZlbnQsIG9yaWdpbmFsICkgewoJCQl2YXIgZXZl
bnREb2MsIGRvYywgYm9keSwKCQkJCWJ1dHRvbiA9IG9yaWdpbmFsLmJ1dHRvbiwK
CQkJCWZyb21FbGVtZW50ID0gb3JpZ2luYWwuZnJvbUVsZW1lbnQ7CgoJCQkvLyBD
YWxjdWxhdGUgcGFnZVgvWSBpZiBtaXNzaW5nIGFuZCBjbGllbnRYL1kgYXZhaWxh
YmxlCgkJCWlmICggZXZlbnQucGFnZVggPT0gbnVsbCAmJiBvcmlnaW5hbC5jbGll
bnRYICE9IG51bGwgKSB7CgkJCQlldmVudERvYyA9IGV2ZW50LnRhcmdldC5vd25l
ckRvY3VtZW50IHx8IGRvY3VtZW50OwoJCQkJZG9jID0gZXZlbnREb2MuZG9jdW1l
bnRFbGVtZW50OwoJCQkJYm9keSA9IGV2ZW50RG9jLmJvZHk7CgoJCQkJZXZlbnQu
cGFnZVggPSBvcmlnaW5hbC5jbGllbnRYICsgKCBkb2MgJiYgZG9jLnNjcm9sbExl
ZnQgfHwgYm9keSAmJiBib2R5LnNjcm9sbExlZnQgfHwgMCApIC0gKCBkb2MgJiYg
ZG9jLmNsaWVudExlZnQgfHwgYm9keSAmJiBib2R5LmNsaWVudExlZnQgfHwgMCAp
OwoJCQkJZXZlbnQucGFnZVkgPSBvcmlnaW5hbC5jbGllbnRZICsgKCBkb2MgJiYg
ZG9jLnNjcm9sbFRvcCAgfHwgYm9keSAmJiBib2R5LnNjcm9sbFRvcCAgfHwgMCAp
IC0gKCBkb2MgJiYgZG9jLmNsaWVudFRvcCAgfHwgYm9keSAmJiBib2R5LmNsaWVu
dFRvcCAgfHwgMCApOwoJCQl9CgoJCQkvLyBBZGQgcmVsYXRlZFRhcmdldCwgaWYg
bmVjZXNzYXJ5CgkJCWlmICggIWV2ZW50LnJlbGF0ZWRUYXJnZXQgJiYgZnJvbUVs
ZW1lbnQgKSB7CgkJCQlldmVudC5yZWxhdGVkVGFyZ2V0ID0gZnJvbUVsZW1lbnQg
PT09IGV2ZW50LnRhcmdldCA/IG9yaWdpbmFsLnRvRWxlbWVudCA6IGZyb21FbGVt
ZW50OwoJCQl9CgoJCQkvLyBBZGQgd2hpY2ggZm9yIGNsaWNrOiAxID09PSBsZWZ0
OyAyID09PSBtaWRkbGU7IDMgPT09IHJpZ2h0CgkJCS8vIE5vdGU6IGJ1dHRvbiBp
cyBub3Qgbm9ybWFsaXplZCwgc28gZG9uJ3QgdXNlIGl0CgkJCWlmICggIWV2ZW50
LndoaWNoICYmIGJ1dHRvbiAhPT0gdW5kZWZpbmVkICkgewoJCQkJZXZlbnQud2hp
Y2ggPSAoIGJ1dHRvbiAmIDEgPyAxIDogKCBidXR0b24gJiAyID8gMyA6ICggYnV0
dG9uICYgNCA/IDIgOiAwICkgKSApOwoJCQl9CgoJCQlyZXR1cm4gZXZlbnQ7CgkJ
fQoJfSwKCglmaXg6IGZ1bmN0aW9uKCBldmVudCApIHsKCQlpZiAoIGV2ZW50WyBq
UXVlcnkuZXhwYW5kbyBdICkgewoJCQlyZXR1cm4gZXZlbnQ7CgkJfQoKCQkvLyBD
cmVhdGUgYSB3cml0YWJsZSBjb3B5IG9mIHRoZSBldmVudCBvYmplY3QgYW5kIG5v
cm1hbGl6ZSBzb21lIHByb3BlcnRpZXMKCQl2YXIgaSwgcHJvcCwKCQkJb3JpZ2lu
YWxFdmVudCA9IGV2ZW50LAoJCQlmaXhIb29rID0galF1ZXJ5LmV2ZW50LmZpeEhv
b2tzWyBldmVudC50eXBlIF0gfHwge30sCgkJCWNvcHkgPSBmaXhIb29rLnByb3Bz
ID8gdGhpcy5wcm9wcy5jb25jYXQoIGZpeEhvb2sucHJvcHMgKSA6IHRoaXMucHJv
cHM7CgoJCWV2ZW50ID0galF1ZXJ5LkV2ZW50KCBvcmlnaW5hbEV2ZW50ICk7CgoJ
CWZvciAoIGkgPSBjb3B5Lmxlbmd0aDsgaTsgKSB7CgkJCXByb3AgPSBjb3B5WyAt
LWkgXTsKCQkJZXZlbnRbIHByb3AgXSA9IG9yaWdpbmFsRXZlbnRbIHByb3AgXTsK
CQl9CgoJCS8vIEZpeCB0YXJnZXQgcHJvcGVydHksIGlmIG5lY2Vzc2FyeSAoIzE5
MjUsIElFIDYvNy84ICYgU2FmYXJpMikKCQlpZiAoICFldmVudC50YXJnZXQgKSB7
CgkJCWV2ZW50LnRhcmdldCA9IG9yaWdpbmFsRXZlbnQuc3JjRWxlbWVudCB8fCBk
b2N1bWVudDsKCQl9CgoJCS8vIFRhcmdldCBzaG91bGQgbm90IGJlIGEgdGV4dCBu
b2RlICgjNTA0LCBTYWZhcmkpCgkJaWYgKCBldmVudC50YXJnZXQubm9kZVR5cGUg
PT09IDMgKSB7CgkJCWV2ZW50LnRhcmdldCA9IGV2ZW50LnRhcmdldC5wYXJlbnRO
b2RlOwoJCX0KCgkJLy8gRm9yIG1vdXNlL2tleSBldmVudHM7IGFkZCBtZXRhS2V5
IGlmIGl0J3Mgbm90IHRoZXJlICgjMzM2OCwgSUU2LzcvOCkKCQlpZiAoIGV2ZW50
Lm1ldGFLZXkgPT09IHVuZGVmaW5lZCApIHsKCQkJZXZlbnQubWV0YUtleSA9IGV2
ZW50LmN0cmxLZXk7CgkJfQoKCQlyZXR1cm4gZml4SG9vay5maWx0ZXI/IGZpeEhv
b2suZmlsdGVyKCBldmVudCwgb3JpZ2luYWxFdmVudCApIDogZXZlbnQ7Cgl9LAoK
CXNwZWNpYWw6IHsKCQlyZWFkeTogewoJCQkvLyBNYWtlIHN1cmUgdGhlIHJlYWR5
IGV2ZW50IGlzIHNldHVwCgkJCXNldHVwOiBqUXVlcnkuYmluZFJlYWR5CgkJfSwK
CgkJbG9hZDogewoJCQkvLyBQcmV2ZW50IHRyaWdnZXJlZCBpbWFnZS5sb2FkIGV2
ZW50cyBmcm9tIGJ1YmJsaW5nIHRvIHdpbmRvdy5sb2FkCgkJCW5vQnViYmxlOiB0
cnVlCgkJfSwKCgkJZm9jdXM6IHsKCQkJZGVsZWdhdGVUeXBlOiAiZm9jdXNpbiIK
CQl9LAoJCWJsdXI6IHsKCQkJZGVsZWdhdGVUeXBlOiAiZm9jdXNvdXQiCgkJfSwK
CgkJYmVmb3JldW5sb2FkOiB7CgkJCXNldHVwOiBmdW5jdGlvbiggZGF0YSwgbmFt
ZXNwYWNlcywgZXZlbnRIYW5kbGUgKSB7CgkJCQkvLyBXZSBvbmx5IHdhbnQgdG8g
ZG8gdGhpcyBzcGVjaWFsIGNhc2Ugb24gd2luZG93cwoJCQkJaWYgKCBqUXVlcnku
aXNXaW5kb3coIHRoaXMgKSApIHsKCQkJCQl0aGlzLm9uYmVmb3JldW5sb2FkID0g
ZXZlbnRIYW5kbGU7CgkJCQl9CgkJCX0sCgoJCQl0ZWFyZG93bjogZnVuY3Rpb24o
IG5hbWVzcGFjZXMsIGV2ZW50SGFuZGxlICkgewoJCQkJaWYgKCB0aGlzLm9uYmVm
b3JldW5sb2FkID09PSBldmVudEhhbmRsZSApIHsKCQkJCQl0aGlzLm9uYmVmb3Jl
dW5sb2FkID0gbnVsbDsKCQkJCX0KCQkJfQoJCX0KCX0sCgoJc2ltdWxhdGU6IGZ1
bmN0aW9uKCB0eXBlLCBlbGVtLCBldmVudCwgYnViYmxlICkgewoJCS8vIFBpZ2d5
YmFjayBvbiBhIGRvbm9yIGV2ZW50IHRvIHNpbXVsYXRlIGEgZGlmZmVyZW50IG9u
ZS4KCQkvLyBGYWtlIG9yaWdpbmFsRXZlbnQgdG8gYXZvaWQgZG9ub3IncyBzdG9w
UHJvcGFnYXRpb24sIGJ1dCBpZiB0aGUKCQkvLyBzaW11bGF0ZWQgZXZlbnQgcHJl
dmVudHMgZGVmYXVsdCB0aGVuIHdlIGRvIHRoZSBzYW1lIG9uIHRoZSBkb25vci4K
CQl2YXIgZSA9IGpRdWVyeS5leHRlbmQoCgkJCW5ldyBqUXVlcnkuRXZlbnQoKSwK
CQkJZXZlbnQsCgkJCXsgdHlwZTogdHlwZSwKCQkJCWlzU2ltdWxhdGVkOiB0cnVl
LAoJCQkJb3JpZ2luYWxFdmVudDoge30KCQkJfQoJCSk7CgkJaWYgKCBidWJibGUg
KSB7CgkJCWpRdWVyeS5ldmVudC50cmlnZ2VyKCBlLCBudWxsLCBlbGVtICk7CgkJ
fSBlbHNlIHsKCQkJalF1ZXJ5LmV2ZW50LmRpc3BhdGNoLmNhbGwoIGVsZW0sIGUg
KTsKCQl9CgkJaWYgKCBlLmlzRGVmYXVsdFByZXZlbnRlZCgpICkgewoJCQlldmVu
dC5wcmV2ZW50RGVmYXVsdCgpOwoJCX0KCX0KfTsKCi8vIFNvbWUgcGx1Z2lucyBh
cmUgdXNpbmcsIGJ1dCBpdCdzIHVuZG9jdW1lbnRlZC9kZXByZWNhdGVkIGFuZCB3
aWxsIGJlIHJlbW92ZWQuCi8vIFRoZSAxLjcgc3BlY2lhbCBldmVudCBpbnRlcmZh
Y2Ugc2hvdWxkIHByb3ZpZGUgYWxsIHRoZSBob29rcyBuZWVkZWQgbm93LgpqUXVl
cnkuZXZlbnQuaGFuZGxlID0galF1ZXJ5LmV2ZW50LmRpc3BhdGNoOwoKalF1ZXJ5
LnJlbW92ZUV2ZW50ID0gZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciA/Cglm
dW5jdGlvbiggZWxlbSwgdHlwZSwgaGFuZGxlICkgewoJCWlmICggZWxlbS5yZW1v
dmVFdmVudExpc3RlbmVyICkgewoJCQllbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIo
IHR5cGUsIGhhbmRsZSwgZmFsc2UgKTsKCQl9Cgl9IDoKCWZ1bmN0aW9uKCBlbGVt
LCB0eXBlLCBoYW5kbGUgKSB7CgkJaWYgKCBlbGVtLmRldGFjaEV2ZW50ICkgewoJ
CQllbGVtLmRldGFjaEV2ZW50KCAib24iICsgdHlwZSwgaGFuZGxlICk7CgkJfQoJ
fTsKCmpRdWVyeS5FdmVudCA9IGZ1bmN0aW9uKCBzcmMsIHByb3BzICkgewoJLy8g
QWxsb3cgaW5zdGFudGlhdGlvbiB3aXRob3V0IHRoZSAnbmV3JyBrZXl3b3JkCglp
ZiAoICEodGhpcyBpbnN0YW5jZW9mIGpRdWVyeS5FdmVudCkgKSB7CgkJcmV0dXJu
IG5ldyBqUXVlcnkuRXZlbnQoIHNyYywgcHJvcHMgKTsKCX0KCgkvLyBFdmVudCBv
YmplY3QKCWlmICggc3JjICYmIHNyYy50eXBlICkgewoJCXRoaXMub3JpZ2luYWxF
dmVudCA9IHNyYzsKCQl0aGlzLnR5cGUgPSBzcmMudHlwZTsKCgkJLy8gRXZlbnRz
IGJ1YmJsaW5nIHVwIHRoZSBkb2N1bWVudCBtYXkgaGF2ZSBiZWVuIG1hcmtlZCBh
cyBwcmV2ZW50ZWQKCQkvLyBieSBhIGhhbmRsZXIgbG93ZXIgZG93biB0aGUgdHJl
ZTsgcmVmbGVjdCB0aGUgY29ycmVjdCB2YWx1ZS4KCQl0aGlzLmlzRGVmYXVsdFBy
ZXZlbnRlZCA9ICggc3JjLmRlZmF1bHRQcmV2ZW50ZWQgfHwgc3JjLnJldHVyblZh
bHVlID09PSBmYWxzZSB8fAoJCQlzcmMuZ2V0UHJldmVudERlZmF1bHQgJiYgc3Jj
LmdldFByZXZlbnREZWZhdWx0KCkgKSA/IHJldHVyblRydWUgOiByZXR1cm5GYWxz
ZTsKCgkvLyBFdmVudCB0eXBlCgl9IGVsc2UgewoJCXRoaXMudHlwZSA9IHNyYzsK
CX0KCgkvLyBQdXQgZXhwbGljaXRseSBwcm92aWRlZCBwcm9wZXJ0aWVzIG9udG8g
dGhlIGV2ZW50IG9iamVjdAoJaWYgKCBwcm9wcyApIHsKCQlqUXVlcnkuZXh0ZW5k
KCB0aGlzLCBwcm9wcyApOwoJfQoKCS8vIENyZWF0ZSBhIHRpbWVzdGFtcCBpZiBp
bmNvbWluZyBldmVudCBkb2Vzbid0IGhhdmUgb25lCgl0aGlzLnRpbWVTdGFtcCA9
IHNyYyAmJiBzcmMudGltZVN0YW1wIHx8IGpRdWVyeS5ub3coKTsKCgkvLyBNYXJr
IGl0IGFzIGZpeGVkCgl0aGlzWyBqUXVlcnkuZXhwYW5kbyBdID0gdHJ1ZTsKfTsK
CmZ1bmN0aW9uIHJldHVybkZhbHNlKCkgewoJcmV0dXJuIGZhbHNlOwp9CmZ1bmN0
aW9uIHJldHVyblRydWUoKSB7CglyZXR1cm4gdHJ1ZTsKfQoKLy8galF1ZXJ5LkV2
ZW50IGlzIGJhc2VkIG9uIERPTTMgRXZlbnRzIGFzIHNwZWNpZmllZCBieSB0aGUg
RUNNQVNjcmlwdCBMYW5ndWFnZSBCaW5kaW5nCi8vIGh0dHA6Ly93d3cudzMub3Jn
L1RSLzIwMDMvV0QtRE9NLUxldmVsLTMtRXZlbnRzLTIwMDMwMzMxL2VjbWEtc2Ny
aXB0LWJpbmRpbmcuaHRtbApqUXVlcnkuRXZlbnQucHJvdG90eXBlID0gewoJcHJl
dmVudERlZmF1bHQ6IGZ1bmN0aW9uKCkgewoJCXRoaXMuaXNEZWZhdWx0UHJldmVu
dGVkID0gcmV0dXJuVHJ1ZTsKCgkJdmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7
CgkJaWYgKCAhZSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gaWYgcHJldmVudERl
ZmF1bHQgZXhpc3RzIHJ1biBpdCBvbiB0aGUgb3JpZ2luYWwgZXZlbnQKCQlpZiAo
IGUucHJldmVudERlZmF1bHQgKSB7CgkJCWUucHJldmVudERlZmF1bHQoKTsKCgkJ
Ly8gb3RoZXJ3aXNlIHNldCB0aGUgcmV0dXJuVmFsdWUgcHJvcGVydHkgb2YgdGhl
IG9yaWdpbmFsIGV2ZW50IHRvIGZhbHNlIChJRSkKCQl9IGVsc2UgewoJCQllLnJl
dHVyblZhbHVlID0gZmFsc2U7CgkJfQoJfSwKCXN0b3BQcm9wYWdhdGlvbjogZnVu
Y3Rpb24oKSB7CgkJdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZCA9IHJldHVyblRy
dWU7CgoJCXZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50OwoJCWlmICggIWUgKSB7
CgkJCXJldHVybjsKCQl9CgkJLy8gaWYgc3RvcFByb3BhZ2F0aW9uIGV4aXN0cyBy
dW4gaXQgb24gdGhlIG9yaWdpbmFsIGV2ZW50CgkJaWYgKCBlLnN0b3BQcm9wYWdh
dGlvbiApIHsKCQkJZS5zdG9wUHJvcGFnYXRpb24oKTsKCQl9CgkJLy8gb3RoZXJ3
aXNlIHNldCB0aGUgY2FuY2VsQnViYmxlIHByb3BlcnR5IG9mIHRoZSBvcmlnaW5h
bCBldmVudCB0byB0cnVlIChJRSkKCQllLmNhbmNlbEJ1YmJsZSA9IHRydWU7Cgl9
LAoJc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHsKCQl0aGlz
LmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTsKCQl0
aGlzLnN0b3BQcm9wYWdhdGlvbigpOwoJfSwKCWlzRGVmYXVsdFByZXZlbnRlZDog
cmV0dXJuRmFsc2UsCglpc1Byb3BhZ2F0aW9uU3RvcHBlZDogcmV0dXJuRmFsc2Us
Cglpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZDogcmV0dXJuRmFsc2UKfTsK
Ci8vIENyZWF0ZSBtb3VzZWVudGVyL2xlYXZlIGV2ZW50cyB1c2luZyBtb3VzZW92
ZXIvb3V0IGFuZCBldmVudC10aW1lIGNoZWNrcwpqUXVlcnkuZWFjaCh7Cgltb3Vz
ZWVudGVyOiAibW91c2VvdmVyIiwKCW1vdXNlbGVhdmU6ICJtb3VzZW91dCIKfSwg
ZnVuY3Rpb24oIG9yaWcsIGZpeCApIHsKCWpRdWVyeS5ldmVudC5zcGVjaWFsWyBv
cmlnIF0gPSB7CgkJZGVsZWdhdGVUeXBlOiBmaXgsCgkJYmluZFR5cGU6IGZpeCwK
CgkJaGFuZGxlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCXZhciB0YXJnZXQgPSB0
aGlzLAoJCQkJcmVsYXRlZCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQsCgkJCQloYW5k
bGVPYmogPSBldmVudC5oYW5kbGVPYmosCgkJCQlzZWxlY3RvciA9IGhhbmRsZU9i
ai5zZWxlY3RvciwKCQkJCXJldDsKCgkJCS8vIEZvciBtb3VzZW50ZXIvbGVhdmUg
Y2FsbCB0aGUgaGFuZGxlciBpZiByZWxhdGVkIGlzIG91dHNpZGUgdGhlIHRhcmdl
dC4KCQkJLy8gTkI6IE5vIHJlbGF0ZWRUYXJnZXQgaWYgdGhlIG1vdXNlIGxlZnQv
ZW50ZXJlZCB0aGUgYnJvd3NlciB3aW5kb3cKCQkJaWYgKCAhcmVsYXRlZCB8fCAo
cmVsYXRlZCAhPT0gdGFyZ2V0ICYmICFqUXVlcnkuY29udGFpbnMoIHRhcmdldCwg
cmVsYXRlZCApKSApIHsKCQkJCWV2ZW50LnR5cGUgPSBoYW5kbGVPYmoub3JpZ1R5
cGU7CgkJCQlyZXQgPSBoYW5kbGVPYmouaGFuZGxlci5hcHBseSggdGhpcywgYXJn
dW1lbnRzICk7CgkJCQlldmVudC50eXBlID0gZml4OwoJCQl9CgkJCXJldHVybiBy
ZXQ7CgkJfQoJfTsKfSk7CgovLyBJRSBzdWJtaXQgZGVsZWdhdGlvbgppZiAoICFq
UXVlcnkuc3VwcG9ydC5zdWJtaXRCdWJibGVzICkgewoKCWpRdWVyeS5ldmVudC5z
cGVjaWFsLnN1Ym1pdCA9IHsKCQlzZXR1cDogZnVuY3Rpb24oKSB7CgkJCS8vIE9u
bHkgbmVlZCB0aGlzIGZvciBkZWxlZ2F0ZWQgZm9ybSBzdWJtaXQgZXZlbnRzCgkJ
CWlmICggalF1ZXJ5Lm5vZGVOYW1lKCB0aGlzLCAiZm9ybSIgKSApIHsKCQkJCXJl
dHVybiBmYWxzZTsKCQkJfQoKCQkJLy8gTGF6eS1hZGQgYSBzdWJtaXQgaGFuZGxl
ciB3aGVuIGEgZGVzY2VuZGFudCBmb3JtIG1heSBwb3RlbnRpYWxseSBiZSBzdWJt
aXR0ZWQKCQkJalF1ZXJ5LmV2ZW50LmFkZCggdGhpcywgImNsaWNrLl9zdWJtaXQg
a2V5cHJlc3MuX3N1Ym1pdCIsIGZ1bmN0aW9uKCBlICkgewoJCQkJLy8gTm9kZSBu
YW1lIGNoZWNrIGF2b2lkcyBhIFZNTC1yZWxhdGVkIGNyYXNoIGluIElFICgjOTgw
NykKCQkJCXZhciBlbGVtID0gZS50YXJnZXQsCgkJCQkJZm9ybSA9IGpRdWVyeS5u
b2RlTmFtZSggZWxlbSwgImlucHV0IiApIHx8IGpRdWVyeS5ub2RlTmFtZSggZWxl
bSwgImJ1dHRvbiIgKSA/IGVsZW0uZm9ybSA6IHVuZGVmaW5lZDsKCQkJCWlmICgg
Zm9ybSAmJiAhZm9ybS5fc3VibWl0X2F0dGFjaGVkICkgewoJCQkJCWpRdWVyeS5l
dmVudC5hZGQoIGZvcm0sICJzdWJtaXQuX3N1Ym1pdCIsIGZ1bmN0aW9uKCBldmVu
dCApIHsKCQkJCQkJZXZlbnQuX3N1Ym1pdF9idWJibGUgPSB0cnVlOwoJCQkJCX0p
OwoJCQkJCWZvcm0uX3N1Ym1pdF9hdHRhY2hlZCA9IHRydWU7CgkJCQl9CgkJCX0p
OwoJCQkvLyByZXR1cm4gdW5kZWZpbmVkIHNpbmNlIHdlIGRvbid0IG5lZWQgYW4g
ZXZlbnQgbGlzdGVuZXIKCQl9LAoJCQoJCXBvc3REaXNwYXRjaDogZnVuY3Rpb24o
IGV2ZW50ICkgewoJCQkvLyBJZiBmb3JtIHdhcyBzdWJtaXR0ZWQgYnkgdGhlIHVz
ZXIsIGJ1YmJsZSB0aGUgZXZlbnQgdXAgdGhlIHRyZWUKCQkJaWYgKCBldmVudC5f
c3VibWl0X2J1YmJsZSApIHsKCQkJCWRlbGV0ZSBldmVudC5fc3VibWl0X2J1YmJs
ZTsKCQkJCWlmICggdGhpcy5wYXJlbnROb2RlICYmICFldmVudC5pc1RyaWdnZXIg
KSB7CgkJCQkJalF1ZXJ5LmV2ZW50LnNpbXVsYXRlKCAic3VibWl0IiwgdGhpcy5w
YXJlbnROb2RlLCBldmVudCwgdHJ1ZSApOwoJCQkJfQoJCQl9CgkJfSwKCgkJdGVh
cmRvd246IGZ1bmN0aW9uKCkgewoJCQkvLyBPbmx5IG5lZWQgdGhpcyBmb3IgZGVs
ZWdhdGVkIGZvcm0gc3VibWl0IGV2ZW50cwoJCQlpZiAoIGpRdWVyeS5ub2RlTmFt
ZSggdGhpcywgImZvcm0iICkgKSB7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCgkJ
CS8vIFJlbW92ZSBkZWxlZ2F0ZWQgaGFuZGxlcnM7IGNsZWFuRGF0YSBldmVudHVh
bGx5IHJlYXBzIHN1Ym1pdCBoYW5kbGVycyBhdHRhY2hlZCBhYm92ZQoJCQlqUXVl
cnkuZXZlbnQucmVtb3ZlKCB0aGlzLCAiLl9zdWJtaXQiICk7CgkJfQoJfTsKfQoK
Ly8gSUUgY2hhbmdlIGRlbGVnYXRpb24gYW5kIGNoZWNrYm94L3JhZGlvIGZpeApp
ZiAoICFqUXVlcnkuc3VwcG9ydC5jaGFuZ2VCdWJibGVzICkgewoKCWpRdWVyeS5l
dmVudC5zcGVjaWFsLmNoYW5nZSA9IHsKCgkJc2V0dXA6IGZ1bmN0aW9uKCkgewoK
CQkJaWYgKCByZm9ybUVsZW1zLnRlc3QoIHRoaXMubm9kZU5hbWUgKSApIHsKCQkJ
CS8vIElFIGRvZXNuJ3QgZmlyZSBjaGFuZ2Ugb24gYSBjaGVjay9yYWRpbyB1bnRp
bCBibHVyOyB0cmlnZ2VyIGl0IG9uIGNsaWNrCgkJCQkvLyBhZnRlciBhIHByb3Bl
cnR5Y2hhbmdlLiBFYXQgdGhlIGJsdXItY2hhbmdlIGluIHNwZWNpYWwuY2hhbmdl
LmhhbmRsZS4KCQkJCS8vIFRoaXMgc3RpbGwgZmlyZXMgb25jaGFuZ2UgYSBzZWNv
bmQgdGltZSBmb3IgY2hlY2svcmFkaW8gYWZ0ZXIgYmx1ci4KCQkJCWlmICggdGhp
cy50eXBlID09PSAiY2hlY2tib3giIHx8IHRoaXMudHlwZSA9PT0gInJhZGlvIiAp
IHsKCQkJCQlqUXVlcnkuZXZlbnQuYWRkKCB0aGlzLCAicHJvcGVydHljaGFuZ2Uu
X2NoYW5nZSIsIGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCQkJaWYgKCBldmVudC5v
cmlnaW5hbEV2ZW50LnByb3BlcnR5TmFtZSA9PT0gImNoZWNrZWQiICkgewoJCQkJ
CQkJdGhpcy5fanVzdF9jaGFuZ2VkID0gdHJ1ZTsKCQkJCQkJfQoJCQkJCX0pOwoJ
CQkJCWpRdWVyeS5ldmVudC5hZGQoIHRoaXMsICJjbGljay5fY2hhbmdlIiwgZnVu
Y3Rpb24oIGV2ZW50ICkgewoJCQkJCQlpZiAoIHRoaXMuX2p1c3RfY2hhbmdlZCAm
JiAhZXZlbnQuaXNUcmlnZ2VyICkgewoJCQkJCQkJdGhpcy5fanVzdF9jaGFuZ2Vk
ID0gZmFsc2U7CgkJCQkJCQlqUXVlcnkuZXZlbnQuc2ltdWxhdGUoICJjaGFuZ2Ui
LCB0aGlzLCBldmVudCwgdHJ1ZSApOwoJCQkJCQl9CgkJCQkJfSk7CgkJCQl9CgkJ
CQlyZXR1cm4gZmFsc2U7CgkJCX0KCQkJLy8gRGVsZWdhdGVkIGV2ZW50OyBsYXp5
LWFkZCBhIGNoYW5nZSBoYW5kbGVyIG9uIGRlc2NlbmRhbnQgaW5wdXRzCgkJCWpR
dWVyeS5ldmVudC5hZGQoIHRoaXMsICJiZWZvcmVhY3RpdmF0ZS5fY2hhbmdlIiwg
ZnVuY3Rpb24oIGUgKSB7CgkJCQl2YXIgZWxlbSA9IGUudGFyZ2V0OwoKCQkJCWlm
ICggcmZvcm1FbGVtcy50ZXN0KCBlbGVtLm5vZGVOYW1lICkgJiYgIWVsZW0uX2No
YW5nZV9hdHRhY2hlZCApIHsKCQkJCQlqUXVlcnkuZXZlbnQuYWRkKCBlbGVtLCAi
Y2hhbmdlLl9jaGFuZ2UiLCBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQkJCWlmICgg
dGhpcy5wYXJlbnROb2RlICYmICFldmVudC5pc1NpbXVsYXRlZCAmJiAhZXZlbnQu
aXNUcmlnZ2VyICkgewoJCQkJCQkJalF1ZXJ5LmV2ZW50LnNpbXVsYXRlKCAiY2hh
bmdlIiwgdGhpcy5wYXJlbnROb2RlLCBldmVudCwgdHJ1ZSApOwoJCQkJCQl9CgkJ
CQkJfSk7CgkJCQkJZWxlbS5fY2hhbmdlX2F0dGFjaGVkID0gdHJ1ZTsKCQkJCX0K
CQkJfSk7CgkJfSwKCgkJaGFuZGxlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCXZh
ciBlbGVtID0gZXZlbnQudGFyZ2V0OwoKCQkJLy8gU3dhbGxvdyBuYXRpdmUgY2hh
bmdlIGV2ZW50cyBmcm9tIGNoZWNrYm94L3JhZGlvLCB3ZSBhbHJlYWR5IHRyaWdn
ZXJlZCB0aGVtIGFib3ZlCgkJCWlmICggdGhpcyAhPT0gZWxlbSB8fCBldmVudC5p
c1NpbXVsYXRlZCB8fCBldmVudC5pc1RyaWdnZXIgfHwgKGVsZW0udHlwZSAhPT0g
InJhZGlvIiAmJiBlbGVtLnR5cGUgIT09ICJjaGVja2JveCIpICkgewoJCQkJcmV0
dXJuIGV2ZW50LmhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KCB0aGlzLCBhcmd1bWVu
dHMgKTsKCQkJfQoJCX0sCgoJCXRlYXJkb3duOiBmdW5jdGlvbigpIHsKCQkJalF1
ZXJ5LmV2ZW50LnJlbW92ZSggdGhpcywgIi5fY2hhbmdlIiApOwoKCQkJcmV0dXJu
IHJmb3JtRWxlbXMudGVzdCggdGhpcy5ub2RlTmFtZSApOwoJCX0KCX07Cn0KCi8v
IENyZWF0ZSAiYnViYmxpbmciIGZvY3VzIGFuZCBibHVyIGV2ZW50cwppZiAoICFq
UXVlcnkuc3VwcG9ydC5mb2N1c2luQnViYmxlcyApIHsKCWpRdWVyeS5lYWNoKHsg
Zm9jdXM6ICJmb2N1c2luIiwgYmx1cjogImZvY3Vzb3V0IiB9LCBmdW5jdGlvbigg
b3JpZywgZml4ICkgewoKCQkvLyBBdHRhY2ggYSBzaW5nbGUgY2FwdHVyaW5nIGhh
bmRsZXIgd2hpbGUgc29tZW9uZSB3YW50cyBmb2N1c2luL2ZvY3Vzb3V0CgkJdmFy
IGF0dGFjaGVzID0gMCwKCQkJaGFuZGxlciA9IGZ1bmN0aW9uKCBldmVudCApIHsK
CQkJCWpRdWVyeS5ldmVudC5zaW11bGF0ZSggZml4LCBldmVudC50YXJnZXQsIGpR
dWVyeS5ldmVudC5maXgoIGV2ZW50ICksIHRydWUgKTsKCQkJfTsKCgkJalF1ZXJ5
LmV2ZW50LnNwZWNpYWxbIGZpeCBdID0gewoJCQlzZXR1cDogZnVuY3Rpb24oKSB7
CgkJCQlpZiAoIGF0dGFjaGVzKysgPT09IDAgKSB7CgkJCQkJZG9jdW1lbnQuYWRk
RXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApOwoJCQkJfQoJCQl9
LAoJCQl0ZWFyZG93bjogZnVuY3Rpb24oKSB7CgkJCQlpZiAoIC0tYXR0YWNoZXMg
PT09IDAgKSB7CgkJCQkJZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciggb3Jp
ZywgaGFuZGxlciwgdHJ1ZSApOwoJCQkJfQoJCQl9CgkJfTsKCX0pOwp9CgpqUXVl
cnkuZm4uZXh0ZW5kKHsKCglvbjogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3Rvciwg
ZGF0YSwgZm4sIC8qSU5URVJOQUwqLyBvbmUgKSB7CgkJdmFyIG9yaWdGbiwgdHlw
ZTsKCgkJLy8gVHlwZXMgY2FuIGJlIGEgbWFwIG9mIHR5cGVzL2hhbmRsZXJzCgkJ
aWYgKCB0eXBlb2YgdHlwZXMgPT09ICJvYmplY3QiICkgewoJCQkvLyAoIHR5cGVz
LU9iamVjdCwgc2VsZWN0b3IsIGRhdGEgKQoJCQlpZiAoIHR5cGVvZiBzZWxlY3Rv
ciAhPT0gInN0cmluZyIgKSB7IC8vICYmIHNlbGVjdG9yICE9IG51bGwKCQkJCS8v
ICggdHlwZXMtT2JqZWN0LCBkYXRhICkKCQkJCWRhdGEgPSBkYXRhIHx8IHNlbGVj
dG9yOwoJCQkJc2VsZWN0b3IgPSB1bmRlZmluZWQ7CgkJCX0KCQkJZm9yICggdHlw
ZSBpbiB0eXBlcyApIHsKCQkJCXRoaXMub24oIHR5cGUsIHNlbGVjdG9yLCBkYXRh
LCB0eXBlc1sgdHlwZSBdLCBvbmUgKTsKCQkJfQoJCQlyZXR1cm4gdGhpczsKCQl9
CgoJCWlmICggZGF0YSA9PSBudWxsICYmIGZuID09IG51bGwgKSB7CgkJCS8vICgg
dHlwZXMsIGZuICkKCQkJZm4gPSBzZWxlY3RvcjsKCQkJZGF0YSA9IHNlbGVjdG9y
ID0gdW5kZWZpbmVkOwoJCX0gZWxzZSBpZiAoIGZuID09IG51bGwgKSB7CgkJCWlm
ICggdHlwZW9mIHNlbGVjdG9yID09PSAic3RyaW5nIiApIHsKCQkJCS8vICggdHlw
ZXMsIHNlbGVjdG9yLCBmbiApCgkJCQlmbiA9IGRhdGE7CgkJCQlkYXRhID0gdW5k
ZWZpbmVkOwoJCQl9IGVsc2UgewoJCQkJLy8gKCB0eXBlcywgZGF0YSwgZm4gKQoJ
CQkJZm4gPSBkYXRhOwoJCQkJZGF0YSA9IHNlbGVjdG9yOwoJCQkJc2VsZWN0b3Ig
PSB1bmRlZmluZWQ7CgkJCX0KCQl9CgkJaWYgKCBmbiA9PT0gZmFsc2UgKSB7CgkJ
CWZuID0gcmV0dXJuRmFsc2U7CgkJfSBlbHNlIGlmICggIWZuICkgewoJCQlyZXR1
cm4gdGhpczsKCQl9CgoJCWlmICggb25lID09PSAxICkgewoJCQlvcmlnRm4gPSBm
bjsKCQkJZm4gPSBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQkvLyBDYW4gdXNlIGFu
IGVtcHR5IHNldCwgc2luY2UgZXZlbnQgY29udGFpbnMgdGhlIGluZm8KCQkJCWpR
dWVyeSgpLm9mZiggZXZlbnQgKTsKCQkJCXJldHVybiBvcmlnRm4uYXBwbHkoIHRo
aXMsIGFyZ3VtZW50cyApOwoJCQl9OwoJCQkvLyBVc2Ugc2FtZSBndWlkIHNvIGNh
bGxlciBjYW4gcmVtb3ZlIHVzaW5nIG9yaWdGbgoJCQlmbi5ndWlkID0gb3JpZ0Zu
Lmd1aWQgfHwgKCBvcmlnRm4uZ3VpZCA9IGpRdWVyeS5ndWlkKysgKTsKCQl9CgkJ
cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCWpRdWVyeS5ldmVudC5h
ZGQoIHRoaXMsIHR5cGVzLCBmbiwgZGF0YSwgc2VsZWN0b3IgKTsKCQl9KTsKCX0s
CglvbmU6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkgewoJ
CXJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCAxICk7
Cgl9LAoJb2ZmOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBmbiApIHsKCQlp
ZiAoIHR5cGVzICYmIHR5cGVzLnByZXZlbnREZWZhdWx0ICYmIHR5cGVzLmhhbmRs
ZU9iaiApIHsKCQkJLy8gKCBldmVudCApICBkaXNwYXRjaGVkIGpRdWVyeS5FdmVu
dAoJCQl2YXIgaGFuZGxlT2JqID0gdHlwZXMuaGFuZGxlT2JqOwoJCQlqUXVlcnko
IHR5cGVzLmRlbGVnYXRlVGFyZ2V0ICkub2ZmKAoJCQkJaGFuZGxlT2JqLm5hbWVz
cGFjZSA/IGhhbmRsZU9iai5vcmlnVHlwZSArICIuIiArIGhhbmRsZU9iai5uYW1l
c3BhY2UgOiBoYW5kbGVPYmoub3JpZ1R5cGUsCgkJCQloYW5kbGVPYmouc2VsZWN0
b3IsCgkJCQloYW5kbGVPYmouaGFuZGxlcgoJCQkpOwoJCQlyZXR1cm4gdGhpczsK
CQl9CgkJaWYgKCB0eXBlb2YgdHlwZXMgPT09ICJvYmplY3QiICkgewoJCQkvLyAo
IHR5cGVzLW9iamVjdCBbLCBzZWxlY3Rvcl0gKQoJCQlmb3IgKCB2YXIgdHlwZSBp
biB0eXBlcyApIHsKCQkJCXRoaXMub2ZmKCB0eXBlLCBzZWxlY3RvciwgdHlwZXNb
IHR5cGUgXSApOwoJCQl9CgkJCXJldHVybiB0aGlzOwoJCX0KCQlpZiAoIHNlbGVj
dG9yID09PSBmYWxzZSB8fCB0eXBlb2Ygc2VsZWN0b3IgPT09ICJmdW5jdGlvbiIg
KSB7CgkJCS8vICggdHlwZXMgWywgZm5dICkKCQkJZm4gPSBzZWxlY3RvcjsKCQkJ
c2VsZWN0b3IgPSB1bmRlZmluZWQ7CgkJfQoJCWlmICggZm4gPT09IGZhbHNlICkg
ewoJCQlmbiA9IHJldHVybkZhbHNlOwoJCX0KCQlyZXR1cm4gdGhpcy5lYWNoKGZ1
bmN0aW9uKCkgewoJCQlqUXVlcnkuZXZlbnQucmVtb3ZlKCB0aGlzLCB0eXBlcywg
Zm4sIHNlbGVjdG9yICk7CgkJfSk7Cgl9LAoKCWJpbmQ6IGZ1bmN0aW9uKCB0eXBl
cywgZGF0YSwgZm4gKSB7CgkJcmV0dXJuIHRoaXMub24oIHR5cGVzLCBudWxsLCBk
YXRhLCBmbiApOwoJfSwKCXVuYmluZDogZnVuY3Rpb24oIHR5cGVzLCBmbiApIHsK
CQlyZXR1cm4gdGhpcy5vZmYoIHR5cGVzLCBudWxsLCBmbiApOwoJfSwKCglsaXZl
OiBmdW5jdGlvbiggdHlwZXMsIGRhdGEsIGZuICkgewoJCWpRdWVyeSggdGhpcy5j
b250ZXh0ICkub24oIHR5cGVzLCB0aGlzLnNlbGVjdG9yLCBkYXRhLCBmbiApOwoJ
CXJldHVybiB0aGlzOwoJfSwKCWRpZTogZnVuY3Rpb24oIHR5cGVzLCBmbiApIHsK
CQlqUXVlcnkoIHRoaXMuY29udGV4dCApLm9mZiggdHlwZXMsIHRoaXMuc2VsZWN0
b3IgfHwgIioqIiwgZm4gKTsKCQlyZXR1cm4gdGhpczsKCX0sCgoJZGVsZWdhdGU6
IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGRhdGEsIGZuICkgewoJCXJldHVy
biB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7Cgl9LAoJdW5k
ZWxlZ2F0ZTogZnVuY3Rpb24oIHNlbGVjdG9yLCB0eXBlcywgZm4gKSB7CgkJLy8g
KCBuYW1lc3BhY2UgKSBvciAoIHNlbGVjdG9yLCB0eXBlcyBbLCBmbl0gKQoJCXJl
dHVybiBhcmd1bWVudHMubGVuZ3RoID09IDE/IHRoaXMub2ZmKCBzZWxlY3Rvciwg
IioqIiApIDogdGhpcy5vZmYoIHR5cGVzLCBzZWxlY3RvciwgZm4gKTsKCX0sCgoJ
dHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7CgkJcmV0dXJuIHRoaXMu
ZWFjaChmdW5jdGlvbigpIHsKCQkJalF1ZXJ5LmV2ZW50LnRyaWdnZXIoIHR5cGUs
IGRhdGEsIHRoaXMgKTsKCQl9KTsKCX0sCgl0cmlnZ2VySGFuZGxlcjogZnVuY3Rp
b24oIHR5cGUsIGRhdGEgKSB7CgkJaWYgKCB0aGlzWzBdICkgewoJCQlyZXR1cm4g
alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIHR5cGUsIGRhdGEsIHRoaXNbMF0sIHRydWUg
KTsKCQl9Cgl9LAoKCXRvZ2dsZTogZnVuY3Rpb24oIGZuICkgewoJCS8vIFNhdmUg
cmVmZXJlbmNlIHRvIGFyZ3VtZW50cyBmb3IgYWNjZXNzIGluIGNsb3N1cmUKCQl2
YXIgYXJncyA9IGFyZ3VtZW50cywKCQkJZ3VpZCA9IGZuLmd1aWQgfHwgalF1ZXJ5
Lmd1aWQrKywKCQkJaSA9IDAsCgkJCXRvZ2dsZXIgPSBmdW5jdGlvbiggZXZlbnQg
KSB7CgkJCQkvLyBGaWd1cmUgb3V0IHdoaWNoIGZ1bmN0aW9uIHRvIGV4ZWN1dGUK
CQkJCXZhciBsYXN0VG9nZ2xlID0gKCBqUXVlcnkuX2RhdGEoIHRoaXMsICJsYXN0
VG9nZ2xlIiArIGZuLmd1aWQgKSB8fCAwICkgJSBpOwoJCQkJalF1ZXJ5Ll9kYXRh
KCB0aGlzLCAibGFzdFRvZ2dsZSIgKyBmbi5ndWlkLCBsYXN0VG9nZ2xlICsgMSAp
OwoKCQkJCS8vIE1ha2Ugc3VyZSB0aGF0IGNsaWNrcyBzdG9wCgkJCQlldmVudC5w
cmV2ZW50RGVmYXVsdCgpOwoKCQkJCS8vIGFuZCBleGVjdXRlIHRoZSBmdW5jdGlv
bgoJCQkJcmV0dXJuIGFyZ3NbIGxhc3RUb2dnbGUgXS5hcHBseSggdGhpcywgYXJn
dW1lbnRzICkgfHwgZmFsc2U7CgkJCX07CgoJCS8vIGxpbmsgYWxsIHRoZSBmdW5j
dGlvbnMsIHNvIGFueSBvZiB0aGVtIGNhbiB1bmJpbmQgdGhpcyBjbGljayBoYW5k
bGVyCgkJdG9nZ2xlci5ndWlkID0gZ3VpZDsKCQl3aGlsZSAoIGkgPCBhcmdzLmxl
bmd0aCApIHsKCQkJYXJnc1sgaSsrIF0uZ3VpZCA9IGd1aWQ7CgkJfQoKCQlyZXR1
cm4gdGhpcy5jbGljayggdG9nZ2xlciApOwoJfSwKCglob3ZlcjogZnVuY3Rpb24o
IGZuT3ZlciwgZm5PdXQgKSB7CgkJcmV0dXJuIHRoaXMubW91c2VlbnRlciggZm5P
dmVyICkubW91c2VsZWF2ZSggZm5PdXQgfHwgZm5PdmVyICk7Cgl9Cn0pOwoKalF1
ZXJ5LmVhY2goICgiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IGxvYWQgcmVz
aXplIHNjcm9sbCB1bmxvYWQgY2xpY2sgZGJsY2xpY2sgIiArCgkibW91c2Vkb3du
IG1vdXNldXAgbW91c2Vtb3ZlIG1vdXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVy
IG1vdXNlbGVhdmUgIiArCgkiY2hhbmdlIHNlbGVjdCBzdWJtaXQga2V5ZG93biBr
ZXlwcmVzcyBrZXl1cCBlcnJvciBjb250ZXh0bWVudSIpLnNwbGl0KCIgIiksIGZ1
bmN0aW9uKCBpLCBuYW1lICkgewoKCS8vIEhhbmRsZSBldmVudCBiaW5kaW5nCglq
UXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBkYXRhLCBmbiApIHsKCQlpZiAo
IGZuID09IG51bGwgKSB7CgkJCWZuID0gZGF0YTsKCQkJZGF0YSA9IG51bGw7CgkJ
fQoKCQlyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDAgPwoJCQl0aGlzLm9uKCBu
YW1lLCBudWxsLCBkYXRhLCBmbiApIDoKCQkJdGhpcy50cmlnZ2VyKCBuYW1lICk7
Cgl9OwoKCWlmICggalF1ZXJ5LmF0dHJGbiApIHsKCQlqUXVlcnkuYXR0ckZuWyBu
YW1lIF0gPSB0cnVlOwoJfQoKCWlmICggcmtleUV2ZW50LnRlc3QoIG5hbWUgKSAp
IHsKCQlqUXVlcnkuZXZlbnQuZml4SG9va3NbIG5hbWUgXSA9IGpRdWVyeS5ldmVu
dC5rZXlIb29rczsKCX0KCglpZiAoIHJtb3VzZUV2ZW50LnRlc3QoIG5hbWUgKSAp
IHsKCQlqUXVlcnkuZXZlbnQuZml4SG9va3NbIG5hbWUgXSA9IGpRdWVyeS5ldmVu
dC5tb3VzZUhvb2tzOwoJfQp9KTsKCgoKLyohCiAqIFNpenpsZSBDU1MgU2VsZWN0
b3IgRW5naW5lCiAqICBDb3B5cmlnaHQgMjAxMSwgVGhlIERvam8gRm91bmRhdGlv
bgogKiAgUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCwgQlNELCBhbmQgR1BMIExpY2Vu
c2VzLgogKiAgTW9yZSBpbmZvcm1hdGlvbjogaHR0cDovL3NpenpsZWpzLmNvbS8K
ICovCihmdW5jdGlvbigpewoKdmFyIGNodW5rZXIgPSAvKCg/OlwoKD86XChbXigp
XStcKXxbXigpXSspK1wpfFxbKD86XFtbXlxbXF1dKlxdfFsnIl1bXiciXSpbJyJd
fFteXFtcXSciXSspK1xdfFxcLnxbXiA+K34sKFxbXFxdKykrfFs+K35dKShccyos
XHMqKT8oKD86LnxccnxcbikqKS9nLAoJZXhwYW5kbyA9ICJzaXpjYWNoZSIgKyAo
TWF0aC5yYW5kb20oKSArICcnKS5yZXBsYWNlKCcuJywgJycpLAoJZG9uZSA9IDAs
Cgl0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsCgloYXNEdXBs
aWNhdGUgPSBmYWxzZSwKCWJhc2VIYXNEdXBsaWNhdGUgPSB0cnVlLAoJckJhY2tz
bGFzaCA9IC9cXC9nLAoJclJldHVybiA9IC9cclxuL2csCglyTm9uV29yZCA9IC9c
Vy87CgovLyBIZXJlIHdlIGNoZWNrIGlmIHRoZSBKYXZhU2NyaXB0IGVuZ2luZSBp
cyB1c2luZyBzb21lIHNvcnQgb2YKLy8gb3B0aW1pemF0aW9uIHdoZXJlIGl0IGRv
ZXMgbm90IGFsd2F5cyBjYWxsIG91ciBjb21wYXJpc2lvbgovLyBmdW5jdGlvbi4g
SWYgdGhhdCBpcyB0aGUgY2FzZSwgZGlzY2FyZCB0aGUgaGFzRHVwbGljYXRlIHZh
bHVlLgovLyAgIFRodXMgZmFyIHRoYXQgaW5jbHVkZXMgR29vZ2xlIENocm9tZS4K
WzAsIDBdLnNvcnQoZnVuY3Rpb24oKSB7CgliYXNlSGFzRHVwbGljYXRlID0gZmFs
c2U7CglyZXR1cm4gMDsKfSk7Cgp2YXIgU2l6emxlID0gZnVuY3Rpb24oIHNlbGVj
dG9yLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICkgewoJcmVzdWx0cyA9IHJlc3Vs
dHMgfHwgW107Cgljb250ZXh0ID0gY29udGV4dCB8fCBkb2N1bWVudDsKCgl2YXIg
b3JpZ0NvbnRleHQgPSBjb250ZXh0OwoKCWlmICggY29udGV4dC5ub2RlVHlwZSAh
PT0gMSAmJiBjb250ZXh0Lm5vZGVUeXBlICE9PSA5ICkgewoJCXJldHVybiBbXTsK
CX0KCglpZiAoICFzZWxlY3RvciB8fCB0eXBlb2Ygc2VsZWN0b3IgIT09ICJzdHJp
bmciICkgewoJCXJldHVybiByZXN1bHRzOwoJfQoKCXZhciBtLCBzZXQsIGNoZWNr
U2V0LCBleHRyYSwgcmV0LCBjdXIsIHBvcCwgaSwKCQlwcnVuZSA9IHRydWUsCgkJ
Y29udGV4dFhNTCA9IFNpenpsZS5pc1hNTCggY29udGV4dCApLAoJCXBhcnRzID0g
W10sCgkJc29GYXIgPSBzZWxlY3RvcjsKCgkvLyBSZXNldCB0aGUgcG9zaXRpb24g
b2YgdGhlIGNodW5rZXIgcmVnZXhwIChzdGFydCBmcm9tIGhlYWQpCglkbyB7CgkJ
Y2h1bmtlci5leGVjKCAiIiApOwoJCW0gPSBjaHVua2VyLmV4ZWMoIHNvRmFyICk7
CgoJCWlmICggbSApIHsKCQkJc29GYXIgPSBtWzNdOwoKCQkJcGFydHMucHVzaCgg
bVsxXSApOwoKCQkJaWYgKCBtWzJdICkgewoJCQkJZXh0cmEgPSBtWzNdOwoJCQkJ
YnJlYWs7CgkJCX0KCQl9Cgl9IHdoaWxlICggbSApOwoKCWlmICggcGFydHMubGVu
Z3RoID4gMSAmJiBvcmlnUE9TLmV4ZWMoIHNlbGVjdG9yICkgKSB7CgoJCWlmICgg
cGFydHMubGVuZ3RoID09PSAyICYmIEV4cHIucmVsYXRpdmVbIHBhcnRzWzBdIF0g
KSB7CgkJCXNldCA9IHBvc1Byb2Nlc3MoIHBhcnRzWzBdICsgcGFydHNbMV0sIGNv
bnRleHQsIHNlZWQgKTsKCgkJfSBlbHNlIHsKCQkJc2V0ID0gRXhwci5yZWxhdGl2
ZVsgcGFydHNbMF0gXSA/CgkJCQlbIGNvbnRleHQgXSA6CgkJCQlTaXp6bGUoIHBh
cnRzLnNoaWZ0KCksIGNvbnRleHQgKTsKCgkJCXdoaWxlICggcGFydHMubGVuZ3Ro
ICkgewoJCQkJc2VsZWN0b3IgPSBwYXJ0cy5zaGlmdCgpOwoKCQkJCWlmICggRXhw
ci5yZWxhdGl2ZVsgc2VsZWN0b3IgXSApIHsKCQkJCQlzZWxlY3RvciArPSBwYXJ0
cy5zaGlmdCgpOwoJCQkJfQoKCQkJCXNldCA9IHBvc1Byb2Nlc3MoIHNlbGVjdG9y
LCBzZXQsIHNlZWQgKTsKCQkJfQoJCX0KCgl9IGVsc2UgewoJCS8vIFRha2UgYSBz
aG9ydGN1dCBhbmQgc2V0IHRoZSBjb250ZXh0IGlmIHRoZSByb290IHNlbGVjdG9y
IGlzIGFuIElECgkJLy8gKGJ1dCBub3QgaWYgaXQnbGwgYmUgZmFzdGVyIGlmIHRo
ZSBpbm5lciBzZWxlY3RvciBpcyBhbiBJRCkKCQlpZiAoICFzZWVkICYmIHBhcnRz
Lmxlbmd0aCA+IDEgJiYgY29udGV4dC5ub2RlVHlwZSA9PT0gOSAmJiAhY29udGV4
dFhNTCAmJgoJCQkJRXhwci5tYXRjaC5JRC50ZXN0KHBhcnRzWzBdKSAmJiAhRXhw
ci5tYXRjaC5JRC50ZXN0KHBhcnRzW3BhcnRzLmxlbmd0aCAtIDFdKSApIHsKCgkJ
CXJldCA9IFNpenpsZS5maW5kKCBwYXJ0cy5zaGlmdCgpLCBjb250ZXh0LCBjb250
ZXh0WE1MICk7CgkJCWNvbnRleHQgPSByZXQuZXhwciA/CgkJCQlTaXp6bGUuZmls
dGVyKCByZXQuZXhwciwgcmV0LnNldCApWzBdIDoKCQkJCXJldC5zZXRbMF07CgkJ
fQoKCQlpZiAoIGNvbnRleHQgKSB7CgkJCXJldCA9IHNlZWQgPwoJCQkJeyBleHBy
OiBwYXJ0cy5wb3AoKSwgc2V0OiBtYWtlQXJyYXkoc2VlZCkgfSA6CgkJCQlTaXp6
bGUuZmluZCggcGFydHMucG9wKCksIHBhcnRzLmxlbmd0aCA9PT0gMSAmJiAocGFy
dHNbMF0gPT09ICJ+IiB8fCBwYXJ0c1swXSA9PT0gIisiKSAmJiBjb250ZXh0LnBh
cmVudE5vZGUgPyBjb250ZXh0LnBhcmVudE5vZGUgOiBjb250ZXh0LCBjb250ZXh0
WE1MICk7CgoJCQlzZXQgPSByZXQuZXhwciA/CgkJCQlTaXp6bGUuZmlsdGVyKCBy
ZXQuZXhwciwgcmV0LnNldCApIDoKCQkJCXJldC5zZXQ7CgoJCQlpZiAoIHBhcnRz
Lmxlbmd0aCA+IDAgKSB7CgkJCQljaGVja1NldCA9IG1ha2VBcnJheSggc2V0ICk7
CgoJCQl9IGVsc2UgewoJCQkJcHJ1bmUgPSBmYWxzZTsKCQkJfQoKCQkJd2hpbGUg
KCBwYXJ0cy5sZW5ndGggKSB7CgkJCQljdXIgPSBwYXJ0cy5wb3AoKTsKCQkJCXBv
cCA9IGN1cjsKCgkJCQlpZiAoICFFeHByLnJlbGF0aXZlWyBjdXIgXSApIHsKCQkJ
CQljdXIgPSAiIjsKCQkJCX0gZWxzZSB7CgkJCQkJcG9wID0gcGFydHMucG9wKCk7
CgkJCQl9CgoJCQkJaWYgKCBwb3AgPT0gbnVsbCApIHsKCQkJCQlwb3AgPSBjb250
ZXh0OwoJCQkJfQoKCQkJCUV4cHIucmVsYXRpdmVbIGN1ciBdKCBjaGVja1NldCwg
cG9wLCBjb250ZXh0WE1MICk7CgkJCX0KCgkJfSBlbHNlIHsKCQkJY2hlY2tTZXQg
PSBwYXJ0cyA9IFtdOwoJCX0KCX0KCglpZiAoICFjaGVja1NldCApIHsKCQljaGVj
a1NldCA9IHNldDsKCX0KCglpZiAoICFjaGVja1NldCApIHsKCQlTaXp6bGUuZXJy
b3IoIGN1ciB8fCBzZWxlY3RvciApOwoJfQoKCWlmICggdG9TdHJpbmcuY2FsbChj
aGVja1NldCkgPT09ICJbb2JqZWN0IEFycmF5XSIgKSB7CgkJaWYgKCAhcHJ1bmUg
KSB7CgkJCXJlc3VsdHMucHVzaC5hcHBseSggcmVzdWx0cywgY2hlY2tTZXQgKTsK
CgkJfSBlbHNlIGlmICggY29udGV4dCAmJiBjb250ZXh0Lm5vZGVUeXBlID09PSAx
ICkgewoJCQlmb3IgKCBpID0gMDsgY2hlY2tTZXRbaV0gIT0gbnVsbDsgaSsrICkg
ewoJCQkJaWYgKCBjaGVja1NldFtpXSAmJiAoY2hlY2tTZXRbaV0gPT09IHRydWUg
fHwgY2hlY2tTZXRbaV0ubm9kZVR5cGUgPT09IDEgJiYgU2l6emxlLmNvbnRhaW5z
KGNvbnRleHQsIGNoZWNrU2V0W2ldKSkgKSB7CgkJCQkJcmVzdWx0cy5wdXNoKCBz
ZXRbaV0gKTsKCQkJCX0KCQkJfQoKCQl9IGVsc2UgewoJCQlmb3IgKCBpID0gMDsg
Y2hlY2tTZXRbaV0gIT0gbnVsbDsgaSsrICkgewoJCQkJaWYgKCBjaGVja1NldFtp
XSAmJiBjaGVja1NldFtpXS5ub2RlVHlwZSA9PT0gMSApIHsKCQkJCQlyZXN1bHRz
LnB1c2goIHNldFtpXSApOwoJCQkJfQoJCQl9CgkJfQoKCX0gZWxzZSB7CgkJbWFr
ZUFycmF5KCBjaGVja1NldCwgcmVzdWx0cyApOwoJfQoKCWlmICggZXh0cmEgKSB7
CgkJU2l6emxlKCBleHRyYSwgb3JpZ0NvbnRleHQsIHJlc3VsdHMsIHNlZWQgKTsK
CQlTaXp6bGUudW5pcXVlU29ydCggcmVzdWx0cyApOwoJfQoKCXJldHVybiByZXN1
bHRzOwp9OwoKU2l6emxlLnVuaXF1ZVNvcnQgPSBmdW5jdGlvbiggcmVzdWx0cyAp
IHsKCWlmICggc29ydE9yZGVyICkgewoJCWhhc0R1cGxpY2F0ZSA9IGJhc2VIYXNE
dXBsaWNhdGU7CgkJcmVzdWx0cy5zb3J0KCBzb3J0T3JkZXIgKTsKCgkJaWYgKCBo
YXNEdXBsaWNhdGUgKSB7CgkJCWZvciAoIHZhciBpID0gMTsgaSA8IHJlc3VsdHMu
bGVuZ3RoOyBpKysgKSB7CgkJCQlpZiAoIHJlc3VsdHNbaV0gPT09IHJlc3VsdHNb
IGkgLSAxIF0gKSB7CgkJCQkJcmVzdWx0cy5zcGxpY2UoIGktLSwgMSApOwoJCQkJ
fQoJCQl9CgkJfQoJfQoKCXJldHVybiByZXN1bHRzOwp9OwoKU2l6emxlLm1hdGNo
ZXMgPSBmdW5jdGlvbiggZXhwciwgc2V0ICkgewoJcmV0dXJuIFNpenpsZSggZXhw
ciwgbnVsbCwgbnVsbCwgc2V0ICk7Cn07CgpTaXp6bGUubWF0Y2hlc1NlbGVjdG9y
ID0gZnVuY3Rpb24oIG5vZGUsIGV4cHIgKSB7CglyZXR1cm4gU2l6emxlKCBleHBy
LCBudWxsLCBudWxsLCBbbm9kZV0gKS5sZW5ndGggPiAwOwp9OwoKU2l6emxlLmZp
bmQgPSBmdW5jdGlvbiggZXhwciwgY29udGV4dCwgaXNYTUwgKSB7Cgl2YXIgc2V0
LCBpLCBsZW4sIG1hdGNoLCB0eXBlLCBsZWZ0OwoKCWlmICggIWV4cHIgKSB7CgkJ
cmV0dXJuIFtdOwoJfQoKCWZvciAoIGkgPSAwLCBsZW4gPSBFeHByLm9yZGVyLmxl
bmd0aDsgaSA8IGxlbjsgaSsrICkgewoJCXR5cGUgPSBFeHByLm9yZGVyW2ldOwoK
CQlpZiAoIChtYXRjaCA9IEV4cHIubGVmdE1hdGNoWyB0eXBlIF0uZXhlYyggZXhw
ciApKSApIHsKCQkJbGVmdCA9IG1hdGNoWzFdOwoJCQltYXRjaC5zcGxpY2UoIDEs
IDEgKTsKCgkJCWlmICggbGVmdC5zdWJzdHIoIGxlZnQubGVuZ3RoIC0gMSApICE9
PSAiXFwiICkgewoJCQkJbWF0Y2hbMV0gPSAobWF0Y2hbMV0gfHwgIiIpLnJlcGxh
Y2UoIHJCYWNrc2xhc2gsICIiICk7CgkJCQlzZXQgPSBFeHByLmZpbmRbIHR5cGUg
XSggbWF0Y2gsIGNvbnRleHQsIGlzWE1MICk7CgoJCQkJaWYgKCBzZXQgIT0gbnVs
bCApIHsKCQkJCQlleHByID0gZXhwci5yZXBsYWNlKCBFeHByLm1hdGNoWyB0eXBl
IF0sICIiICk7CgkJCQkJYnJlYWs7CgkJCQl9CgkJCX0KCQl9Cgl9CgoJaWYgKCAh
c2V0ICkgewoJCXNldCA9IHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdO
YW1lICE9PSAidW5kZWZpbmVkIiA/CgkJCWNvbnRleHQuZ2V0RWxlbWVudHNCeVRh
Z05hbWUoICIqIiApIDoKCQkJW107Cgl9CgoJcmV0dXJuIHsgc2V0OiBzZXQsIGV4
cHI6IGV4cHIgfTsKfTsKClNpenpsZS5maWx0ZXIgPSBmdW5jdGlvbiggZXhwciwg
c2V0LCBpbnBsYWNlLCBub3QgKSB7Cgl2YXIgbWF0Y2gsIGFueUZvdW5kLAoJCXR5
cGUsIGZvdW5kLCBpdGVtLCBmaWx0ZXIsIGxlZnQsCgkJaSwgcGFzcywKCQlvbGQg
PSBleHByLAoJCXJlc3VsdCA9IFtdLAoJCWN1ckxvb3AgPSBzZXQsCgkJaXNYTUxG
aWx0ZXIgPSBzZXQgJiYgc2V0WzBdICYmIFNpenpsZS5pc1hNTCggc2V0WzBdICk7
CgoJd2hpbGUgKCBleHByICYmIHNldC5sZW5ndGggKSB7CgkJZm9yICggdHlwZSBp
biBFeHByLmZpbHRlciApIHsKCQkJaWYgKCAobWF0Y2ggPSBFeHByLmxlZnRNYXRj
aFsgdHlwZSBdLmV4ZWMoIGV4cHIgKSkgIT0gbnVsbCAmJiBtYXRjaFsyXSApIHsK
CQkJCWZpbHRlciA9IEV4cHIuZmlsdGVyWyB0eXBlIF07CgkJCQlsZWZ0ID0gbWF0
Y2hbMV07CgoJCQkJYW55Rm91bmQgPSBmYWxzZTsKCgkJCQltYXRjaC5zcGxpY2Uo
MSwxKTsKCgkJCQlpZiAoIGxlZnQuc3Vic3RyKCBsZWZ0Lmxlbmd0aCAtIDEgKSA9
PT0gIlxcIiApIHsKCQkJCQljb250aW51ZTsKCQkJCX0KCgkJCQlpZiAoIGN1ckxv
b3AgPT09IHJlc3VsdCApIHsKCQkJCQlyZXN1bHQgPSBbXTsKCQkJCX0KCgkJCQlp
ZiAoIEV4cHIucHJlRmlsdGVyWyB0eXBlIF0gKSB7CgkJCQkJbWF0Y2ggPSBFeHBy
LnByZUZpbHRlclsgdHlwZSBdKCBtYXRjaCwgY3VyTG9vcCwgaW5wbGFjZSwgcmVz
dWx0LCBub3QsIGlzWE1MRmlsdGVyICk7CgoJCQkJCWlmICggIW1hdGNoICkgewoJ
CQkJCQlhbnlGb3VuZCA9IGZvdW5kID0gdHJ1ZTsKCgkJCQkJfSBlbHNlIGlmICgg
bWF0Y2ggPT09IHRydWUgKSB7CgkJCQkJCWNvbnRpbnVlOwoJCQkJCX0KCQkJCX0K
CgkJCQlpZiAoIG1hdGNoICkgewoJCQkJCWZvciAoIGkgPSAwOyAoaXRlbSA9IGN1
ckxvb3BbaV0pICE9IG51bGw7IGkrKyApIHsKCQkJCQkJaWYgKCBpdGVtICkgewoJ
CQkJCQkJZm91bmQgPSBmaWx0ZXIoIGl0ZW0sIG1hdGNoLCBpLCBjdXJMb29wICk7
CgkJCQkJCQlwYXNzID0gbm90IF4gZm91bmQ7CgoJCQkJCQkJaWYgKCBpbnBsYWNl
ICYmIGZvdW5kICE9IG51bGwgKSB7CgkJCQkJCQkJaWYgKCBwYXNzICkgewoJCQkJ
CQkJCQlhbnlGb3VuZCA9IHRydWU7CgoJCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJ
CWN1ckxvb3BbaV0gPSBmYWxzZTsKCQkJCQkJCQl9CgoJCQkJCQkJfSBlbHNlIGlm
ICggcGFzcyApIHsKCQkJCQkJCQlyZXN1bHQucHVzaCggaXRlbSApOwoJCQkJCQkJ
CWFueUZvdW5kID0gdHJ1ZTsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCX0KCQkJCX0K
CgkJCQlpZiAoIGZvdW5kICE9PSB1bmRlZmluZWQgKSB7CgkJCQkJaWYgKCAhaW5w
bGFjZSApIHsKCQkJCQkJY3VyTG9vcCA9IHJlc3VsdDsKCQkJCQl9CgoJCQkJCWV4
cHIgPSBleHByLnJlcGxhY2UoIEV4cHIubWF0Y2hbIHR5cGUgXSwgIiIgKTsKCgkJ
CQkJaWYgKCAhYW55Rm91bmQgKSB7CgkJCQkJCXJldHVybiBbXTsKCQkJCQl9CgoJ
CQkJCWJyZWFrOwoJCQkJfQoJCQl9CgkJfQoKCQkvLyBJbXByb3BlciBleHByZXNz
aW9uCgkJaWYgKCBleHByID09PSBvbGQgKSB7CgkJCWlmICggYW55Rm91bmQgPT0g
bnVsbCApIHsKCQkJCVNpenpsZS5lcnJvciggZXhwciApOwoKCQkJfSBlbHNlIHsK
CQkJCWJyZWFrOwoJCQl9CgkJfQoKCQlvbGQgPSBleHByOwoJfQoKCXJldHVybiBj
dXJMb29wOwp9OwoKU2l6emxlLmVycm9yID0gZnVuY3Rpb24oIG1zZyApIHsKCXRo
cm93IG5ldyBFcnJvciggIlN5bnRheCBlcnJvciwgdW5yZWNvZ25pemVkIGV4cHJl
c3Npb246ICIgKyBtc2cgKTsKfTsKCi8qKgogKiBVdGlsaXR5IGZ1bmN0aW9uIGZv
ciByZXRyZWl2aW5nIHRoZSB0ZXh0IHZhbHVlIG9mIGFuIGFycmF5IG9mIERPTSBu
b2RlcwogKiBAcGFyYW0ge0FycmF5fEVsZW1lbnR9IGVsZW0KICovCnZhciBnZXRU
ZXh0ID0gU2l6emxlLmdldFRleHQgPSBmdW5jdGlvbiggZWxlbSApIHsKICAgIHZh
ciBpLCBub2RlLAoJCW5vZGVUeXBlID0gZWxlbS5ub2RlVHlwZSwKCQlyZXQgPSAi
IjsKCglpZiAoIG5vZGVUeXBlICkgewoJCWlmICggbm9kZVR5cGUgPT09IDEgfHwg
bm9kZVR5cGUgPT09IDkgfHwgbm9kZVR5cGUgPT09IDExICkgewoJCQkvLyBVc2Ug
dGV4dENvbnRlbnQgfHwgaW5uZXJUZXh0IGZvciBlbGVtZW50cwoJCQlpZiAoIHR5
cGVvZiBlbGVtLnRleHRDb250ZW50ID09PSAnc3RyaW5nJyApIHsKCQkJCXJldHVy
biBlbGVtLnRleHRDb250ZW50OwoJCQl9IGVsc2UgaWYgKCB0eXBlb2YgZWxlbS5p
bm5lclRleHQgPT09ICdzdHJpbmcnICkgewoJCQkJLy8gUmVwbGFjZSBJRSdzIGNh
cnJpYWdlIHJldHVybnMKCQkJCXJldHVybiBlbGVtLmlubmVyVGV4dC5yZXBsYWNl
KCByUmV0dXJuLCAnJyApOwoJCQl9IGVsc2UgewoJCQkJLy8gVHJhdmVyc2UgaXQn
cyBjaGlsZHJlbgoJCQkJZm9yICggZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDsgZWxl
bTsgZWxlbSA9IGVsZW0ubmV4dFNpYmxpbmcpIHsKCQkJCQlyZXQgKz0gZ2V0VGV4
dCggZWxlbSApOwoJCQkJfQoJCQl9CgkJfSBlbHNlIGlmICggbm9kZVR5cGUgPT09
IDMgfHwgbm9kZVR5cGUgPT09IDQgKSB7CgkJCXJldHVybiBlbGVtLm5vZGVWYWx1
ZTsKCQl9Cgl9IGVsc2UgewoKCQkvLyBJZiBubyBub2RlVHlwZSwgdGhpcyBpcyBl
eHBlY3RlZCB0byBiZSBhbiBhcnJheQoJCWZvciAoIGkgPSAwOyAobm9kZSA9IGVs
ZW1baV0pOyBpKysgKSB7CgkJCS8vIERvIG5vdCB0cmF2ZXJzZSBjb21tZW50IG5v
ZGVzCgkJCWlmICggbm9kZS5ub2RlVHlwZSAhPT0gOCApIHsKCQkJCXJldCArPSBn
ZXRUZXh0KCBub2RlICk7CgkJCX0KCQl9Cgl9CglyZXR1cm4gcmV0Owp9OwoKdmFy
IEV4cHIgPSBTaXp6bGUuc2VsZWN0b3JzID0gewoJb3JkZXI6IFsgIklEIiwgIk5B
TUUiLCAiVEFHIiBdLAoKCW1hdGNoOiB7CgkJSUQ6IC8jKCg/Oltcd1x1MDBjMC1c
dUZGRkZcLV18XFwuKSspLywKCQlDTEFTUzogL1wuKCg/Oltcd1x1MDBjMC1cdUZG
RkZcLV18XFwuKSspLywKCQlOQU1FOiAvXFtuYW1lPVsnIl0qKCg/Oltcd1x1MDBj
MC1cdUZGRkZcLV18XFwuKSspWyciXSpcXS8sCgkJQVRUUjogL1xbXHMqKCg/Oltc
d1x1MDBjMC1cdUZGRkZcLV18XFwuKSspXHMqKD86KFxTPz0pXHMqKD86KFsnIl0p
KC4qPylcM3woIz8oPzpbXHdcdTAwYzAtXHVGRkZGXC1dfFxcLikqKXwpfClccypc
XS8sCgkJVEFHOiAvXigoPzpbXHdcdTAwYzAtXHVGRkZGXCpcLV18XFwuKSspLywK
CQlDSElMRDogLzoob25seXxudGh8bGFzdHxmaXJzdCktY2hpbGQoPzpcKFxzKihl
dmVufG9kZHwoPzpbK1wtXT9cZCt8KD86WytcLV0/XGQqKT9uXHMqKD86WytcLV1c
cypcZCspPykpXHMqXCkpPy8sCgkJUE9TOiAvOihudGh8ZXF8Z3R8bHR8Zmlyc3R8
bGFzdHxldmVufG9kZCkoPzpcKChcZCopXCkpPyg/PVteXC1dfCQpLywKCQlQU0VV
RE86IC86KCg/Oltcd1x1MDBjMC1cdUZGRkZcLV18XFwuKSspKD86XCgoWyciXT8p
KCg/OlwoW15cKV0rXCl8W15cKFwpXSopKylcMlwpKT8vCgl9LAoKCWxlZnRNYXRj
aDoge30sCgoJYXR0ck1hcDogewoJCSJjbGFzcyI6ICJjbGFzc05hbWUiLAoJCSJm
b3IiOiAiaHRtbEZvciIKCX0sCgoJYXR0ckhhbmRsZTogewoJCWhyZWY6IGZ1bmN0
aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoICJocmVm
IiApOwoJCX0sCgkJdHlwZTogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiBl
bGVtLmdldEF0dHJpYnV0ZSggInR5cGUiICk7CgkJfQoJfSwKCglyZWxhdGl2ZTog
ewoJCSIrIjogZnVuY3Rpb24oY2hlY2tTZXQsIHBhcnQpewoJCQl2YXIgaXNQYXJ0
U3RyID0gdHlwZW9mIHBhcnQgPT09ICJzdHJpbmciLAoJCQkJaXNUYWcgPSBpc1Bh
cnRTdHIgJiYgIXJOb25Xb3JkLnRlc3QoIHBhcnQgKSwKCQkJCWlzUGFydFN0ck5v
dFRhZyA9IGlzUGFydFN0ciAmJiAhaXNUYWc7CgoJCQlpZiAoIGlzVGFnICkgewoJ
CQkJcGFydCA9IHBhcnQudG9Mb3dlckNhc2UoKTsKCQkJfQoKCQkJZm9yICggdmFy
IGkgPSAwLCBsID0gY2hlY2tTZXQubGVuZ3RoLCBlbGVtOyBpIDwgbDsgaSsrICkg
ewoJCQkJaWYgKCAoZWxlbSA9IGNoZWNrU2V0W2ldKSApIHsKCQkJCQl3aGlsZSAo
IChlbGVtID0gZWxlbS5wcmV2aW91c1NpYmxpbmcpICYmIGVsZW0ubm9kZVR5cGUg
IT09IDEgKSB7fQoKCQkJCQljaGVja1NldFtpXSA9IGlzUGFydFN0ck5vdFRhZyB8
fCBlbGVtICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gcGFydCA/
CgkJCQkJCWVsZW0gfHwgZmFsc2UgOgoJCQkJCQllbGVtID09PSBwYXJ0OwoJCQkJ
fQoJCQl9CgoJCQlpZiAoIGlzUGFydFN0ck5vdFRhZyApIHsKCQkJCVNpenpsZS5m
aWx0ZXIoIHBhcnQsIGNoZWNrU2V0LCB0cnVlICk7CgkJCX0KCQl9LAoKCQkiPiI6
IGZ1bmN0aW9uKCBjaGVja1NldCwgcGFydCApIHsKCQkJdmFyIGVsZW0sCgkJCQlp
c1BhcnRTdHIgPSB0eXBlb2YgcGFydCA9PT0gInN0cmluZyIsCgkJCQlpID0gMCwK
CQkJCWwgPSBjaGVja1NldC5sZW5ndGg7CgoJCQlpZiAoIGlzUGFydFN0ciAmJiAh
ck5vbldvcmQudGVzdCggcGFydCApICkgewoJCQkJcGFydCA9IHBhcnQudG9Mb3dl
ckNhc2UoKTsKCgkJCQlmb3IgKCA7IGkgPCBsOyBpKysgKSB7CgkJCQkJZWxlbSA9
IGNoZWNrU2V0W2ldOwoKCQkJCQlpZiAoIGVsZW0gKSB7CgkJCQkJCXZhciBwYXJl
bnQgPSBlbGVtLnBhcmVudE5vZGU7CgkJCQkJCWNoZWNrU2V0W2ldID0gcGFyZW50
Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IHBhcnQgPyBwYXJlbnQgOiBmYWxz
ZTsKCQkJCQl9CgkJCQl9CgoJCQl9IGVsc2UgewoJCQkJZm9yICggOyBpIDwgbDsg
aSsrICkgewoJCQkJCWVsZW0gPSBjaGVja1NldFtpXTsKCgkJCQkJaWYgKCBlbGVt
ICkgewoJCQkJCQljaGVja1NldFtpXSA9IGlzUGFydFN0ciA/CgkJCQkJCQllbGVt
LnBhcmVudE5vZGUgOgoJCQkJCQkJZWxlbS5wYXJlbnROb2RlID09PSBwYXJ0OwoJ
CQkJCX0KCQkJCX0KCgkJCQlpZiAoIGlzUGFydFN0ciApIHsKCQkJCQlTaXp6bGUu
ZmlsdGVyKCBwYXJ0LCBjaGVja1NldCwgdHJ1ZSApOwoJCQkJfQoJCQl9CgkJfSwK
CgkJIiI6IGZ1bmN0aW9uKGNoZWNrU2V0LCBwYXJ0LCBpc1hNTCl7CgkJCXZhciBu
b2RlQ2hlY2ssCgkJCQlkb25lTmFtZSA9IGRvbmUrKywKCQkJCWNoZWNrRm4gPSBk
aXJDaGVjazsKCgkJCWlmICggdHlwZW9mIHBhcnQgPT09ICJzdHJpbmciICYmICFy
Tm9uV29yZC50ZXN0KCBwYXJ0ICkgKSB7CgkJCQlwYXJ0ID0gcGFydC50b0xvd2Vy
Q2FzZSgpOwoJCQkJbm9kZUNoZWNrID0gcGFydDsKCQkJCWNoZWNrRm4gPSBkaXJO
b2RlQ2hlY2s7CgkJCX0KCgkJCWNoZWNrRm4oICJwYXJlbnROb2RlIiwgcGFydCwg
ZG9uZU5hbWUsIGNoZWNrU2V0LCBub2RlQ2hlY2ssIGlzWE1MICk7CgkJfSwKCgkJ
In4iOiBmdW5jdGlvbiggY2hlY2tTZXQsIHBhcnQsIGlzWE1MICkgewoJCQl2YXIg
bm9kZUNoZWNrLAoJCQkJZG9uZU5hbWUgPSBkb25lKyssCgkJCQljaGVja0ZuID0g
ZGlyQ2hlY2s7CgoJCQlpZiAoIHR5cGVvZiBwYXJ0ID09PSAic3RyaW5nIiAmJiAh
ck5vbldvcmQudGVzdCggcGFydCApICkgewoJCQkJcGFydCA9IHBhcnQudG9Mb3dl
ckNhc2UoKTsKCQkJCW5vZGVDaGVjayA9IHBhcnQ7CgkJCQljaGVja0ZuID0gZGly
Tm9kZUNoZWNrOwoJCQl9CgoJCQljaGVja0ZuKCAicHJldmlvdXNTaWJsaW5nIiwg
cGFydCwgZG9uZU5hbWUsIGNoZWNrU2V0LCBub2RlQ2hlY2ssIGlzWE1MICk7CgkJ
fQoJfSwKCglmaW5kOiB7CgkJSUQ6IGZ1bmN0aW9uKCBtYXRjaCwgY29udGV4dCwg
aXNYTUwgKSB7CgkJCWlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQg
IT09ICJ1bmRlZmluZWQiICYmICFpc1hNTCApIHsKCQkJCXZhciBtID0gY29udGV4
dC5nZXRFbGVtZW50QnlJZChtYXRjaFsxXSk7CgkJCQkvLyBDaGVjayBwYXJlbnRO
b2RlIHRvIGNhdGNoIHdoZW4gQmxhY2tiZXJyeSA0LjYgcmV0dXJucwoJCQkJLy8g
bm9kZXMgdGhhdCBhcmUgbm8gbG9uZ2VyIGluIHRoZSBkb2N1bWVudCAjNjk2MwoJ
CQkJcmV0dXJuIG0gJiYgbS5wYXJlbnROb2RlID8gW21dIDogW107CgkJCX0KCQl9
LAoKCQlOQU1FOiBmdW5jdGlvbiggbWF0Y2gsIGNvbnRleHQgKSB7CgkJCWlmICgg
dHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeU5hbWUgIT09ICJ1bmRlZmluZWQi
ICkgewoJCQkJdmFyIHJldCA9IFtdLAoJCQkJCXJlc3VsdHMgPSBjb250ZXh0Lmdl
dEVsZW1lbnRzQnlOYW1lKCBtYXRjaFsxXSApOwoKCQkJCWZvciAoIHZhciBpID0g
MCwgbCA9IHJlc3VsdHMubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCQkJCWlmICgg
cmVzdWx0c1tpXS5nZXRBdHRyaWJ1dGUoIm5hbWUiKSA9PT0gbWF0Y2hbMV0gKSB7
CgkJCQkJCXJldC5wdXNoKCByZXN1bHRzW2ldICk7CgkJCQkJfQoJCQkJfQoKCQkJ
CXJldHVybiByZXQubGVuZ3RoID09PSAwID8gbnVsbCA6IHJldDsKCQkJfQoJCX0s
CgoJCVRBRzogZnVuY3Rpb24oIG1hdGNoLCBjb250ZXh0ICkgewoJCQlpZiAoIHR5
cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSAidW5kZWZpbmVk
IiApIHsKCQkJCXJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCBt
YXRjaFsxXSApOwoJCQl9CgkJfQoJfSwKCXByZUZpbHRlcjogewoJCUNMQVNTOiBm
dW5jdGlvbiggbWF0Y2gsIGN1ckxvb3AsIGlucGxhY2UsIHJlc3VsdCwgbm90LCBp
c1hNTCApIHsKCQkJbWF0Y2ggPSAiICIgKyBtYXRjaFsxXS5yZXBsYWNlKCByQmFj
a3NsYXNoLCAiIiApICsgIiAiOwoKCQkJaWYgKCBpc1hNTCApIHsKCQkJCXJldHVy
biBtYXRjaDsKCQkJfQoKCQkJZm9yICggdmFyIGkgPSAwLCBlbGVtOyAoZWxlbSA9
IGN1ckxvb3BbaV0pICE9IG51bGw7IGkrKyApIHsKCQkJCWlmICggZWxlbSApIHsK
CQkJCQlpZiAoIG5vdCBeIChlbGVtLmNsYXNzTmFtZSAmJiAoIiAiICsgZWxlbS5j
bGFzc05hbWUgKyAiICIpLnJlcGxhY2UoL1tcdFxuXHJdL2csICIgIikuaW5kZXhP
ZihtYXRjaCkgPj0gMCkgKSB7CgkJCQkJCWlmICggIWlucGxhY2UgKSB7CgkJCQkJ
CQlyZXN1bHQucHVzaCggZWxlbSApOwoJCQkJCQl9CgoJCQkJCX0gZWxzZSBpZiAo
IGlucGxhY2UgKSB7CgkJCQkJCWN1ckxvb3BbaV0gPSBmYWxzZTsKCQkJCQl9CgkJ
CQl9CgkJCX0KCgkJCXJldHVybiBmYWxzZTsKCQl9LAoKCQlJRDogZnVuY3Rpb24o
IG1hdGNoICkgewoJCQlyZXR1cm4gbWF0Y2hbMV0ucmVwbGFjZSggckJhY2tzbGFz
aCwgIiIgKTsKCQl9LAoKCQlUQUc6IGZ1bmN0aW9uKCBtYXRjaCwgY3VyTG9vcCAp
IHsKCQkJcmV0dXJuIG1hdGNoWzFdLnJlcGxhY2UoIHJCYWNrc2xhc2gsICIiICku
dG9Mb3dlckNhc2UoKTsKCQl9LAoKCQlDSElMRDogZnVuY3Rpb24oIG1hdGNoICkg
ewoJCQlpZiAoIG1hdGNoWzFdID09PSAibnRoIiApIHsKCQkJCWlmICggIW1hdGNo
WzJdICkgewoJCQkJCVNpenpsZS5lcnJvciggbWF0Y2hbMF0gKTsKCQkJCX0KCgkJ
CQltYXRjaFsyXSA9IG1hdGNoWzJdLnJlcGxhY2UoL15cK3xccyovZywgJycpOwoK
CQkJCS8vIHBhcnNlIGVxdWF0aW9ucyBsaWtlICdldmVuJywgJ29kZCcsICc1Jywg
JzJuJywgJzNuKzInLCAnNG4tMScsICctbis2JwoJCQkJdmFyIHRlc3QgPSAvKC0/
KShcZCopKD86bihbK1wtXT9cZCopKT8vLmV4ZWMoCgkJCQkJbWF0Y2hbMl0gPT09
ICJldmVuIiAmJiAiMm4iIHx8IG1hdGNoWzJdID09PSAib2RkIiAmJiAiMm4rMSIg
fHwKCQkJCQkhL1xELy50ZXN0KCBtYXRjaFsyXSApICYmICIwbisiICsgbWF0Y2hb
Ml0gfHwgbWF0Y2hbMl0pOwoKCQkJCS8vIGNhbGN1bGF0ZSB0aGUgbnVtYmVycyAo
Zmlyc3QpbisobGFzdCkgaW5jbHVkaW5nIGlmIHRoZXkgYXJlIG5lZ2F0aXZlCgkJ
CQltYXRjaFsyXSA9ICh0ZXN0WzFdICsgKHRlc3RbMl0gfHwgMSkpIC0gMDsKCQkJ
CW1hdGNoWzNdID0gdGVzdFszXSAtIDA7CgkJCX0KCQkJZWxzZSBpZiAoIG1hdGNo
WzJdICkgewoJCQkJU2l6emxlLmVycm9yKCBtYXRjaFswXSApOwoJCQl9CgoJCQkv
LyBUT0RPOiBNb3ZlIHRvIG5vcm1hbCBjYWNoaW5nIHN5c3RlbQoJCQltYXRjaFsw
XSA9IGRvbmUrKzsKCgkJCXJldHVybiBtYXRjaDsKCQl9LAoKCQlBVFRSOiBmdW5j
dGlvbiggbWF0Y2gsIGN1ckxvb3AsIGlucGxhY2UsIHJlc3VsdCwgbm90LCBpc1hN
TCApIHsKCQkJdmFyIG5hbWUgPSBtYXRjaFsxXSA9IG1hdGNoWzFdLnJlcGxhY2Uo
IHJCYWNrc2xhc2gsICIiICk7CgoJCQlpZiAoICFpc1hNTCAmJiBFeHByLmF0dHJN
YXBbbmFtZV0gKSB7CgkJCQltYXRjaFsxXSA9IEV4cHIuYXR0ck1hcFtuYW1lXTsK
CQkJfQoKCQkJLy8gSGFuZGxlIGlmIGFuIHVuLXF1b3RlZCB2YWx1ZSB3YXMgdXNl
ZAoJCQltYXRjaFs0XSA9ICggbWF0Y2hbNF0gfHwgbWF0Y2hbNV0gfHwgIiIgKS5y
ZXBsYWNlKCByQmFja3NsYXNoLCAiIiApOwoKCQkJaWYgKCBtYXRjaFsyXSA9PT0g
In49IiApIHsKCQkJCW1hdGNoWzRdID0gIiAiICsgbWF0Y2hbNF0gKyAiICI7CgkJ
CX0KCgkJCXJldHVybiBtYXRjaDsKCQl9LAoKCQlQU0VVRE86IGZ1bmN0aW9uKCBt
YXRjaCwgY3VyTG9vcCwgaW5wbGFjZSwgcmVzdWx0LCBub3QgKSB7CgkJCWlmICgg
bWF0Y2hbMV0gPT09ICJub3QiICkgewoJCQkJLy8gSWYgd2UncmUgZGVhbGluZyB3
aXRoIGEgY29tcGxleCBleHByZXNzaW9uLCBvciBhIHNpbXBsZSBvbmUKCQkJCWlm
ICggKCBjaHVua2VyLmV4ZWMobWF0Y2hbM10pIHx8ICIiICkubGVuZ3RoID4gMSB8
fCAvXlx3Ly50ZXN0KG1hdGNoWzNdKSApIHsKCQkJCQltYXRjaFszXSA9IFNpenps
ZShtYXRjaFszXSwgbnVsbCwgbnVsbCwgY3VyTG9vcCk7CgoJCQkJfSBlbHNlIHsK
CQkJCQl2YXIgcmV0ID0gU2l6emxlLmZpbHRlcihtYXRjaFszXSwgY3VyTG9vcCwg
aW5wbGFjZSwgdHJ1ZSBeIG5vdCk7CgoJCQkJCWlmICggIWlucGxhY2UgKSB7CgkJ
CQkJCXJlc3VsdC5wdXNoLmFwcGx5KCByZXN1bHQsIHJldCApOwoJCQkJCX0KCgkJ
CQkJcmV0dXJuIGZhbHNlOwoJCQkJfQoKCQkJfSBlbHNlIGlmICggRXhwci5tYXRj
aC5QT1MudGVzdCggbWF0Y2hbMF0gKSB8fCBFeHByLm1hdGNoLkNISUxELnRlc3Qo
IG1hdGNoWzBdICkgKSB7CgkJCQlyZXR1cm4gdHJ1ZTsKCQkJfQoKCQkJcmV0dXJu
IG1hdGNoOwoJCX0sCgoJCVBPUzogZnVuY3Rpb24oIG1hdGNoICkgewoJCQltYXRj
aC51bnNoaWZ0KCB0cnVlICk7CgoJCQlyZXR1cm4gbWF0Y2g7CgkJfQoJfSwKCglm
aWx0ZXJzOiB7CgkJZW5hYmxlZDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVy
biBlbGVtLmRpc2FibGVkID09PSBmYWxzZSAmJiBlbGVtLnR5cGUgIT09ICJoaWRk
ZW4iOwoJCX0sCgoJCWRpc2FibGVkOiBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0
dXJuIGVsZW0uZGlzYWJsZWQgPT09IHRydWU7CgkJfSwKCgkJY2hlY2tlZDogZnVu
Y3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiBlbGVtLmNoZWNrZWQgPT09IHRydWU7
CgkJfSwKCgkJc2VsZWN0ZWQ6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQkvLyBBY2Nl
c3NpbmcgdGhpcyBwcm9wZXJ0eSBtYWtlcyBzZWxlY3RlZC1ieS1kZWZhdWx0CgkJ
CS8vIG9wdGlvbnMgaW4gU2FmYXJpIHdvcmsgcHJvcGVybHkKCQkJaWYgKCBlbGVt
LnBhcmVudE5vZGUgKSB7CgkJCQllbGVtLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRl
eDsKCQkJfQoKCQkJcmV0dXJuIGVsZW0uc2VsZWN0ZWQgPT09IHRydWU7CgkJfSwK
CgkJcGFyZW50OiBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJuICEhZWxlbS5m
aXJzdENoaWxkOwoJCX0sCgoJCWVtcHR5OiBmdW5jdGlvbiggZWxlbSApIHsKCQkJ
cmV0dXJuICFlbGVtLmZpcnN0Q2hpbGQ7CgkJfSwKCgkJaGFzOiBmdW5jdGlvbigg
ZWxlbSwgaSwgbWF0Y2ggKSB7CgkJCXJldHVybiAhIVNpenpsZSggbWF0Y2hbM10s
IGVsZW0gKS5sZW5ndGg7CgkJfSwKCgkJaGVhZGVyOiBmdW5jdGlvbiggZWxlbSAp
IHsKCQkJcmV0dXJuICgvaFxkL2kpLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTsKCQl9
LAoKCQl0ZXh0OiBmdW5jdGlvbiggZWxlbSApIHsKCQkJdmFyIGF0dHIgPSBlbGVt
LmdldEF0dHJpYnV0ZSggInR5cGUiICksIHR5cGUgPSBlbGVtLnR5cGU7CgkJCS8v
IElFNiBhbmQgNyB3aWxsIG1hcCBlbGVtLnR5cGUgdG8gJ3RleHQnIGZvciBuZXcg
SFRNTDUgdHlwZXMgKHNlYXJjaCwgZXRjKQoJCQkvLyB1c2UgZ2V0QXR0cmlidXRl
IGluc3RlYWQgdG8gdGVzdCB0aGlzIGNhc2UKCQkJcmV0dXJuIGVsZW0ubm9kZU5h
bWUudG9Mb3dlckNhc2UoKSA9PT0gImlucHV0IiAmJiAidGV4dCIgPT09IHR5cGUg
JiYgKCBhdHRyID09PSB0eXBlIHx8IGF0dHIgPT09IG51bGwgKTsKCQl9LAoKCQly
YWRpbzogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiBlbGVtLm5vZGVOYW1l
LnRvTG93ZXJDYXNlKCkgPT09ICJpbnB1dCIgJiYgInJhZGlvIiA9PT0gZWxlbS50
eXBlOwoJCX0sCgoJCWNoZWNrYm94OiBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0
dXJuIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gImlucHV0IiAmJiAi
Y2hlY2tib3giID09PSBlbGVtLnR5cGU7CgkJfSwKCgkJZmlsZTogZnVuY3Rpb24o
IGVsZW0gKSB7CgkJCXJldHVybiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkg
PT09ICJpbnB1dCIgJiYgImZpbGUiID09PSBlbGVtLnR5cGU7CgkJfSwKCgkJcGFz
c3dvcmQ6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gZWxlbS5ub2RlTmFt
ZS50b0xvd2VyQ2FzZSgpID09PSAiaW5wdXQiICYmICJwYXNzd29yZCIgPT09IGVs
ZW0udHlwZTsKCQl9LAoKCQlzdWJtaXQ6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQl2
YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsKCQkJcmV0dXJu
IChuYW1lID09PSAiaW5wdXQiIHx8IG5hbWUgPT09ICJidXR0b24iKSAmJiAic3Vi
bWl0IiA9PT0gZWxlbS50eXBlOwoJCX0sCgoJCWltYWdlOiBmdW5jdGlvbiggZWxl
bSApIHsKCQkJcmV0dXJuIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0g
ImlucHV0IiAmJiAiaW1hZ2UiID09PSBlbGVtLnR5cGU7CgkJfSwKCgkJcmVzZXQ6
IGZ1bmN0aW9uKCBlbGVtICkgewoJCQl2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUu
dG9Mb3dlckNhc2UoKTsKCQkJcmV0dXJuIChuYW1lID09PSAiaW5wdXQiIHx8IG5h
bWUgPT09ICJidXR0b24iKSAmJiAicmVzZXQiID09PSBlbGVtLnR5cGU7CgkJfSwK
CgkJYnV0dG9uOiBmdW5jdGlvbiggZWxlbSApIHsKCQkJdmFyIG5hbWUgPSBlbGVt
Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7CgkJCXJldHVybiBuYW1lID09PSAiaW5w
dXQiICYmICJidXR0b24iID09PSBlbGVtLnR5cGUgfHwgbmFtZSA9PT0gImJ1dHRv
biI7CgkJfSwKCgkJaW5wdXQ6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4g
KC9pbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uL2kpLnRlc3QoIGVsZW0ubm9k
ZU5hbWUgKTsKCQl9LAoKCQlmb2N1czogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJl
dHVybiBlbGVtID09PSBlbGVtLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudDsK
CQl9Cgl9LAoJc2V0RmlsdGVyczogewoJCWZpcnN0OiBmdW5jdGlvbiggZWxlbSwg
aSApIHsKCQkJcmV0dXJuIGkgPT09IDA7CgkJfSwKCgkJbGFzdDogZnVuY3Rpb24o
IGVsZW0sIGksIG1hdGNoLCBhcnJheSApIHsKCQkJcmV0dXJuIGkgPT09IGFycmF5
Lmxlbmd0aCAtIDE7CgkJfSwKCgkJZXZlbjogZnVuY3Rpb24oIGVsZW0sIGkgKSB7
CgkJCXJldHVybiBpICUgMiA9PT0gMDsKCQl9LAoKCQlvZGQ6IGZ1bmN0aW9uKCBl
bGVtLCBpICkgewoJCQlyZXR1cm4gaSAlIDIgPT09IDE7CgkJfSwKCgkJbHQ6IGZ1
bmN0aW9uKCBlbGVtLCBpLCBtYXRjaCApIHsKCQkJcmV0dXJuIGkgPCBtYXRjaFsz
XSAtIDA7CgkJfSwKCgkJZ3Q6IGZ1bmN0aW9uKCBlbGVtLCBpLCBtYXRjaCApIHsK
CQkJcmV0dXJuIGkgPiBtYXRjaFszXSAtIDA7CgkJfSwKCgkJbnRoOiBmdW5jdGlv
biggZWxlbSwgaSwgbWF0Y2ggKSB7CgkJCXJldHVybiBtYXRjaFszXSAtIDAgPT09
IGk7CgkJfSwKCgkJZXE6IGZ1bmN0aW9uKCBlbGVtLCBpLCBtYXRjaCApIHsKCQkJ
cmV0dXJuIG1hdGNoWzNdIC0gMCA9PT0gaTsKCQl9Cgl9LAoJZmlsdGVyOiB7CgkJ
UFNFVURPOiBmdW5jdGlvbiggZWxlbSwgbWF0Y2gsIGksIGFycmF5ICkgewoJCQl2
YXIgbmFtZSA9IG1hdGNoWzFdLAoJCQkJZmlsdGVyID0gRXhwci5maWx0ZXJzWyBu
YW1lIF07CgoJCQlpZiAoIGZpbHRlciApIHsKCQkJCXJldHVybiBmaWx0ZXIoIGVs
ZW0sIGksIG1hdGNoLCBhcnJheSApOwoKCQkJfSBlbHNlIGlmICggbmFtZSA9PT0g
ImNvbnRhaW5zIiApIHsKCQkJCXJldHVybiAoZWxlbS50ZXh0Q29udGVudCB8fCBl
bGVtLmlubmVyVGV4dCB8fCBnZXRUZXh0KFsgZWxlbSBdKSB8fCAiIikuaW5kZXhP
ZihtYXRjaFszXSkgPj0gMDsKCgkJCX0gZWxzZSBpZiAoIG5hbWUgPT09ICJub3Qi
ICkgewoJCQkJdmFyIG5vdCA9IG1hdGNoWzNdOwoKCQkJCWZvciAoIHZhciBqID0g
MCwgbCA9IG5vdC5sZW5ndGg7IGogPCBsOyBqKysgKSB7CgkJCQkJaWYgKCBub3Rb
al0gPT09IGVsZW0gKSB7CgkJCQkJCXJldHVybiBmYWxzZTsKCQkJCQl9CgkJCQl9
CgoJCQkJcmV0dXJuIHRydWU7CgoJCQl9IGVsc2UgewoJCQkJU2l6emxlLmVycm9y
KCBuYW1lICk7CgkJCX0KCQl9LAoKCQlDSElMRDogZnVuY3Rpb24oIGVsZW0sIG1h
dGNoICkgewoJCQl2YXIgZmlyc3QsIGxhc3QsCgkJCQlkb25lTmFtZSwgcGFyZW50
LCBjYWNoZSwKCQkJCWNvdW50LCBkaWZmLAoJCQkJdHlwZSA9IG1hdGNoWzFdLAoJ
CQkJbm9kZSA9IGVsZW07CgoJCQlzd2l0Y2ggKCB0eXBlICkgewoJCQkJY2FzZSAi
b25seSI6CgkJCQljYXNlICJmaXJzdCI6CgkJCQkJd2hpbGUgKCAobm9kZSA9IG5v
ZGUucHJldmlvdXNTaWJsaW5nKSApIHsKCQkJCQkJaWYgKCBub2RlLm5vZGVUeXBl
ID09PSAxICkgewoJCQkJCQkJcmV0dXJuIGZhbHNlOwoJCQkJCQl9CgkJCQkJfQoK
CQkJCQlpZiAoIHR5cGUgPT09ICJmaXJzdCIgKSB7CgkJCQkJCXJldHVybiB0cnVl
OwoJCQkJCX0KCgkJCQkJbm9kZSA9IGVsZW07CgoJCQkJCS8qIGZhbGxzIHRocm91
Z2ggKi8KCQkJCWNhc2UgImxhc3QiOgoJCQkJCXdoaWxlICggKG5vZGUgPSBub2Rl
Lm5leHRTaWJsaW5nKSApIHsKCQkJCQkJaWYgKCBub2RlLm5vZGVUeXBlID09PSAx
ICkgewoJCQkJCQkJcmV0dXJuIGZhbHNlOwoJCQkJCQl9CgkJCQkJfQoKCQkJCQly
ZXR1cm4gdHJ1ZTsKCgkJCQljYXNlICJudGgiOgoJCQkJCWZpcnN0ID0gbWF0Y2hb
Ml07CgkJCQkJbGFzdCA9IG1hdGNoWzNdOwoKCQkJCQlpZiAoIGZpcnN0ID09PSAx
ICYmIGxhc3QgPT09IDAgKSB7CgkJCQkJCXJldHVybiB0cnVlOwoJCQkJCX0KCgkJ
CQkJZG9uZU5hbWUgPSBtYXRjaFswXTsKCQkJCQlwYXJlbnQgPSBlbGVtLnBhcmVu
dE5vZGU7CgoJCQkJCWlmICggcGFyZW50ICYmIChwYXJlbnRbIGV4cGFuZG8gXSAh
PT0gZG9uZU5hbWUgfHwgIWVsZW0ubm9kZUluZGV4KSApIHsKCQkJCQkJY291bnQg
PSAwOwoKCQkJCQkJZm9yICggbm9kZSA9IHBhcmVudC5maXJzdENoaWxkOyBub2Rl
OyBub2RlID0gbm9kZS5uZXh0U2libGluZyApIHsKCQkJCQkJCWlmICggbm9kZS5u
b2RlVHlwZSA9PT0gMSApIHsKCQkJCQkJCQlub2RlLm5vZGVJbmRleCA9ICsrY291
bnQ7CgkJCQkJCQl9CgkJCQkJCX0KCgkJCQkJCXBhcmVudFsgZXhwYW5kbyBdID0g
ZG9uZU5hbWU7CgkJCQkJfQoKCQkJCQlkaWZmID0gZWxlbS5ub2RlSW5kZXggLSBs
YXN0OwoKCQkJCQlpZiAoIGZpcnN0ID09PSAwICkgewoJCQkJCQlyZXR1cm4gZGlm
ZiA9PT0gMDsKCgkJCQkJfSBlbHNlIHsKCQkJCQkJcmV0dXJuICggZGlmZiAlIGZp
cnN0ID09PSAwICYmIGRpZmYgLyBmaXJzdCA+PSAwICk7CgkJCQkJfQoJCQl9CgkJ
fSwKCgkJSUQ6IGZ1bmN0aW9uKCBlbGVtLCBtYXRjaCApIHsKCQkJcmV0dXJuIGVs
ZW0ubm9kZVR5cGUgPT09IDEgJiYgZWxlbS5nZXRBdHRyaWJ1dGUoImlkIikgPT09
IG1hdGNoOwoJCX0sCgoJCVRBRzogZnVuY3Rpb24oIGVsZW0sIG1hdGNoICkgewoJ
CQlyZXR1cm4gKG1hdGNoID09PSAiKiIgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSkg
fHwgISFlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2Uo
KSA9PT0gbWF0Y2g7CgkJfSwKCgkJQ0xBU1M6IGZ1bmN0aW9uKCBlbGVtLCBtYXRj
aCApIHsKCQkJcmV0dXJuICgiICIgKyAoZWxlbS5jbGFzc05hbWUgfHwgZWxlbS5n
ZXRBdHRyaWJ1dGUoImNsYXNzIikpICsgIiAiKQoJCQkJLmluZGV4T2YoIG1hdGNo
ICkgPiAtMTsKCQl9LAoKCQlBVFRSOiBmdW5jdGlvbiggZWxlbSwgbWF0Y2ggKSB7
CgkJCXZhciBuYW1lID0gbWF0Y2hbMV0sCgkJCQlyZXN1bHQgPSBTaXp6bGUuYXR0
ciA/CgkJCQkJU2l6emxlLmF0dHIoIGVsZW0sIG5hbWUgKSA6CgkJCQkJRXhwci5h
dHRySGFuZGxlWyBuYW1lIF0gPwoJCQkJCUV4cHIuYXR0ckhhbmRsZVsgbmFtZSBd
KCBlbGVtICkgOgoJCQkJCWVsZW1bIG5hbWUgXSAhPSBudWxsID8KCQkJCQkJZWxl
bVsgbmFtZSBdIDoKCQkJCQkJZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKSwKCQkJ
CXZhbHVlID0gcmVzdWx0ICsgIiIsCgkJCQl0eXBlID0gbWF0Y2hbMl0sCgkJCQlj
aGVjayA9IG1hdGNoWzRdOwoKCQkJcmV0dXJuIHJlc3VsdCA9PSBudWxsID8KCQkJ
CXR5cGUgPT09ICIhPSIgOgoJCQkJIXR5cGUgJiYgU2l6emxlLmF0dHIgPwoJCQkJ
cmVzdWx0ICE9IG51bGwgOgoJCQkJdHlwZSA9PT0gIj0iID8KCQkJCXZhbHVlID09
PSBjaGVjayA6CgkJCQl0eXBlID09PSAiKj0iID8KCQkJCXZhbHVlLmluZGV4T2Yo
Y2hlY2spID49IDAgOgoJCQkJdHlwZSA9PT0gIn49IiA/CgkJCQkoIiAiICsgdmFs
dWUgKyAiICIpLmluZGV4T2YoY2hlY2spID49IDAgOgoJCQkJIWNoZWNrID8KCQkJ
CXZhbHVlICYmIHJlc3VsdCAhPT0gZmFsc2UgOgoJCQkJdHlwZSA9PT0gIiE9IiA/
CgkJCQl2YWx1ZSAhPT0gY2hlY2sgOgoJCQkJdHlwZSA9PT0gIl49IiA/CgkJCQl2
YWx1ZS5pbmRleE9mKGNoZWNrKSA9PT0gMCA6CgkJCQl0eXBlID09PSAiJD0iID8K
CQkJCXZhbHVlLnN1YnN0cih2YWx1ZS5sZW5ndGggLSBjaGVjay5sZW5ndGgpID09
PSBjaGVjayA6CgkJCQl0eXBlID09PSAifD0iID8KCQkJCXZhbHVlID09PSBjaGVj
ayB8fCB2YWx1ZS5zdWJzdHIoMCwgY2hlY2subGVuZ3RoICsgMSkgPT09IGNoZWNr
ICsgIi0iIDoKCQkJCWZhbHNlOwoJCX0sCgoJCVBPUzogZnVuY3Rpb24oIGVsZW0s
IG1hdGNoLCBpLCBhcnJheSApIHsKCQkJdmFyIG5hbWUgPSBtYXRjaFsyXSwKCQkJ
CWZpbHRlciA9IEV4cHIuc2V0RmlsdGVyc1sgbmFtZSBdOwoKCQkJaWYgKCBmaWx0
ZXIgKSB7CgkJCQlyZXR1cm4gZmlsdGVyKCBlbGVtLCBpLCBtYXRjaCwgYXJyYXkg
KTsKCQkJfQoJCX0KCX0KfTsKCnZhciBvcmlnUE9TID0gRXhwci5tYXRjaC5QT1Ms
CglmZXNjYXBlID0gZnVuY3Rpb24oYWxsLCBudW0pewoJCXJldHVybiAiXFwiICsg
KG51bSAtIDAgKyAxKTsKCX07Cgpmb3IgKCB2YXIgdHlwZSBpbiBFeHByLm1hdGNo
ICkgewoJRXhwci5tYXRjaFsgdHlwZSBdID0gbmV3IFJlZ0V4cCggRXhwci5tYXRj
aFsgdHlwZSBdLnNvdXJjZSArICgvKD8hW15cW10qXF0pKD8hW15cKF0qXCkpLy5z
b3VyY2UpICk7CglFeHByLmxlZnRNYXRjaFsgdHlwZSBdID0gbmV3IFJlZ0V4cCgg
LyheKD86LnxccnxcbikqPykvLnNvdXJjZSArIEV4cHIubWF0Y2hbIHR5cGUgXS5z
b3VyY2UucmVwbGFjZSgvXFwoXGQrKS9nLCBmZXNjYXBlKSApOwp9Ci8vIEV4cG9z
ZSBvcmlnUE9TCi8vICJnbG9iYWwiIGFzIGluIHJlZ2FyZGxlc3Mgb2YgcmVsYXRp
b24gdG8gYnJhY2tldHMvcGFyZW5zCkV4cHIubWF0Y2guZ2xvYmFsUE9TID0gb3Jp
Z1BPUzsKCnZhciBtYWtlQXJyYXkgPSBmdW5jdGlvbiggYXJyYXksIHJlc3VsdHMg
KSB7CglhcnJheSA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKCBhcnJheSwg
MCApOwoKCWlmICggcmVzdWx0cyApIHsKCQlyZXN1bHRzLnB1c2guYXBwbHkoIHJl
c3VsdHMsIGFycmF5ICk7CgkJcmV0dXJuIHJlc3VsdHM7Cgl9CgoJcmV0dXJuIGFy
cmF5Owp9OwoKLy8gUGVyZm9ybSBhIHNpbXBsZSBjaGVjayB0byBkZXRlcm1pbmUg
aWYgdGhlIGJyb3dzZXIgaXMgY2FwYWJsZSBvZgovLyBjb252ZXJ0aW5nIGEgTm9k
ZUxpc3QgdG8gYW4gYXJyYXkgdXNpbmcgYnVpbHRpbiBtZXRob2RzLgovLyBBbHNv
IHZlcmlmaWVzIHRoYXQgdGhlIHJldHVybmVkIGFycmF5IGhvbGRzIERPTSBub2Rl
cwovLyAod2hpY2ggaXMgbm90IHRoZSBjYXNlIGluIHRoZSBCbGFja2JlcnJ5IGJy
b3dzZXIpCnRyeSB7CglBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCggZG9jdW1l
bnQuZG9jdW1lbnRFbGVtZW50LmNoaWxkTm9kZXMsIDAgKVswXS5ub2RlVHlwZTsK
Ci8vIFByb3ZpZGUgYSBmYWxsYmFjayBtZXRob2QgaWYgaXQgZG9lcyBub3Qgd29y
awp9IGNhdGNoKCBlICkgewoJbWFrZUFycmF5ID0gZnVuY3Rpb24oIGFycmF5LCBy
ZXN1bHRzICkgewoJCXZhciBpID0gMCwKCQkJcmV0ID0gcmVzdWx0cyB8fCBbXTsK
CgkJaWYgKCB0b1N0cmluZy5jYWxsKGFycmF5KSA9PT0gIltvYmplY3QgQXJyYXld
IiApIHsKCQkJQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoIHJldCwgYXJyYXkg
KTsKCgkJfSBlbHNlIHsKCQkJaWYgKCB0eXBlb2YgYXJyYXkubGVuZ3RoID09PSAi
bnVtYmVyIiApIHsKCQkJCWZvciAoIHZhciBsID0gYXJyYXkubGVuZ3RoOyBpIDwg
bDsgaSsrICkgewoJCQkJCXJldC5wdXNoKCBhcnJheVtpXSApOwoJCQkJfQoKCQkJ
fSBlbHNlIHsKCQkJCWZvciAoIDsgYXJyYXlbaV07IGkrKyApIHsKCQkJCQlyZXQu
cHVzaCggYXJyYXlbaV0gKTsKCQkJCX0KCQkJfQoJCX0KCgkJcmV0dXJuIHJldDsK
CX07Cn0KCnZhciBzb3J0T3JkZXIsIHNpYmxpbmdDaGVjazsKCmlmICggZG9jdW1l
bnQuZG9jdW1lbnRFbGVtZW50LmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICkgewoJ
c29ydE9yZGVyID0gZnVuY3Rpb24oIGEsIGIgKSB7CgkJaWYgKCBhID09PSBiICkg
ewoJCQloYXNEdXBsaWNhdGUgPSB0cnVlOwoJCQlyZXR1cm4gMDsKCQl9CgoJCWlm
ICggIWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gfHwgIWIuY29tcGFyZURvY3Vt
ZW50UG9zaXRpb24gKSB7CgkJCXJldHVybiBhLmNvbXBhcmVEb2N1bWVudFBvc2l0
aW9uID8gLTEgOiAxOwoJCX0KCgkJcmV0dXJuIGEuY29tcGFyZURvY3VtZW50UG9z
aXRpb24oYikgJiA0ID8gLTEgOiAxOwoJfTsKCn0gZWxzZSB7Cglzb3J0T3JkZXIg
PSBmdW5jdGlvbiggYSwgYiApIHsKCQkvLyBUaGUgbm9kZXMgYXJlIGlkZW50aWNh
bCwgd2UgY2FuIGV4aXQgZWFybHkKCQlpZiAoIGEgPT09IGIgKSB7CgkJCWhhc0R1
cGxpY2F0ZSA9IHRydWU7CgkJCXJldHVybiAwOwoKCQkvLyBGYWxsYmFjayB0byB1
c2luZyBzb3VyY2VJbmRleCAoaW4gSUUpIGlmIGl0J3MgYXZhaWxhYmxlIG9uIGJv
dGggbm9kZXMKCQl9IGVsc2UgaWYgKCBhLnNvdXJjZUluZGV4ICYmIGIuc291cmNl
SW5kZXggKSB7CgkJCXJldHVybiBhLnNvdXJjZUluZGV4IC0gYi5zb3VyY2VJbmRl
eDsKCQl9CgoJCXZhciBhbCwgYmwsCgkJCWFwID0gW10sCgkJCWJwID0gW10sCgkJ
CWF1cCA9IGEucGFyZW50Tm9kZSwKCQkJYnVwID0gYi5wYXJlbnROb2RlLAoJCQlj
dXIgPSBhdXA7CgoJCS8vIElmIHRoZSBub2RlcyBhcmUgc2libGluZ3MgKG9yIGlk
ZW50aWNhbCkgd2UgY2FuIGRvIGEgcXVpY2sgY2hlY2sKCQlpZiAoIGF1cCA9PT0g
YnVwICkgewoJCQlyZXR1cm4gc2libGluZ0NoZWNrKCBhLCBiICk7CgoJCS8vIElm
IG5vIHBhcmVudHMgd2VyZSBmb3VuZCB0aGVuIHRoZSBub2RlcyBhcmUgZGlzY29u
bmVjdGVkCgkJfSBlbHNlIGlmICggIWF1cCApIHsKCQkJcmV0dXJuIC0xOwoKCQl9
IGVsc2UgaWYgKCAhYnVwICkgewoJCQlyZXR1cm4gMTsKCQl9CgoJCS8vIE90aGVy
d2lzZSB0aGV5J3JlIHNvbWV3aGVyZSBlbHNlIGluIHRoZSB0cmVlIHNvIHdlIG5l
ZWQKCQkvLyB0byBidWlsZCB1cCBhIGZ1bGwgbGlzdCBvZiB0aGUgcGFyZW50Tm9k
ZXMgZm9yIGNvbXBhcmlzb24KCQl3aGlsZSAoIGN1ciApIHsKCQkJYXAudW5zaGlm
dCggY3VyICk7CgkJCWN1ciA9IGN1ci5wYXJlbnROb2RlOwoJCX0KCgkJY3VyID0g
YnVwOwoKCQl3aGlsZSAoIGN1ciApIHsKCQkJYnAudW5zaGlmdCggY3VyICk7CgkJ
CWN1ciA9IGN1ci5wYXJlbnROb2RlOwoJCX0KCgkJYWwgPSBhcC5sZW5ndGg7CgkJ
YmwgPSBicC5sZW5ndGg7CgoJCS8vIFN0YXJ0IHdhbGtpbmcgZG93biB0aGUgdHJl
ZSBsb29raW5nIGZvciBhIGRpc2NyZXBhbmN5CgkJZm9yICggdmFyIGkgPSAwOyBp
IDwgYWwgJiYgaSA8IGJsOyBpKysgKSB7CgkJCWlmICggYXBbaV0gIT09IGJwW2ld
ICkgewoJCQkJcmV0dXJuIHNpYmxpbmdDaGVjayggYXBbaV0sIGJwW2ldICk7CgkJ
CX0KCQl9CgoJCS8vIFdlIGVuZGVkIHNvbWVwbGFjZSB1cCB0aGUgdHJlZSBzbyBk
byBhIHNpYmxpbmcgY2hlY2sKCQlyZXR1cm4gaSA9PT0gYWwgPwoJCQlzaWJsaW5n
Q2hlY2soIGEsIGJwW2ldLCAtMSApIDoKCQkJc2libGluZ0NoZWNrKCBhcFtpXSwg
YiwgMSApOwoJfTsKCglzaWJsaW5nQ2hlY2sgPSBmdW5jdGlvbiggYSwgYiwgcmV0
ICkgewoJCWlmICggYSA9PT0gYiApIHsKCQkJcmV0dXJuIHJldDsKCQl9CgoJCXZh
ciBjdXIgPSBhLm5leHRTaWJsaW5nOwoKCQl3aGlsZSAoIGN1ciApIHsKCQkJaWYg
KCBjdXIgPT09IGIgKSB7CgkJCQlyZXR1cm4gLTE7CgkJCX0KCgkJCWN1ciA9IGN1
ci5uZXh0U2libGluZzsKCQl9CgoJCXJldHVybiAxOwoJfTsKfQoKLy8gQ2hlY2sg
dG8gc2VlIGlmIHRoZSBicm93c2VyIHJldHVybnMgZWxlbWVudHMgYnkgbmFtZSB3
aGVuCi8vIHF1ZXJ5aW5nIGJ5IGdldEVsZW1lbnRCeUlkIChhbmQgcHJvdmlkZSBh
IHdvcmthcm91bmQpCihmdW5jdGlvbigpewoJLy8gV2UncmUgZ29pbmcgdG8gaW5q
ZWN0IGEgZmFrZSBpbnB1dCBlbGVtZW50IHdpdGggYSBzcGVjaWZpZWQgbmFtZQoJ
dmFyIGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSwKCQlpZCA9
ICJzY3JpcHQiICsgKG5ldyBEYXRlKCkpLmdldFRpbWUoKSwKCQlyb290ID0gZG9j
dW1lbnQuZG9jdW1lbnRFbGVtZW50OwoKCWZvcm0uaW5uZXJIVE1MID0gIjxhIG5h
bWU9JyIgKyBpZCArICInLz4iOwoKCS8vIEluamVjdCBpdCBpbnRvIHRoZSByb290
IGVsZW1lbnQsIGNoZWNrIGl0cyBzdGF0dXMsIGFuZCByZW1vdmUgaXQgcXVpY2ts
eQoJcm9vdC5pbnNlcnRCZWZvcmUoIGZvcm0sIHJvb3QuZmlyc3RDaGlsZCApOwoK
CS8vIFRoZSB3b3JrYXJvdW5kIGhhcyB0byBkbyBhZGRpdGlvbmFsIGNoZWNrcyBh
ZnRlciBhIGdldEVsZW1lbnRCeUlkCgkvLyBXaGljaCBzbG93cyB0aGluZ3MgZG93
biBmb3Igb3RoZXIgYnJvd3NlcnMgKGhlbmNlIHRoZSBicmFuY2hpbmcpCglpZiAo
IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBpZCApICkgewoJCUV4cHIuZmluZC5J
RCA9IGZ1bmN0aW9uKCBtYXRjaCwgY29udGV4dCwgaXNYTUwgKSB7CgkJCWlmICgg
dHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQgIT09ICJ1bmRlZmluZWQiICYm
ICFpc1hNTCApIHsKCQkJCXZhciBtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCht
YXRjaFsxXSk7CgoJCQkJcmV0dXJuIG0gPwoJCQkJCW0uaWQgPT09IG1hdGNoWzFd
IHx8IHR5cGVvZiBtLmdldEF0dHJpYnV0ZU5vZGUgIT09ICJ1bmRlZmluZWQiICYm
IG0uZ2V0QXR0cmlidXRlTm9kZSgiaWQiKS5ub2RlVmFsdWUgPT09IG1hdGNoWzFd
ID8KCQkJCQkJW21dIDoKCQkJCQkJdW5kZWZpbmVkIDoKCQkJCQlbXTsKCQkJfQoJ
CX07CgoJCUV4cHIuZmlsdGVyLklEID0gZnVuY3Rpb24oIGVsZW0sIG1hdGNoICkg
ewoJCQl2YXIgbm9kZSA9IHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZU5vZGUgIT09
ICJ1bmRlZmluZWQiICYmIGVsZW0uZ2V0QXR0cmlidXRlTm9kZSgiaWQiKTsKCgkJ
CXJldHVybiBlbGVtLm5vZGVUeXBlID09PSAxICYmIG5vZGUgJiYgbm9kZS5ub2Rl
VmFsdWUgPT09IG1hdGNoOwoJCX07Cgl9CgoJcm9vdC5yZW1vdmVDaGlsZCggZm9y
bSApOwoKCS8vIHJlbGVhc2UgbWVtb3J5IGluIElFCglyb290ID0gZm9ybSA9IG51
bGw7Cn0pKCk7CgooZnVuY3Rpb24oKXsKCS8vIENoZWNrIHRvIHNlZSBpZiB0aGUg
YnJvd3NlciByZXR1cm5zIG9ubHkgZWxlbWVudHMKCS8vIHdoZW4gZG9pbmcgZ2V0
RWxlbWVudHNCeVRhZ05hbWUoIioiKQoKCS8vIENyZWF0ZSBhIGZha2UgZWxlbWVu
dAoJdmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwoJZGl2
LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVDb21tZW50KCIiKSApOwoKCS8v
IE1ha2Ugc3VyZSBubyBjb21tZW50cyBhcmUgZm91bmQKCWlmICggZGl2LmdldEVs
ZW1lbnRzQnlUYWdOYW1lKCIqIikubGVuZ3RoID4gMCApIHsKCQlFeHByLmZpbmQu
VEFHID0gZnVuY3Rpb24oIG1hdGNoLCBjb250ZXh0ICkgewoJCQl2YXIgcmVzdWx0
cyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIG1hdGNoWzFdICk7CgoJ
CQkvLyBGaWx0ZXIgb3V0IHBvc3NpYmxlIGNvbW1lbnRzCgkJCWlmICggbWF0Y2hb
MV0gPT09ICIqIiApIHsKCQkJCXZhciB0bXAgPSBbXTsKCgkJCQlmb3IgKCB2YXIg
aSA9IDA7IHJlc3VsdHNbaV07IGkrKyApIHsKCQkJCQlpZiAoIHJlc3VsdHNbaV0u
bm9kZVR5cGUgPT09IDEgKSB7CgkJCQkJCXRtcC5wdXNoKCByZXN1bHRzW2ldICk7
CgkJCQkJfQoJCQkJfQoKCQkJCXJlc3VsdHMgPSB0bXA7CgkJCX0KCgkJCXJldHVy
biByZXN1bHRzOwoJCX07Cgl9CgoJLy8gQ2hlY2sgdG8gc2VlIGlmIGFuIGF0dHJp
YnV0ZSByZXR1cm5zIG5vcm1hbGl6ZWQgaHJlZiBhdHRyaWJ1dGVzCglkaXYuaW5u
ZXJIVE1MID0gIjxhIGhyZWY9JyMnPjwvYT4iOwoKCWlmICggZGl2LmZpcnN0Q2hp
bGQgJiYgdHlwZW9mIGRpdi5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSAhPT0gInVu
ZGVmaW5lZCIgJiYKCQkJZGl2LmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKCJocmVm
IikgIT09ICIjIiApIHsKCgkJRXhwci5hdHRySGFuZGxlLmhyZWYgPSBmdW5jdGlv
biggZWxlbSApIHsKCQkJcmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCAiaHJlZiIs
IDIgKTsKCQl9OwoJfQoKCS8vIHJlbGVhc2UgbWVtb3J5IGluIElFCglkaXYgPSBu
dWxsOwp9KSgpOwoKaWYgKCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsICkgewoJ
KGZ1bmN0aW9uKCl7CgkJdmFyIG9sZFNpenpsZSA9IFNpenpsZSwKCQkJZGl2ID0g
ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksCgkJCWlkID0gIl9fc2l6emxl
X18iOwoKCQlkaXYuaW5uZXJIVE1MID0gIjxwIGNsYXNzPSdURVNUJz48L3A+IjsK
CgkJLy8gU2FmYXJpIGNhbid0IGhhbmRsZSB1cHBlcmNhc2Ugb3IgdW5pY29kZSBj
aGFyYWN0ZXJzIHdoZW4KCQkvLyBpbiBxdWlya3MgbW9kZS4KCQlpZiAoIGRpdi5x
dWVyeVNlbGVjdG9yQWxsICYmIGRpdi5xdWVyeVNlbGVjdG9yQWxsKCIuVEVTVCIp
Lmxlbmd0aCA9PT0gMCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJU2l6emxlID0gZnVu
Y3Rpb24oIHF1ZXJ5LCBjb250ZXh0LCBleHRyYSwgc2VlZCApIHsKCQkJY29udGV4
dCA9IGNvbnRleHQgfHwgZG9jdW1lbnQ7CgoJCQkvLyBPbmx5IHVzZSBxdWVyeVNl
bGVjdG9yQWxsIG9uIG5vbi1YTUwgZG9jdW1lbnRzCgkJCS8vIChJRCBzZWxlY3Rv
cnMgZG9uJ3Qgd29yayBpbiBub24tSFRNTCBkb2N1bWVudHMpCgkJCWlmICggIXNl
ZWQgJiYgIVNpenpsZS5pc1hNTChjb250ZXh0KSApIHsKCQkJCS8vIFNlZSBpZiB3
ZSBmaW5kIGEgc2VsZWN0b3IgdG8gc3BlZWQgdXAKCQkJCXZhciBtYXRjaCA9IC9e
KFx3KyQpfF5cLihbXHdcLV0rJCl8XiMoW1x3XC1dKyQpLy5leGVjKCBxdWVyeSAp
OwoKCQkJCWlmICggbWF0Y2ggJiYgKGNvbnRleHQubm9kZVR5cGUgPT09IDEgfHwg
Y29udGV4dC5ub2RlVHlwZSA9PT0gOSkgKSB7CgkJCQkJLy8gU3BlZWQtdXA6IFNp
enpsZSgiVEFHIikKCQkJCQlpZiAoIG1hdGNoWzFdICkgewoJCQkJCQlyZXR1cm4g
bWFrZUFycmF5KCBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCBxdWVyeSAp
LCBleHRyYSApOwoKCQkJCQkvLyBTcGVlZC11cDogU2l6emxlKCIuQ0xBU1MiKQoJ
CQkJCX0gZWxzZSBpZiAoIG1hdGNoWzJdICYmIEV4cHIuZmluZC5DTEFTUyAmJiBj
b250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgKSB7CgkJCQkJCXJldHVybiBt
YWtlQXJyYXkoIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSggbWF0Y2hb
Ml0gKSwgZXh0cmEgKTsKCQkJCQl9CgkJCQl9CgoJCQkJaWYgKCBjb250ZXh0Lm5v
ZGVUeXBlID09PSA5ICkgewoJCQkJCS8vIFNwZWVkLXVwOiBTaXp6bGUoImJvZHki
KQoJCQkJCS8vIFRoZSBib2R5IGVsZW1lbnQgb25seSBleGlzdHMgb25jZSwgb3B0
aW1pemUgZmluZGluZyBpdAoJCQkJCWlmICggcXVlcnkgPT09ICJib2R5IiAmJiBj
b250ZXh0LmJvZHkgKSB7CgkJCQkJCXJldHVybiBtYWtlQXJyYXkoIFsgY29udGV4
dC5ib2R5IF0sIGV4dHJhICk7CgoJCQkJCS8vIFNwZWVkLXVwOiBTaXp6bGUoIiNJ
RCIpCgkJCQkJfSBlbHNlIGlmICggbWF0Y2ggJiYgbWF0Y2hbM10gKSB7CgkJCQkJ
CXZhciBlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggbWF0Y2hbM10gKTsK
CgkJCQkJCS8vIENoZWNrIHBhcmVudE5vZGUgdG8gY2F0Y2ggd2hlbiBCbGFja2Jl
cnJ5IDQuNiByZXR1cm5zCgkJCQkJCS8vIG5vZGVzIHRoYXQgYXJlIG5vIGxvbmdl
ciBpbiB0aGUgZG9jdW1lbnQgIzY5NjMKCQkJCQkJaWYgKCBlbGVtICYmIGVsZW0u
cGFyZW50Tm9kZSApIHsKCQkJCQkJCS8vIEhhbmRsZSB0aGUgY2FzZSB3aGVyZSBJ
RSBhbmQgT3BlcmEgcmV0dXJuIGl0ZW1zCgkJCQkJCQkvLyBieSBuYW1lIGluc3Rl
YWQgb2YgSUQKCQkJCQkJCWlmICggZWxlbS5pZCA9PT0gbWF0Y2hbM10gKSB7CgkJ
CQkJCQkJcmV0dXJuIG1ha2VBcnJheSggWyBlbGVtIF0sIGV4dHJhICk7CgkJCQkJ
CQl9CgoJCQkJCQl9IGVsc2UgewoJCQkJCQkJcmV0dXJuIG1ha2VBcnJheSggW10s
IGV4dHJhICk7CgkJCQkJCX0KCQkJCQl9CgoJCQkJCXRyeSB7CgkJCQkJCXJldHVy
biBtYWtlQXJyYXkoIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbChxdWVyeSksIGV4
dHJhICk7CgkJCQkJfSBjYXRjaChxc2FFcnJvcikge30KCgkJCQkvLyBxU0Egd29y
a3Mgc3RyYW5nZWx5IG9uIEVsZW1lbnQtcm9vdGVkIHF1ZXJpZXMKCQkJCS8vIFdl
IGNhbiB3b3JrIGFyb3VuZCB0aGlzIGJ5IHNwZWNpZnlpbmcgYW4gZXh0cmEgSUQg
b24gdGhlIHJvb3QKCQkJCS8vIGFuZCB3b3JraW5nIHVwIGZyb20gdGhlcmUgKFRo
YW5rcyB0byBBbmRyZXcgRHVwb250IGZvciB0aGUgdGVjaG5pcXVlKQoJCQkJLy8g
SUUgOCBkb2Vzbid0IHdvcmsgb24gb2JqZWN0IGVsZW1lbnRzCgkJCQl9IGVsc2Ug
aWYgKCBjb250ZXh0Lm5vZGVUeXBlID09PSAxICYmIGNvbnRleHQubm9kZU5hbWUu
dG9Mb3dlckNhc2UoKSAhPT0gIm9iamVjdCIgKSB7CgkJCQkJdmFyIG9sZENvbnRl
eHQgPSBjb250ZXh0LAoJCQkJCQlvbGQgPSBjb250ZXh0LmdldEF0dHJpYnV0ZSgg
ImlkIiApLAoJCQkJCQluaWQgPSBvbGQgfHwgaWQsCgkJCQkJCWhhc1BhcmVudCA9
IGNvbnRleHQucGFyZW50Tm9kZSwKCQkJCQkJcmVsYXRpdmVIaWVyYXJjaHlTZWxl
Y3RvciA9IC9eXHMqWyt+XS8udGVzdCggcXVlcnkgKTsKCgkJCQkJaWYgKCAhb2xk
ICkgewoJCQkJCQljb250ZXh0LnNldEF0dHJpYnV0ZSggImlkIiwgbmlkICk7CgkJ
CQkJfSBlbHNlIHsKCQkJCQkJbmlkID0gbmlkLnJlcGxhY2UoIC8nL2csICJcXCQm
IiApOwoJCQkJCX0KCQkJCQlpZiAoIHJlbGF0aXZlSGllcmFyY2h5U2VsZWN0b3Ig
JiYgaGFzUGFyZW50ICkgewoJCQkJCQljb250ZXh0ID0gY29udGV4dC5wYXJlbnRO
b2RlOwoJCQkJCX0KCgkJCQkJdHJ5IHsKCQkJCQkJaWYgKCAhcmVsYXRpdmVIaWVy
YXJjaHlTZWxlY3RvciB8fCBoYXNQYXJlbnQgKSB7CgkJCQkJCQlyZXR1cm4gbWFr
ZUFycmF5KCBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoICJbaWQ9JyIgKyBuaWQg
KyAiJ10gIiArIHF1ZXJ5ICksIGV4dHJhICk7CgkJCQkJCX0KCgkJCQkJfSBjYXRj
aChwc2V1ZG9FcnJvcikgewoJCQkJCX0gZmluYWxseSB7CgkJCQkJCWlmICggIW9s
ZCApIHsKCQkJCQkJCW9sZENvbnRleHQucmVtb3ZlQXR0cmlidXRlKCAiaWQiICk7
CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCgkJCXJldHVybiBvbGRTaXp6bGUo
cXVlcnksIGNvbnRleHQsIGV4dHJhLCBzZWVkKTsKCQl9OwoKCQlmb3IgKCB2YXIg
cHJvcCBpbiBvbGRTaXp6bGUgKSB7CgkJCVNpenpsZVsgcHJvcCBdID0gb2xkU2l6
emxlWyBwcm9wIF07CgkJfQoKCQkvLyByZWxlYXNlIG1lbW9yeSBpbiBJRQoJCWRp
diA9IG51bGw7Cgl9KSgpOwp9CgooZnVuY3Rpb24oKXsKCXZhciBodG1sID0gZG9j
dW1lbnQuZG9jdW1lbnRFbGVtZW50LAoJCW1hdGNoZXMgPSBodG1sLm1hdGNoZXNT
ZWxlY3RvciB8fCBodG1sLm1vek1hdGNoZXNTZWxlY3RvciB8fCBodG1sLndlYmtp
dE1hdGNoZXNTZWxlY3RvciB8fCBodG1sLm1zTWF0Y2hlc1NlbGVjdG9yOwoKCWlm
ICggbWF0Y2hlcyApIHsKCQkvLyBDaGVjayB0byBzZWUgaWYgaXQncyBwb3NzaWJs
ZSB0byBkbyBtYXRjaGVzU2VsZWN0b3IKCQkvLyBvbiBhIGRpc2Nvbm5lY3RlZCBu
b2RlIChJRSA5IGZhaWxzIHRoaXMpCgkJdmFyIGRpc2Nvbm5lY3RlZE1hdGNoID0g
IW1hdGNoZXMuY2FsbCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImRpdiIgKSwg
ImRpdiIgKSwKCQkJcHNldWRvV29ya3MgPSBmYWxzZTsKCgkJdHJ5IHsKCQkJLy8g
VGhpcyBzaG91bGQgZmFpbCB3aXRoIGFuIGV4Y2VwdGlvbgoJCQkvLyBHZWNrbyBk
b2VzIG5vdCBlcnJvciwgcmV0dXJucyBmYWxzZSBpbnN0ZWFkCgkJCW1hdGNoZXMu
Y2FsbCggZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCAiW3Rlc3QhPScnXTpzaXp6
bGUiICk7CgoJCX0gY2F0Y2goIHBzZXVkb0Vycm9yICkgewoJCQlwc2V1ZG9Xb3Jr
cyA9IHRydWU7CgkJfQoKCQlTaXp6bGUubWF0Y2hlc1NlbGVjdG9yID0gZnVuY3Rp
b24oIG5vZGUsIGV4cHIgKSB7CgkJCS8vIE1ha2Ugc3VyZSB0aGF0IGF0dHJpYnV0
ZSBzZWxlY3RvcnMgYXJlIHF1b3RlZAoJCQlleHByID0gZXhwci5yZXBsYWNlKC9c
PVxzKihbXiciXF1dKilccypcXS9nLCAiPSckMSddIik7CgoJCQlpZiAoICFTaXp6
bGUuaXNYTUwoIG5vZGUgKSApIHsKCQkJCXRyeSB7CgkJCQkJaWYgKCBwc2V1ZG9X
b3JrcyB8fCAhRXhwci5tYXRjaC5QU0VVRE8udGVzdCggZXhwciApICYmICEvIT0v
LnRlc3QoIGV4cHIgKSApIHsKCQkJCQkJdmFyIHJldCA9IG1hdGNoZXMuY2FsbCgg
bm9kZSwgZXhwciApOwoKCQkJCQkJLy8gSUUgOSdzIG1hdGNoZXNTZWxlY3RvciBy
ZXR1cm5zIGZhbHNlIG9uIGRpc2Nvbm5lY3RlZCBub2RlcwoJCQkJCQlpZiAoIHJl
dCB8fCAhZGlzY29ubmVjdGVkTWF0Y2ggfHwKCQkJCQkJCQkvLyBBcyB3ZWxsLCBk
aXNjb25uZWN0ZWQgbm9kZXMgYXJlIHNhaWQgdG8gYmUgaW4gYSBkb2N1bWVudAoJ
CQkJCQkJCS8vIGZyYWdtZW50IGluIElFIDksIHNvIGNoZWNrIGZvciB0aGF0CgkJ
CQkJCQkJbm9kZS5kb2N1bWVudCAmJiBub2RlLmRvY3VtZW50Lm5vZGVUeXBlICE9
PSAxMSApIHsKCQkJCQkJCXJldHVybiByZXQ7CgkJCQkJCX0KCQkJCQl9CgkJCQl9
IGNhdGNoKGUpIHt9CgkJCX0KCgkJCXJldHVybiBTaXp6bGUoZXhwciwgbnVsbCwg
bnVsbCwgW25vZGVdKS5sZW5ndGggPiAwOwoJCX07Cgl9Cn0pKCk7CgooZnVuY3Rp
b24oKXsKCXZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsK
CglkaXYuaW5uZXJIVE1MID0gIjxkaXYgY2xhc3M9J3Rlc3QgZSc+PC9kaXY+PGRp
diBjbGFzcz0ndGVzdCc+PC9kaXY+IjsKCgkvLyBPcGVyYSBjYW4ndCBmaW5kIGEg
c2Vjb25kIGNsYXNzbmFtZSAoaW4gOS42KQoJLy8gQWxzbywgbWFrZSBzdXJlIHRo
YXQgZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSBhY3R1YWxseSBleGlzdHMKCWlmICgg
IWRpdi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lIHx8IGRpdi5nZXRFbGVtZW50c0J5
Q2xhc3NOYW1lKCJlIikubGVuZ3RoID09PSAwICkgewoJCXJldHVybjsKCX0KCgkv
LyBTYWZhcmkgY2FjaGVzIGNsYXNzIGF0dHJpYnV0ZXMsIGRvZXNuJ3QgY2F0Y2gg
Y2hhbmdlcyAoaW4gMy4yKQoJZGl2Lmxhc3RDaGlsZC5jbGFzc05hbWUgPSAiZSI7
CgoJaWYgKCBkaXYuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZSIpLmxlbmd0aCA9
PT0gMSApIHsKCQlyZXR1cm47Cgl9CgoJRXhwci5vcmRlci5zcGxpY2UoMSwgMCwg
IkNMQVNTIik7CglFeHByLmZpbmQuQ0xBU1MgPSBmdW5jdGlvbiggbWF0Y2gsIGNv
bnRleHQsIGlzWE1MICkgewoJCWlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVu
dHNCeUNsYXNzTmFtZSAhPT0gInVuZGVmaW5lZCIgJiYgIWlzWE1MICkgewoJCQly
ZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKG1hdGNoWzFdKTsK
CQl9Cgl9OwoKCS8vIHJlbGVhc2UgbWVtb3J5IGluIElFCglkaXYgPSBudWxsOwp9
KSgpOwoKZnVuY3Rpb24gZGlyTm9kZUNoZWNrKCBkaXIsIGN1ciwgZG9uZU5hbWUs
IGNoZWNrU2V0LCBub2RlQ2hlY2ssIGlzWE1MICkgewoJZm9yICggdmFyIGkgPSAw
LCBsID0gY2hlY2tTZXQubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCXZhciBlbGVt
ID0gY2hlY2tTZXRbaV07CgoJCWlmICggZWxlbSApIHsKCQkJdmFyIG1hdGNoID0g
ZmFsc2U7CgoJCQllbGVtID0gZWxlbVtkaXJdOwoKCQkJd2hpbGUgKCBlbGVtICkg
ewoJCQkJaWYgKCBlbGVtWyBleHBhbmRvIF0gPT09IGRvbmVOYW1lICkgewoJCQkJ
CW1hdGNoID0gY2hlY2tTZXRbZWxlbS5zaXpzZXRdOwoJCQkJCWJyZWFrOwoJCQkJ
fQoKCQkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAhaXNYTUwgKXsKCQkJ
CQllbGVtWyBleHBhbmRvIF0gPSBkb25lTmFtZTsKCQkJCQllbGVtLnNpenNldCA9
IGk7CgkJCQl9CgoJCQkJaWYgKCBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkg
PT09IGN1ciApIHsKCQkJCQltYXRjaCA9IGVsZW07CgkJCQkJYnJlYWs7CgkJCQl9
CgoJCQkJZWxlbSA9IGVsZW1bZGlyXTsKCQkJfQoKCQkJY2hlY2tTZXRbaV0gPSBt
YXRjaDsKCQl9Cgl9Cn0KCmZ1bmN0aW9uIGRpckNoZWNrKCBkaXIsIGN1ciwgZG9u
ZU5hbWUsIGNoZWNrU2V0LCBub2RlQ2hlY2ssIGlzWE1MICkgewoJZm9yICggdmFy
IGkgPSAwLCBsID0gY2hlY2tTZXQubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCXZh
ciBlbGVtID0gY2hlY2tTZXRbaV07CgoJCWlmICggZWxlbSApIHsKCQkJdmFyIG1h
dGNoID0gZmFsc2U7CgoJCQllbGVtID0gZWxlbVtkaXJdOwoKCQkJd2hpbGUgKCBl
bGVtICkgewoJCQkJaWYgKCBlbGVtWyBleHBhbmRvIF0gPT09IGRvbmVOYW1lICkg
ewoJCQkJCW1hdGNoID0gY2hlY2tTZXRbZWxlbS5zaXpzZXRdOwoJCQkJCWJyZWFr
OwoJCQkJfQoKCQkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHsKCQkJCQlp
ZiAoICFpc1hNTCApIHsKCQkJCQkJZWxlbVsgZXhwYW5kbyBdID0gZG9uZU5hbWU7
CgkJCQkJCWVsZW0uc2l6c2V0ID0gaTsKCQkJCQl9CgoJCQkJCWlmICggdHlwZW9m
IGN1ciAhPT0gInN0cmluZyIgKSB7CgkJCQkJCWlmICggZWxlbSA9PT0gY3VyICkg
ewoJCQkJCQkJbWF0Y2ggPSB0cnVlOwoJCQkJCQkJYnJlYWs7CgkJCQkJCX0KCgkJ
CQkJfSBlbHNlIGlmICggU2l6emxlLmZpbHRlciggY3VyLCBbZWxlbV0gKS5sZW5n
dGggPiAwICkgewoJCQkJCQltYXRjaCA9IGVsZW07CgkJCQkJCWJyZWFrOwoJCQkJ
CX0KCQkJCX0KCgkJCQllbGVtID0gZWxlbVtkaXJdOwoJCQl9CgoJCQljaGVja1Nl
dFtpXSA9IG1hdGNoOwoJCX0KCX0KfQoKaWYgKCBkb2N1bWVudC5kb2N1bWVudEVs
ZW1lbnQuY29udGFpbnMgKSB7CglTaXp6bGUuY29udGFpbnMgPSBmdW5jdGlvbigg
YSwgYiApIHsKCQlyZXR1cm4gYSAhPT0gYiAmJiAoYS5jb250YWlucyA/IGEuY29u
dGFpbnMoYikgOiB0cnVlKTsKCX07Cgp9IGVsc2UgaWYgKCBkb2N1bWVudC5kb2N1
bWVudEVsZW1lbnQuY29tcGFyZURvY3VtZW50UG9zaXRpb24gKSB7CglTaXp6bGUu
Y29udGFpbnMgPSBmdW5jdGlvbiggYSwgYiApIHsKCQlyZXR1cm4gISEoYS5jb21w
YXJlRG9jdW1lbnRQb3NpdGlvbihiKSAmIDE2KTsKCX07Cgp9IGVsc2UgewoJU2l6
emxlLmNvbnRhaW5zID0gZnVuY3Rpb24oKSB7CgkJcmV0dXJuIGZhbHNlOwoJfTsK
fQoKU2l6emxlLmlzWE1MID0gZnVuY3Rpb24oIGVsZW0gKSB7CgkvLyBkb2N1bWVu
dEVsZW1lbnQgaXMgdmVyaWZpZWQgZm9yIGNhc2VzIHdoZXJlIGl0IGRvZXNuJ3Qg
eWV0IGV4aXN0CgkvLyAoc3VjaCBhcyBsb2FkaW5nIGlmcmFtZXMgaW4gSUUgLSAj
NDgzMykKCXZhciBkb2N1bWVudEVsZW1lbnQgPSAoZWxlbSA/IGVsZW0ub3duZXJE
b2N1bWVudCB8fCBlbGVtIDogMCkuZG9jdW1lbnRFbGVtZW50OwoKCXJldHVybiBk
b2N1bWVudEVsZW1lbnQgPyBkb2N1bWVudEVsZW1lbnQubm9kZU5hbWUgIT09ICJI
VE1MIiA6IGZhbHNlOwp9OwoKdmFyIHBvc1Byb2Nlc3MgPSBmdW5jdGlvbiggc2Vs
ZWN0b3IsIGNvbnRleHQsIHNlZWQgKSB7Cgl2YXIgbWF0Y2gsCgkJdG1wU2V0ID0g
W10sCgkJbGF0ZXIgPSAiIiwKCQlyb290ID0gY29udGV4dC5ub2RlVHlwZSA/IFtj
b250ZXh0XSA6IGNvbnRleHQ7CgoJLy8gUG9zaXRpb24gc2VsZWN0b3JzIG11c3Qg
YmUgZG9uZSBhZnRlciB0aGUgZmlsdGVyCgkvLyBBbmQgc28gbXVzdCA6bm90KHBv
c2l0aW9uYWwpIHNvIHdlIG1vdmUgYWxsIFBTRVVET3MgdG8gdGhlIGVuZAoJd2hp
bGUgKCAobWF0Y2ggPSBFeHByLm1hdGNoLlBTRVVETy5leGVjKCBzZWxlY3RvciAp
KSApIHsKCQlsYXRlciArPSBtYXRjaFswXTsKCQlzZWxlY3RvciA9IHNlbGVjdG9y
LnJlcGxhY2UoIEV4cHIubWF0Y2guUFNFVURPLCAiIiApOwoJfQoKCXNlbGVjdG9y
ID0gRXhwci5yZWxhdGl2ZVtzZWxlY3Rvcl0gPyBzZWxlY3RvciArICIqIiA6IHNl
bGVjdG9yOwoKCWZvciAoIHZhciBpID0gMCwgbCA9IHJvb3QubGVuZ3RoOyBpIDwg
bDsgaSsrICkgewoJCVNpenpsZSggc2VsZWN0b3IsIHJvb3RbaV0sIHRtcFNldCwg
c2VlZCApOwoJfQoKCXJldHVybiBTaXp6bGUuZmlsdGVyKCBsYXRlciwgdG1wU2V0
ICk7Cn07CgovLyBFWFBPU0UKLy8gT3ZlcnJpZGUgc2l6emxlIGF0dHJpYnV0ZSBy
ZXRyaWV2YWwKU2l6emxlLmF0dHIgPSBqUXVlcnkuYXR0cjsKU2l6emxlLnNlbGVj
dG9ycy5hdHRyTWFwID0ge307CmpRdWVyeS5maW5kID0gU2l6emxlOwpqUXVlcnku
ZXhwciA9IFNpenpsZS5zZWxlY3RvcnM7CmpRdWVyeS5leHByWyI6Il0gPSBqUXVl
cnkuZXhwci5maWx0ZXJzOwpqUXVlcnkudW5pcXVlID0gU2l6emxlLnVuaXF1ZVNv
cnQ7CmpRdWVyeS50ZXh0ID0gU2l6emxlLmdldFRleHQ7CmpRdWVyeS5pc1hNTERv
YyA9IFNpenpsZS5pc1hNTDsKalF1ZXJ5LmNvbnRhaW5zID0gU2l6emxlLmNvbnRh
aW5zOwoKCn0pKCk7CgoKdmFyIHJ1bnRpbCA9IC9VbnRpbCQvLAoJcnBhcmVudHNw
cmV2ID0gL14oPzpwYXJlbnRzfHByZXZVbnRpbHxwcmV2QWxsKS8sCgkvLyBOb3Rl
OiBUaGlzIFJlZ0V4cCBzaG91bGQgYmUgaW1wcm92ZWQsIG9yIGxpa2VseSBwdWxs
ZWQgZnJvbSBTaXp6bGUKCXJtdWx0aXNlbGVjdG9yID0gLywvLAoJaXNTaW1wbGUg
PSAvXi5bXjojXFtcLixdKiQvLAoJc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xp
Y2UsCglQT1MgPSBqUXVlcnkuZXhwci5tYXRjaC5nbG9iYWxQT1MsCgkvLyBtZXRo
b2RzIGd1YXJhbnRlZWQgdG8gcHJvZHVjZSBhIHVuaXF1ZSBzZXQgd2hlbiBzdGFy
dGluZyBmcm9tIGEgdW5pcXVlIHNldAoJZ3VhcmFudGVlZFVuaXF1ZSA9IHsKCQlj
aGlsZHJlbjogdHJ1ZSwKCQljb250ZW50czogdHJ1ZSwKCQluZXh0OiB0cnVlLAoJ
CXByZXY6IHRydWUKCX07CgpqUXVlcnkuZm4uZXh0ZW5kKHsKCWZpbmQ6IGZ1bmN0
aW9uKCBzZWxlY3RvciApIHsKCQl2YXIgc2VsZiA9IHRoaXMsCgkJCWksIGw7CgoJ
CWlmICggdHlwZW9mIHNlbGVjdG9yICE9PSAic3RyaW5nIiApIHsKCQkJcmV0dXJu
IGpRdWVyeSggc2VsZWN0b3IgKS5maWx0ZXIoZnVuY3Rpb24oKSB7CgkJCQlmb3Ig
KCBpID0gMCwgbCA9IHNlbGYubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCQkJCWlm
ICggalF1ZXJ5LmNvbnRhaW5zKCBzZWxmWyBpIF0sIHRoaXMgKSApIHsKCQkJCQkJ
cmV0dXJuIHRydWU7CgkJCQkJfQoJCQkJfQoJCQl9KTsKCQl9CgoJCXZhciByZXQg
PSB0aGlzLnB1c2hTdGFjayggIiIsICJmaW5kIiwgc2VsZWN0b3IgKSwKCQkJbGVu
Z3RoLCBuLCByOwoKCQlmb3IgKCBpID0gMCwgbCA9IHRoaXMubGVuZ3RoOyBpIDwg
bDsgaSsrICkgewoJCQlsZW5ndGggPSByZXQubGVuZ3RoOwoJCQlqUXVlcnkuZmlu
ZCggc2VsZWN0b3IsIHRoaXNbaV0sIHJldCApOwoKCQkJaWYgKCBpID4gMCApIHsK
CQkJCS8vIE1ha2Ugc3VyZSB0aGF0IHRoZSByZXN1bHRzIGFyZSB1bmlxdWUKCQkJ
CWZvciAoIG4gPSBsZW5ndGg7IG4gPCByZXQubGVuZ3RoOyBuKysgKSB7CgkJCQkJ
Zm9yICggciA9IDA7IHIgPCBsZW5ndGg7IHIrKyApIHsKCQkJCQkJaWYgKCByZXRb
cl0gPT09IHJldFtuXSApIHsKCQkJCQkJCXJldC5zcGxpY2Uobi0tLCAxKTsKCQkJ
CQkJCWJyZWFrOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoKCQlyZXR1
cm4gcmV0OwoJfSwKCgloYXM6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7CgkJdmFyIHRh
cmdldHMgPSBqUXVlcnkoIHRhcmdldCApOwoJCXJldHVybiB0aGlzLmZpbHRlcihm
dW5jdGlvbigpIHsKCQkJZm9yICggdmFyIGkgPSAwLCBsID0gdGFyZ2V0cy5sZW5n
dGg7IGkgPCBsOyBpKysgKSB7CgkJCQlpZiAoIGpRdWVyeS5jb250YWlucyggdGhp
cywgdGFyZ2V0c1tpXSApICkgewoJCQkJCXJldHVybiB0cnVlOwoJCQkJfQoJCQl9
CgkJfSk7Cgl9LAoKCW5vdDogZnVuY3Rpb24oIHNlbGVjdG9yICkgewoJCXJldHVy
biB0aGlzLnB1c2hTdGFjayggd2lubm93KHRoaXMsIHNlbGVjdG9yLCBmYWxzZSks
ICJub3QiLCBzZWxlY3Rvcik7Cgl9LAoKCWZpbHRlcjogZnVuY3Rpb24oIHNlbGVj
dG9yICkgewoJCXJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KHRoaXMsIHNl
bGVjdG9yLCB0cnVlKSwgImZpbHRlciIsIHNlbGVjdG9yICk7Cgl9LAoKCWlzOiBm
dW5jdGlvbiggc2VsZWN0b3IgKSB7CgkJcmV0dXJuICEhc2VsZWN0b3IgJiYgKAoJ
CQl0eXBlb2Ygc2VsZWN0b3IgPT09ICJzdHJpbmciID8KCQkJCS8vIElmIHRoaXMg
aXMgYSBwb3NpdGlvbmFsIHNlbGVjdG9yLCBjaGVjayBtZW1iZXJzaGlwIGluIHRo
ZSByZXR1cm5lZCBzZXQKCQkJCS8vIHNvICQoInA6Zmlyc3QiKS5pcygicDpsYXN0
Iikgd29uJ3QgcmV0dXJuIHRydWUgZm9yIGEgZG9jIHdpdGggdHdvICJwIi4KCQkJ
CVBPUy50ZXN0KCBzZWxlY3RvciApID8KCQkJCQlqUXVlcnkoIHNlbGVjdG9yLCB0
aGlzLmNvbnRleHQgKS5pbmRleCggdGhpc1swXSApID49IDAgOgoJCQkJCWpRdWVy
eS5maWx0ZXIoIHNlbGVjdG9yLCB0aGlzICkubGVuZ3RoID4gMCA6CgkJCQl0aGlz
LmZpbHRlciggc2VsZWN0b3IgKS5sZW5ndGggPiAwICk7Cgl9LAoKCWNsb3Nlc3Q6
IGZ1bmN0aW9uKCBzZWxlY3RvcnMsIGNvbnRleHQgKSB7CgkJdmFyIHJldCA9IFtd
LCBpLCBsLCBjdXIgPSB0aGlzWzBdOwoKCQkvLyBBcnJheSAoZGVwcmVjYXRlZCBh
cyBvZiBqUXVlcnkgMS43KQoJCWlmICggalF1ZXJ5LmlzQXJyYXkoIHNlbGVjdG9y
cyApICkgewoJCQl2YXIgbGV2ZWwgPSAxOwoKCQkJd2hpbGUgKCBjdXIgJiYgY3Vy
Lm93bmVyRG9jdW1lbnQgJiYgY3VyICE9PSBjb250ZXh0ICkgewoJCQkJZm9yICgg
aSA9IDA7IGkgPCBzZWxlY3RvcnMubGVuZ3RoOyBpKysgKSB7CgoJCQkJCWlmICgg
alF1ZXJ5KCBjdXIgKS5pcyggc2VsZWN0b3JzWyBpIF0gKSApIHsKCQkJCQkJcmV0
LnB1c2goeyBzZWxlY3Rvcjogc2VsZWN0b3JzWyBpIF0sIGVsZW06IGN1ciwgbGV2
ZWw6IGxldmVsIH0pOwoJCQkJCX0KCQkJCX0KCgkJCQljdXIgPSBjdXIucGFyZW50
Tm9kZTsKCQkJCWxldmVsKys7CgkJCX0KCgkJCXJldHVybiByZXQ7CgkJfQoKCQkv
LyBTdHJpbmcKCQl2YXIgcG9zID0gUE9TLnRlc3QoIHNlbGVjdG9ycyApIHx8IHR5
cGVvZiBzZWxlY3RvcnMgIT09ICJzdHJpbmciID8KCQkJCWpRdWVyeSggc2VsZWN0
b3JzLCBjb250ZXh0IHx8IHRoaXMuY29udGV4dCApIDoKCQkJCTA7CgoJCWZvciAo
IGkgPSAwLCBsID0gdGhpcy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7CgkJCWN1ciA9
IHRoaXNbaV07CgoJCQl3aGlsZSAoIGN1ciApIHsKCQkJCWlmICggcG9zID8gcG9z
LmluZGV4KGN1cikgPiAtMSA6IGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3Rvcihj
dXIsIHNlbGVjdG9ycykgKSB7CgkJCQkJcmV0LnB1c2goIGN1ciApOwoJCQkJCWJy
ZWFrOwoKCQkJCX0gZWxzZSB7CgkJCQkJY3VyID0gY3VyLnBhcmVudE5vZGU7CgkJ
CQkJaWYgKCAhY3VyIHx8ICFjdXIub3duZXJEb2N1bWVudCB8fCBjdXIgPT09IGNv
bnRleHQgfHwgY3VyLm5vZGVUeXBlID09PSAxMSApIHsKCQkJCQkJYnJlYWs7CgkJ
CQkJfQoJCQkJfQoJCQl9CgkJfQoKCQlyZXQgPSByZXQubGVuZ3RoID4gMSA/IGpR
dWVyeS51bmlxdWUoIHJldCApIDogcmV0OwoKCQlyZXR1cm4gdGhpcy5wdXNoU3Rh
Y2soIHJldCwgImNsb3Nlc3QiLCBzZWxlY3RvcnMgKTsKCX0sCgoJLy8gRGV0ZXJt
aW5lIHRoZSBwb3NpdGlvbiBvZiBhbiBlbGVtZW50IHdpdGhpbgoJLy8gdGhlIG1h
dGNoZWQgc2V0IG9mIGVsZW1lbnRzCglpbmRleDogZnVuY3Rpb24oIGVsZW0gKSB7
CgoJCS8vIE5vIGFyZ3VtZW50LCByZXR1cm4gaW5kZXggaW4gcGFyZW50CgkJaWYg
KCAhZWxlbSApIHsKCQkJcmV0dXJuICggdGhpc1swXSAmJiB0aGlzWzBdLnBhcmVu
dE5vZGUgKSA/IHRoaXMucHJldkFsbCgpLmxlbmd0aCA6IC0xOwoJCX0KCgkJLy8g
aW5kZXggaW4gc2VsZWN0b3IKCQlpZiAoIHR5cGVvZiBlbGVtID09PSAic3RyaW5n
IiApIHsKCQkJcmV0dXJuIGpRdWVyeS5pbkFycmF5KCB0aGlzWzBdLCBqUXVlcnko
IGVsZW0gKSApOwoJCX0KCgkJLy8gTG9jYXRlIHRoZSBwb3NpdGlvbiBvZiB0aGUg
ZGVzaXJlZCBlbGVtZW50CgkJcmV0dXJuIGpRdWVyeS5pbkFycmF5KAoJCQkvLyBJ
ZiBpdCByZWNlaXZlcyBhIGpRdWVyeSBvYmplY3QsIHRoZSBmaXJzdCBlbGVtZW50
IGlzIHVzZWQKCQkJZWxlbS5qcXVlcnkgPyBlbGVtWzBdIDogZWxlbSwgdGhpcyAp
OwoJfSwKCglhZGQ6IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHsKCQl2
YXIgc2V0ID0gdHlwZW9mIHNlbGVjdG9yID09PSAic3RyaW5nIiA/CgkJCQlqUXVl
cnkoIHNlbGVjdG9yLCBjb250ZXh0ICkgOgoJCQkJalF1ZXJ5Lm1ha2VBcnJheSgg
c2VsZWN0b3IgJiYgc2VsZWN0b3Iubm9kZVR5cGUgPyBbIHNlbGVjdG9yIF0gOiBz
ZWxlY3RvciApLAoJCQlhbGwgPSBqUXVlcnkubWVyZ2UoIHRoaXMuZ2V0KCksIHNl
dCApOwoKCQlyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGlzRGlzY29ubmVjdGVkKCBz
ZXRbMF0gKSB8fCBpc0Rpc2Nvbm5lY3RlZCggYWxsWzBdICkgPwoJCQlhbGwgOgoJ
CQlqUXVlcnkudW5pcXVlKCBhbGwgKSApOwoJfSwKCglhbmRTZWxmOiBmdW5jdGlv
bigpIHsKCQlyZXR1cm4gdGhpcy5hZGQoIHRoaXMucHJldk9iamVjdCApOwoJfQp9
KTsKCi8vIEEgcGFpbmZ1bGx5IHNpbXBsZSBjaGVjayB0byBzZWUgaWYgYW4gZWxl
bWVudCBpcyBkaXNjb25uZWN0ZWQKLy8gZnJvbSBhIGRvY3VtZW50IChzaG91bGQg
YmUgaW1wcm92ZWQsIHdoZXJlIGZlYXNpYmxlKS4KZnVuY3Rpb24gaXNEaXNjb25u
ZWN0ZWQoIG5vZGUgKSB7CglyZXR1cm4gIW5vZGUgfHwgIW5vZGUucGFyZW50Tm9k
ZSB8fCBub2RlLnBhcmVudE5vZGUubm9kZVR5cGUgPT09IDExOwp9CgpqUXVlcnku
ZWFjaCh7CglwYXJlbnQ6IGZ1bmN0aW9uKCBlbGVtICkgewoJCXZhciBwYXJlbnQg
PSBlbGVtLnBhcmVudE5vZGU7CgkJcmV0dXJuIHBhcmVudCAmJiBwYXJlbnQubm9k
ZVR5cGUgIT09IDExID8gcGFyZW50IDogbnVsbDsKCX0sCglwYXJlbnRzOiBmdW5j
dGlvbiggZWxlbSApIHsKCQlyZXR1cm4galF1ZXJ5LmRpciggZWxlbSwgInBhcmVu
dE5vZGUiICk7Cgl9LAoJcGFyZW50c1VudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwg
dW50aWwgKSB7CgkJcmV0dXJuIGpRdWVyeS5kaXIoIGVsZW0sICJwYXJlbnROb2Rl
IiwgdW50aWwgKTsKCX0sCgluZXh0OiBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1
cm4galF1ZXJ5Lm50aCggZWxlbSwgMiwgIm5leHRTaWJsaW5nIiApOwoJfSwKCXBy
ZXY6IGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiBqUXVlcnkubnRoKCBlbGVt
LCAyLCAicHJldmlvdXNTaWJsaW5nIiApOwoJfSwKCW5leHRBbGw6IGZ1bmN0aW9u
KCBlbGVtICkgewoJCXJldHVybiBqUXVlcnkuZGlyKCBlbGVtLCAibmV4dFNpYmxp
bmciICk7Cgl9LAoJcHJldkFsbDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJcmV0dXJu
IGpRdWVyeS5kaXIoIGVsZW0sICJwcmV2aW91c1NpYmxpbmciICk7Cgl9LAoJbmV4
dFVudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7CgkJcmV0dXJuIGpR
dWVyeS5kaXIoIGVsZW0sICJuZXh0U2libGluZyIsIHVudGlsICk7Cgl9LAoJcHJl
dlVudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7CgkJcmV0dXJuIGpR
dWVyeS5kaXIoIGVsZW0sICJwcmV2aW91c1NpYmxpbmciLCB1bnRpbCApOwoJfSwK
CXNpYmxpbmdzOiBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4galF1ZXJ5LnNp
YmxpbmcoICggZWxlbS5wYXJlbnROb2RlIHx8IHt9ICkuZmlyc3RDaGlsZCwgZWxl
bSApOwoJfSwKCWNoaWxkcmVuOiBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4g
alF1ZXJ5LnNpYmxpbmcoIGVsZW0uZmlyc3RDaGlsZCApOwoJfSwKCWNvbnRlbnRz
OiBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4galF1ZXJ5Lm5vZGVOYW1lKCBl
bGVtLCAiaWZyYW1lIiApID8KCQkJZWxlbS5jb250ZW50RG9jdW1lbnQgfHwgZWxl
bS5jb250ZW50V2luZG93LmRvY3VtZW50IDoKCQkJalF1ZXJ5Lm1ha2VBcnJheSgg
ZWxlbS5jaGlsZE5vZGVzICk7Cgl9Cn0sIGZ1bmN0aW9uKCBuYW1lLCBmbiApIHsK
CWpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHVudGlsLCBzZWxlY3RvciAp
IHsKCQl2YXIgcmV0ID0galF1ZXJ5Lm1hcCggdGhpcywgZm4sIHVudGlsICk7CgoJ
CWlmICggIXJ1bnRpbC50ZXN0KCBuYW1lICkgKSB7CgkJCXNlbGVjdG9yID0gdW50
aWw7CgkJfQoKCQlpZiAoIHNlbGVjdG9yICYmIHR5cGVvZiBzZWxlY3RvciA9PT0g
InN0cmluZyIgKSB7CgkJCXJldCA9IGpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCBy
ZXQgKTsKCQl9CgoJCXJldCA9IHRoaXMubGVuZ3RoID4gMSAmJiAhZ3VhcmFudGVl
ZFVuaXF1ZVsgbmFtZSBdID8galF1ZXJ5LnVuaXF1ZSggcmV0ICkgOiByZXQ7CgoJ
CWlmICggKHRoaXMubGVuZ3RoID4gMSB8fCBybXVsdGlzZWxlY3Rvci50ZXN0KCBz
ZWxlY3RvciApKSAmJiBycGFyZW50c3ByZXYudGVzdCggbmFtZSApICkgewoJCQly
ZXQgPSByZXQucmV2ZXJzZSgpOwoJCX0KCgkJcmV0dXJuIHRoaXMucHVzaFN0YWNr
KCByZXQsIG5hbWUsIHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApLmpvaW4oIiwiKSAp
OwoJfTsKfSk7CgpqUXVlcnkuZXh0ZW5kKHsKCWZpbHRlcjogZnVuY3Rpb24oIGV4
cHIsIGVsZW1zLCBub3QgKSB7CgkJaWYgKCBub3QgKSB7CgkJCWV4cHIgPSAiOm5v
dCgiICsgZXhwciArICIpIjsKCQl9CgoJCXJldHVybiBlbGVtcy5sZW5ndGggPT09
IDEgPwoJCQlqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoZWxlbXNbMF0sIGV4
cHIpID8gWyBlbGVtc1swXSBdIDogW10gOgoJCQlqUXVlcnkuZmluZC5tYXRjaGVz
KGV4cHIsIGVsZW1zKTsKCX0sCgoJZGlyOiBmdW5jdGlvbiggZWxlbSwgZGlyLCB1
bnRpbCApIHsKCQl2YXIgbWF0Y2hlZCA9IFtdLAoJCQljdXIgPSBlbGVtWyBkaXIg
XTsKCgkJd2hpbGUgKCBjdXIgJiYgY3VyLm5vZGVUeXBlICE9PSA5ICYmICh1bnRp
bCA9PT0gdW5kZWZpbmVkIHx8IGN1ci5ub2RlVHlwZSAhPT0gMSB8fCAhalF1ZXJ5
KCBjdXIgKS5pcyggdW50aWwgKSkgKSB7CgkJCWlmICggY3VyLm5vZGVUeXBlID09
PSAxICkgewoJCQkJbWF0Y2hlZC5wdXNoKCBjdXIgKTsKCQkJfQoJCQljdXIgPSBj
dXJbZGlyXTsKCQl9CgkJcmV0dXJuIG1hdGNoZWQ7Cgl9LAoKCW50aDogZnVuY3Rp
b24oIGN1ciwgcmVzdWx0LCBkaXIsIGVsZW0gKSB7CgkJcmVzdWx0ID0gcmVzdWx0
IHx8IDE7CgkJdmFyIG51bSA9IDA7CgoJCWZvciAoIDsgY3VyOyBjdXIgPSBjdXJb
ZGlyXSApIHsKCQkJaWYgKCBjdXIubm9kZVR5cGUgPT09IDEgJiYgKytudW0gPT09
IHJlc3VsdCApIHsKCQkJCWJyZWFrOwoJCQl9CgkJfQoKCQlyZXR1cm4gY3VyOwoJ
fSwKCglzaWJsaW5nOiBmdW5jdGlvbiggbiwgZWxlbSApIHsKCQl2YXIgciA9IFtd
OwoKCQlmb3IgKCA7IG47IG4gPSBuLm5leHRTaWJsaW5nICkgewoJCQlpZiAoIG4u
bm9kZVR5cGUgPT09IDEgJiYgbiAhPT0gZWxlbSApIHsKCQkJCXIucHVzaCggbiAp
OwoJCQl9CgkJfQoKCQlyZXR1cm4gcjsKCX0KfSk7CgovLyBJbXBsZW1lbnQgdGhl
IGlkZW50aWNhbCBmdW5jdGlvbmFsaXR5IGZvciBmaWx0ZXIgYW5kIG5vdApmdW5j
dGlvbiB3aW5ub3coIGVsZW1lbnRzLCBxdWFsaWZpZXIsIGtlZXAgKSB7CgoJLy8g
Q2FuJ3QgcGFzcyBudWxsIG9yIHVuZGVmaW5lZCB0byBpbmRleE9mIGluIEZpcmVm
b3ggNAoJLy8gU2V0IHRvIDAgdG8gc2tpcCBzdHJpbmcgY2hlY2sKCXF1YWxpZmll
ciA9IHF1YWxpZmllciB8fCAwOwoKCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHF1
YWxpZmllciApICkgewoJCXJldHVybiBqUXVlcnkuZ3JlcChlbGVtZW50cywgZnVu
Y3Rpb24oIGVsZW0sIGkgKSB7CgkJCXZhciByZXRWYWwgPSAhIXF1YWxpZmllci5j
YWxsKCBlbGVtLCBpLCBlbGVtICk7CgkJCXJldHVybiByZXRWYWwgPT09IGtlZXA7
CgkJfSk7CgoJfSBlbHNlIGlmICggcXVhbGlmaWVyLm5vZGVUeXBlICkgewoJCXJl
dHVybiBqUXVlcnkuZ3JlcChlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7
CgkJCXJldHVybiAoIGVsZW0gPT09IHF1YWxpZmllciApID09PSBrZWVwOwoJCX0p
OwoKCX0gZWxzZSBpZiAoIHR5cGVvZiBxdWFsaWZpZXIgPT09ICJzdHJpbmciICkg
ewoJCXZhciBmaWx0ZXJlZCA9IGpRdWVyeS5ncmVwKGVsZW1lbnRzLCBmdW5jdGlv
biggZWxlbSApIHsKCQkJcmV0dXJuIGVsZW0ubm9kZVR5cGUgPT09IDE7CgkJfSk7
CgoJCWlmICggaXNTaW1wbGUudGVzdCggcXVhbGlmaWVyICkgKSB7CgkJCXJldHVy
biBqUXVlcnkuZmlsdGVyKHF1YWxpZmllciwgZmlsdGVyZWQsICFrZWVwKTsKCQl9
IGVsc2UgewoJCQlxdWFsaWZpZXIgPSBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIs
IGZpbHRlcmVkICk7CgkJfQoJfQoKCXJldHVybiBqUXVlcnkuZ3JlcChlbGVtZW50
cywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7CgkJcmV0dXJuICggalF1ZXJ5LmluQXJy
YXkoIGVsZW0sIHF1YWxpZmllciApID49IDAgKSA9PT0ga2VlcDsKCX0pOwp9CgoK
CgpmdW5jdGlvbiBjcmVhdGVTYWZlRnJhZ21lbnQoIGRvY3VtZW50ICkgewoJdmFy
IGxpc3QgPSBub2RlTmFtZXMuc3BsaXQoICJ8IiApLAoJc2FmZUZyYWcgPSBkb2N1
bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7CgoJaWYgKCBzYWZlRnJhZy5j
cmVhdGVFbGVtZW50ICkgewoJCXdoaWxlICggbGlzdC5sZW5ndGggKSB7CgkJCXNh
ZmVGcmFnLmNyZWF0ZUVsZW1lbnQoCgkJCQlsaXN0LnBvcCgpCgkJCSk7CgkJfQoJ
fQoJcmV0dXJuIHNhZmVGcmFnOwp9Cgp2YXIgbm9kZU5hbWVzID0gImFiYnJ8YXJ0
aWNsZXxhc2lkZXxhdWRpb3xiZGl8Y2FudmFzfGRhdGF8ZGF0YWxpc3R8ZGV0YWls
c3xmaWdjYXB0aW9ufGZpZ3VyZXxmb290ZXJ8IiArCgkJImhlYWRlcnxoZ3JvdXB8
bWFya3xtZXRlcnxuYXZ8b3V0cHV0fHByb2dyZXNzfHNlY3Rpb258c3VtbWFyeXx0
aW1lfHZpZGVvIiwKCXJpbmxpbmVqUXVlcnkgPSAvIGpRdWVyeVxkKz0iKD86XGQr
fG51bGwpIi9nLAoJcmxlYWRpbmdXaGl0ZXNwYWNlID0gL15ccysvLAoJcnhodG1s
VGFnID0gLzwoPyFhcmVhfGJyfGNvbHxlbWJlZHxocnxpbWd8aW5wdXR8bGlua3xt
ZXRhfHBhcmFtKSgoW1x3Ol0rKVtePl0qKVwvPi9pZywKCXJ0YWdOYW1lID0gLzwo
W1x3Ol0rKS8sCglydGJvZHkgPSAvPHRib2R5L2ksCglyaHRtbCA9IC88fCYjP1x3
KzsvLAoJcm5vSW5uZXJodG1sID0gLzwoPzpzY3JpcHR8c3R5bGUpL2ksCglybm9j
YWNoZSA9IC88KD86c2NyaXB0fG9iamVjdHxlbWJlZHxvcHRpb258c3R5bGUpL2ks
Cglybm9zaGltY2FjaGUgPSBuZXcgUmVnRXhwKCI8KD86IiArIG5vZGVOYW1lcyAr
ICIpW1xccy8+XSIsICJpIiksCgkvLyBjaGVja2VkPSJjaGVja2VkIiBvciBjaGVj
a2VkCglyY2hlY2tlZCA9IC9jaGVja2VkXHMqKD86W149XXw9XHMqLmNoZWNrZWQu
KS9pLAoJcnNjcmlwdFR5cGUgPSAvXC8oamF2YXxlY21hKXNjcmlwdC9pLAoJcmNs
ZWFuU2NyaXB0ID0gL15ccyo8ISg/OlxbQ0RBVEFcW3xcLVwtKS8sCgl3cmFwTWFw
ID0gewoJCW9wdGlvbjogWyAxLCAiPHNlbGVjdCBtdWx0aXBsZT0nbXVsdGlwbGUn
PiIsICI8L3NlbGVjdD4iIF0sCgkJbGVnZW5kOiBbIDEsICI8ZmllbGRzZXQ+Iiwg
IjwvZmllbGRzZXQ+IiBdLAoJCXRoZWFkOiBbIDEsICI8dGFibGU+IiwgIjwvdGFi
bGU+IiBdLAoJCXRyOiBbIDIsICI8dGFibGU+PHRib2R5PiIsICI8L3Rib2R5Pjwv
dGFibGU+IiBdLAoJCXRkOiBbIDMsICI8dGFibGU+PHRib2R5Pjx0cj4iLCAiPC90
cj48L3Rib2R5PjwvdGFibGU+IiBdLAoJCWNvbDogWyAyLCAiPHRhYmxlPjx0Ym9k
eT48L3Rib2R5Pjxjb2xncm91cD4iLCAiPC9jb2xncm91cD48L3RhYmxlPiIgXSwK
CQlhcmVhOiBbIDEsICI8bWFwPiIsICI8L21hcD4iIF0sCgkJX2RlZmF1bHQ6IFsg
MCwgIiIsICIiIF0KCX0sCglzYWZlRnJhZ21lbnQgPSBjcmVhdGVTYWZlRnJhZ21l
bnQoIGRvY3VtZW50ICk7Cgp3cmFwTWFwLm9wdGdyb3VwID0gd3JhcE1hcC5vcHRp
b247CndyYXBNYXAudGJvZHkgPSB3cmFwTWFwLnRmb290ID0gd3JhcE1hcC5jb2xn
cm91cCA9IHdyYXBNYXAuY2FwdGlvbiA9IHdyYXBNYXAudGhlYWQ7CndyYXBNYXAu
dGggPSB3cmFwTWFwLnRkOwoKLy8gSUUgY2FuJ3Qgc2VyaWFsaXplIDxsaW5rPiBh
bmQgPHNjcmlwdD4gdGFncyBub3JtYWxseQppZiAoICFqUXVlcnkuc3VwcG9ydC5o
dG1sU2VyaWFsaXplICkgewoJd3JhcE1hcC5fZGVmYXVsdCA9IFsgMSwgImRpdjxk
aXY+IiwgIjwvZGl2PiIgXTsKfQoKalF1ZXJ5LmZuLmV4dGVuZCh7Cgl0ZXh0OiBm
dW5jdGlvbiggdmFsdWUgKSB7CgkJcmV0dXJuIGpRdWVyeS5hY2Nlc3MoIHRoaXMs
IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQkJcmV0dXJuIHZhbHVlID09PSB1bmRlZmlu
ZWQgPwoJCQkJalF1ZXJ5LnRleHQoIHRoaXMgKSA6CgkJCQl0aGlzLmVtcHR5KCku
YXBwZW5kKCAoIHRoaXNbMF0gJiYgdGhpc1swXS5vd25lckRvY3VtZW50IHx8IGRv
Y3VtZW50ICkuY3JlYXRlVGV4dE5vZGUoIHZhbHVlICkgKTsKCQl9LCBudWxsLCB2
YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApOwoJfSwKCgl3cmFwQWxsOiBmdW5jdGlv
biggaHRtbCApIHsKCQlpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1sICkgKSB7
CgkJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSkgewoJCQkJalF1ZXJ5KHRo
aXMpLndyYXBBbGwoIGh0bWwuY2FsbCh0aGlzLCBpKSApOwoJCQl9KTsKCQl9CgoJ
CWlmICggdGhpc1swXSApIHsKCQkJLy8gVGhlIGVsZW1lbnRzIHRvIHdyYXAgdGhl
IHRhcmdldCBhcm91bmQKCQkJdmFyIHdyYXAgPSBqUXVlcnkoIGh0bWwsIHRoaXNb
MF0ub3duZXJEb2N1bWVudCApLmVxKDApLmNsb25lKHRydWUpOwoKCQkJaWYgKCB0
aGlzWzBdLnBhcmVudE5vZGUgKSB7CgkJCQl3cmFwLmluc2VydEJlZm9yZSggdGhp
c1swXSApOwoJCQl9CgoJCQl3cmFwLm1hcChmdW5jdGlvbigpIHsKCQkJCXZhciBl
bGVtID0gdGhpczsKCgkJCQl3aGlsZSAoIGVsZW0uZmlyc3RDaGlsZCAmJiBlbGVt
LmZpcnN0Q2hpbGQubm9kZVR5cGUgPT09IDEgKSB7CgkJCQkJZWxlbSA9IGVsZW0u
Zmlyc3RDaGlsZDsKCQkJCX0KCgkJCQlyZXR1cm4gZWxlbTsKCQkJfSkuYXBwZW5k
KCB0aGlzICk7CgkJfQoKCQlyZXR1cm4gdGhpczsKCX0sCgoJd3JhcElubmVyOiBm
dW5jdGlvbiggaHRtbCApIHsKCQlpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1s
ICkgKSB7CgkJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSkgewoJCQkJalF1
ZXJ5KHRoaXMpLndyYXBJbm5lciggaHRtbC5jYWxsKHRoaXMsIGkpICk7CgkJCX0p
OwoJCX0KCgkJcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHsKCQkJdmFyIHNl
bGYgPSBqUXVlcnkoIHRoaXMgKSwKCQkJCWNvbnRlbnRzID0gc2VsZi5jb250ZW50
cygpOwoKCQkJaWYgKCBjb250ZW50cy5sZW5ndGggKSB7CgkJCQljb250ZW50cy53
cmFwQWxsKCBodG1sICk7CgoJCQl9IGVsc2UgewoJCQkJc2VsZi5hcHBlbmQoIGh0
bWwgKTsKCQkJfQoJCX0pOwoJfSwKCgl3cmFwOiBmdW5jdGlvbiggaHRtbCApIHsK
CQl2YXIgaXNGdW5jdGlvbiA9IGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1sICk7CgoJ
CXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSkgewoJCQlqUXVlcnkoIHRoaXMg
KS53cmFwQWxsKCBpc0Z1bmN0aW9uID8gaHRtbC5jYWxsKHRoaXMsIGkpIDogaHRt
bCApOwoJCX0pOwoJfSwKCgl1bndyYXA6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0
aGlzLnBhcmVudCgpLmVhY2goZnVuY3Rpb24oKSB7CgkJCWlmICggIWpRdWVyeS5u
b2RlTmFtZSggdGhpcywgImJvZHkiICkgKSB7CgkJCQlqUXVlcnkoIHRoaXMgKS5y
ZXBsYWNlV2l0aCggdGhpcy5jaGlsZE5vZGVzICk7CgkJCX0KCQl9KS5lbmQoKTsK
CX0sCgoJYXBwZW5kOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5kb21NYW5p
cChhcmd1bWVudHMsIHRydWUsIGZ1bmN0aW9uKCBlbGVtICkgewoJCQlpZiAoIHRo
aXMubm9kZVR5cGUgPT09IDEgKSB7CgkJCQl0aGlzLmFwcGVuZENoaWxkKCBlbGVt
ICk7CgkJCX0KCQl9KTsKCX0sCgoJcHJlcGVuZDogZnVuY3Rpb24oKSB7CgkJcmV0
dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLCB0cnVlLCBmdW5jdGlvbiggZWxl
bSApIHsKCQkJaWYgKCB0aGlzLm5vZGVUeXBlID09PSAxICkgewoJCQkJdGhpcy5p
bnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMuZmlyc3RDaGlsZCApOwoJCQl9CgkJfSk7
Cgl9LAoKCWJlZm9yZTogZnVuY3Rpb24oKSB7CgkJaWYgKCB0aGlzWzBdICYmIHRo
aXNbMF0ucGFyZW50Tm9kZSApIHsKCQkJcmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJn
dW1lbnRzLCBmYWxzZSwgZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQl0aGlzLnBhcmVu
dE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzICk7CgkJCX0pOwoJCX0gZWxz
ZSBpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7CgkJCXZhciBzZXQgPSBqUXVlcnku
Y2xlYW4oIGFyZ3VtZW50cyApOwoJCQlzZXQucHVzaC5hcHBseSggc2V0LCB0aGlz
LnRvQXJyYXkoKSApOwoJCQlyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHNldCwgImJl
Zm9yZSIsIGFyZ3VtZW50cyApOwoJCX0KCX0sCgoJYWZ0ZXI6IGZ1bmN0aW9uKCkg
ewoJCWlmICggdGhpc1swXSAmJiB0aGlzWzBdLnBhcmVudE5vZGUgKSB7CgkJCXJl
dHVybiB0aGlzLmRvbU1hbmlwKGFyZ3VtZW50cywgZmFsc2UsIGZ1bmN0aW9uKCBl
bGVtICkgewoJCQkJdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggZWxlbSwg
dGhpcy5uZXh0U2libGluZyApOwoJCQl9KTsKCQl9IGVsc2UgaWYgKCBhcmd1bWVu
dHMubGVuZ3RoICkgewoJCQl2YXIgc2V0ID0gdGhpcy5wdXNoU3RhY2soIHRoaXMs
ICJhZnRlciIsIGFyZ3VtZW50cyApOwoJCQlzZXQucHVzaC5hcHBseSggc2V0LCBq
UXVlcnkuY2xlYW4oYXJndW1lbnRzKSApOwoJCQlyZXR1cm4gc2V0OwoJCX0KCX0s
CgoJLy8ga2VlcERhdGEgaXMgZm9yIGludGVybmFsIHVzZSBvbmx5LS1kbyBub3Qg
ZG9jdW1lbnQKCXJlbW92ZTogZnVuY3Rpb24oIHNlbGVjdG9yLCBrZWVwRGF0YSAp
IHsKCQlmb3IgKCB2YXIgaSA9IDAsIGVsZW07IChlbGVtID0gdGhpc1tpXSkgIT0g
bnVsbDsgaSsrICkgewoJCQlpZiAoICFzZWxlY3RvciB8fCBqUXVlcnkuZmlsdGVy
KCBzZWxlY3RvciwgWyBlbGVtIF0gKS5sZW5ndGggKSB7CgkJCQlpZiAoICFrZWVw
RGF0YSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkgewoJCQkJCWpRdWVyeS5jbGVh
bkRhdGEoIGVsZW0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoIioiKSApOwoJCQkJCWpR
dWVyeS5jbGVhbkRhdGEoIFsgZWxlbSBdICk7CgkJCQl9CgoJCQkJaWYgKCBlbGVt
LnBhcmVudE5vZGUgKSB7CgkJCQkJZWxlbS5wYXJlbnROb2RlLnJlbW92ZUNoaWxk
KCBlbGVtICk7CgkJCQl9CgkJCX0KCQl9CgoJCXJldHVybiB0aGlzOwoJfSwKCgll
bXB0eTogZnVuY3Rpb24oKSB7CgkJZm9yICggdmFyIGkgPSAwLCBlbGVtOyAoZWxl
bSA9IHRoaXNbaV0pICE9IG51bGw7IGkrKyApIHsKCQkJLy8gUmVtb3ZlIGVsZW1l
bnQgbm9kZXMgYW5kIHByZXZlbnQgbWVtb3J5IGxlYWtzCgkJCWlmICggZWxlbS5u
b2RlVHlwZSA9PT0gMSApIHsKCQkJCWpRdWVyeS5jbGVhbkRhdGEoIGVsZW0uZ2V0
RWxlbWVudHNCeVRhZ05hbWUoIioiKSApOwoJCQl9CgoJCQkvLyBSZW1vdmUgYW55
IHJlbWFpbmluZyBub2RlcwoJCQl3aGlsZSAoIGVsZW0uZmlyc3RDaGlsZCApIHsK
CQkJCWVsZW0ucmVtb3ZlQ2hpbGQoIGVsZW0uZmlyc3RDaGlsZCApOwoJCQl9CgkJ
fQoKCQlyZXR1cm4gdGhpczsKCX0sCgoJY2xvbmU6IGZ1bmN0aW9uKCBkYXRhQW5k
RXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApIHsKCQlkYXRhQW5kRXZlbnRzID0g
ZGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZmFsc2UgOiBkYXRhQW5kRXZlbnRzOwoJ
CWRlZXBEYXRhQW5kRXZlbnRzID0gZGVlcERhdGFBbmRFdmVudHMgPT0gbnVsbCA/
IGRhdGFBbmRFdmVudHMgOiBkZWVwRGF0YUFuZEV2ZW50czsKCgkJcmV0dXJuIHRo
aXMubWFwKCBmdW5jdGlvbiAoKSB7CgkJCXJldHVybiBqUXVlcnkuY2xvbmUoIHRo
aXMsIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICk7CgkJfSk7Cgl9
LAoKCWh0bWw6IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQlyZXR1cm4galF1ZXJ5LmFj
Y2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkgewoJCQl2YXIgZWxlbSA9IHRo
aXNbMF0gfHwge30sCgkJCQlpID0gMCwKCQkJCWwgPSB0aGlzLmxlbmd0aDsKCgkJ
CWlmICggdmFsdWUgPT09IHVuZGVmaW5lZCApIHsKCQkJCXJldHVybiBlbGVtLm5v
ZGVUeXBlID09PSAxID8KCQkJCQllbGVtLmlubmVySFRNTC5yZXBsYWNlKCByaW5s
aW5lalF1ZXJ5LCAiIiApIDoKCQkJCQludWxsOwoJCQl9CgoKCQkJaWYgKCB0eXBl
b2YgdmFsdWUgPT09ICJzdHJpbmciICYmICFybm9Jbm5lcmh0bWwudGVzdCggdmFs
dWUgKSAmJgoJCQkJKCBqUXVlcnkuc3VwcG9ydC5sZWFkaW5nV2hpdGVzcGFjZSB8
fCAhcmxlYWRpbmdXaGl0ZXNwYWNlLnRlc3QoIHZhbHVlICkgKSAmJgoJCQkJIXdy
YXBNYXBbICggcnRhZ05hbWUuZXhlYyggdmFsdWUgKSB8fCBbIiIsICIiXSApWzFd
LnRvTG93ZXJDYXNlKCkgXSApIHsKCgkJCQl2YWx1ZSA9IHZhbHVlLnJlcGxhY2Uo
IHJ4aHRtbFRhZywgIjwkMT48LyQyPiIgKTsKCgkJCQl0cnkgewoJCQkJCWZvciAo
OyBpIDwgbDsgaSsrICkgewoJCQkJCQkvLyBSZW1vdmUgZWxlbWVudCBub2RlcyBh
bmQgcHJldmVudCBtZW1vcnkgbGVha3MKCQkJCQkJZWxlbSA9IHRoaXNbaV0gfHwg
e307CgkJCQkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHsKCQkJCQkJCWpR
dWVyeS5jbGVhbkRhdGEoIGVsZW0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoICIqIiAp
ICk7CgkJCQkJCQllbGVtLmlubmVySFRNTCA9IHZhbHVlOwoJCQkJCQl9CgkJCQkJ
fQoKCQkJCQllbGVtID0gMDsKCgkJCQkvLyBJZiB1c2luZyBpbm5lckhUTUwgdGhy
b3dzIGFuIGV4Y2VwdGlvbiwgdXNlIHRoZSBmYWxsYmFjayBtZXRob2QKCQkJCX0g
Y2F0Y2goZSkge30KCQkJfQoKCQkJaWYgKCBlbGVtICkgewoJCQkJdGhpcy5lbXB0
eSgpLmFwcGVuZCggdmFsdWUgKTsKCQkJfQoJCX0sIG51bGwsIHZhbHVlLCBhcmd1
bWVudHMubGVuZ3RoICk7Cgl9LAoKCXJlcGxhY2VXaXRoOiBmdW5jdGlvbiggdmFs
dWUgKSB7CgkJaWYgKCB0aGlzWzBdICYmIHRoaXNbMF0ucGFyZW50Tm9kZSApIHsK
CQkJLy8gTWFrZSBzdXJlIHRoYXQgdGhlIGVsZW1lbnRzIGFyZSByZW1vdmVkIGZy
b20gdGhlIERPTSBiZWZvcmUgdGhleSBhcmUgaW5zZXJ0ZWQKCQkJLy8gdGhpcyBj
YW4gaGVscCBmaXggcmVwbGFjaW5nIGEgcGFyZW50IHdpdGggY2hpbGQgZWxlbWVu
dHMKCQkJaWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKSApIHsKCQkJCXJl
dHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSkgewoJCQkJCXZhciBzZWxmID0galF1
ZXJ5KHRoaXMpLCBvbGQgPSBzZWxmLmh0bWwoKTsKCQkJCQlzZWxmLnJlcGxhY2VX
aXRoKCB2YWx1ZS5jYWxsKCB0aGlzLCBpLCBvbGQgKSApOwoJCQkJfSk7CgkJCX0K
CgkJCWlmICggdHlwZW9mIHZhbHVlICE9PSAic3RyaW5nIiApIHsKCQkJCXZhbHVl
ID0galF1ZXJ5KCB2YWx1ZSApLmRldGFjaCgpOwoJCQl9CgoJCQlyZXR1cm4gdGhp
cy5lYWNoKGZ1bmN0aW9uKCkgewoJCQkJdmFyIG5leHQgPSB0aGlzLm5leHRTaWJs
aW5nLAoJCQkJCXBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTsKCgkJCQlqUXVlcnko
IHRoaXMgKS5yZW1vdmUoKTsKCgkJCQlpZiAoIG5leHQgKSB7CgkJCQkJalF1ZXJ5
KG5leHQpLmJlZm9yZSggdmFsdWUgKTsKCQkJCX0gZWxzZSB7CgkJCQkJalF1ZXJ5
KHBhcmVudCkuYXBwZW5kKCB2YWx1ZSApOwoJCQkJfQoJCQl9KTsKCQl9IGVsc2Ug
ewoJCQlyZXR1cm4gdGhpcy5sZW5ndGggPwoJCQkJdGhpcy5wdXNoU3RhY2soIGpR
dWVyeShqUXVlcnkuaXNGdW5jdGlvbih2YWx1ZSkgPyB2YWx1ZSgpIDogdmFsdWUp
LCAicmVwbGFjZVdpdGgiLCB2YWx1ZSApIDoKCQkJCXRoaXM7CgkJfQoJfSwKCglk
ZXRhY2g6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHsKCQlyZXR1cm4gdGhpcy5yZW1v
dmUoIHNlbGVjdG9yLCB0cnVlICk7Cgl9LAoKCWRvbU1hbmlwOiBmdW5jdGlvbigg
YXJncywgdGFibGUsIGNhbGxiYWNrICkgewoJCXZhciByZXN1bHRzLCBmaXJzdCwg
ZnJhZ21lbnQsIHBhcmVudCwKCQkJdmFsdWUgPSBhcmdzWzBdLAoJCQlzY3JpcHRz
ID0gW107CgoJCS8vIFdlIGNhbid0IGNsb25lTm9kZSBmcmFnbWVudHMgdGhhdCBj
b250YWluIGNoZWNrZWQsIGluIFdlYktpdAoJCWlmICggIWpRdWVyeS5zdXBwb3J0
LmNoZWNrQ2xvbmUgJiYgYXJndW1lbnRzLmxlbmd0aCA9PT0gMyAmJiB0eXBlb2Yg
dmFsdWUgPT09ICJzdHJpbmciICYmIHJjaGVja2VkLnRlc3QoIHZhbHVlICkgKSB7
CgkJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7CgkJCQlqUXVlcnkodGhp
cykuZG9tTWFuaXAoIGFyZ3MsIHRhYmxlLCBjYWxsYmFjaywgdHJ1ZSApOwoJCQl9
KTsKCQl9CgoJCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24odmFsdWUpICkgewoJCQly
ZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGkpIHsKCQkJCXZhciBzZWxmID0galF1
ZXJ5KHRoaXMpOwoJCQkJYXJnc1swXSA9IHZhbHVlLmNhbGwodGhpcywgaSwgdGFi
bGUgPyBzZWxmLmh0bWwoKSA6IHVuZGVmaW5lZCk7CgkJCQlzZWxmLmRvbU1hbmlw
KCBhcmdzLCB0YWJsZSwgY2FsbGJhY2sgKTsKCQkJfSk7CgkJfQoKCQlpZiAoIHRo
aXNbMF0gKSB7CgkJCXBhcmVudCA9IHZhbHVlICYmIHZhbHVlLnBhcmVudE5vZGU7
CgoJCQkvLyBJZiB3ZSdyZSBpbiBhIGZyYWdtZW50LCBqdXN0IHVzZSB0aGF0IGlu
c3RlYWQgb2YgYnVpbGRpbmcgYSBuZXcgb25lCgkJCWlmICggalF1ZXJ5LnN1cHBv
cnQucGFyZW50Tm9kZSAmJiBwYXJlbnQgJiYgcGFyZW50Lm5vZGVUeXBlID09PSAx
MSAmJiBwYXJlbnQuY2hpbGROb2Rlcy5sZW5ndGggPT09IHRoaXMubGVuZ3RoICkg
ewoJCQkJcmVzdWx0cyA9IHsgZnJhZ21lbnQ6IHBhcmVudCB9OwoKCQkJfSBlbHNl
IHsKCQkJCXJlc3VsdHMgPSBqUXVlcnkuYnVpbGRGcmFnbWVudCggYXJncywgdGhp
cywgc2NyaXB0cyApOwoJCQl9CgoJCQlmcmFnbWVudCA9IHJlc3VsdHMuZnJhZ21l
bnQ7CgoJCQlpZiAoIGZyYWdtZW50LmNoaWxkTm9kZXMubGVuZ3RoID09PSAxICkg
ewoJCQkJZmlyc3QgPSBmcmFnbWVudCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7CgkJ
CX0gZWxzZSB7CgkJCQlmaXJzdCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7CgkJCX0K
CgkJCWlmICggZmlyc3QgKSB7CgkJCQl0YWJsZSA9IHRhYmxlICYmIGpRdWVyeS5u
b2RlTmFtZSggZmlyc3QsICJ0ciIgKTsKCgkJCQlmb3IgKCB2YXIgaSA9IDAsIGwg
PSB0aGlzLmxlbmd0aCwgbGFzdEluZGV4ID0gbCAtIDE7IGkgPCBsOyBpKysgKSB7
CgkJCQkJY2FsbGJhY2suY2FsbCgKCQkJCQkJdGFibGUgPwoJCQkJCQkJcm9vdCh0
aGlzW2ldLCBmaXJzdCkgOgoJCQkJCQkJdGhpc1tpXSwKCQkJCQkJLy8gTWFrZSBz
dXJlIHRoYXQgd2UgZG8gbm90IGxlYWsgbWVtb3J5IGJ5IGluYWR2ZXJ0ZW50bHkg
ZGlzY2FyZGluZwoJCQkJCQkvLyB0aGUgb3JpZ2luYWwgZnJhZ21lbnQgKHdoaWNo
IG1pZ2h0IGhhdmUgYXR0YWNoZWQgZGF0YSkgaW5zdGVhZCBvZgoJCQkJCQkvLyB1
c2luZyBpdDsgaW4gYWRkaXRpb24sIHVzZSB0aGUgb3JpZ2luYWwgZnJhZ21lbnQg
b2JqZWN0IGZvciB0aGUgbGFzdAoJCQkJCQkvLyBpdGVtIGluc3RlYWQgb2YgZmly
c3QgYmVjYXVzZSBpdCBjYW4gZW5kIHVwIGJlaW5nIGVtcHRpZWQgaW5jb3JyZWN0
bHkKCQkJCQkJLy8gaW4gY2VydGFpbiBzaXR1YXRpb25zIChCdWcgIzgwNzApLgoJ
CQkJCQkvLyBGcmFnbWVudHMgZnJvbSB0aGUgZnJhZ21lbnQgY2FjaGUgbXVzdCBh
bHdheXMgYmUgY2xvbmVkIGFuZCBuZXZlciB1c2VkCgkJCQkJCS8vIGluIHBsYWNl
LgoJCQkJCQlyZXN1bHRzLmNhY2hlYWJsZSB8fCAoIGwgPiAxICYmIGkgPCBsYXN0
SW5kZXggKSA/CgkJCQkJCQlqUXVlcnkuY2xvbmUoIGZyYWdtZW50LCB0cnVlLCB0
cnVlICkgOgoJCQkJCQkJZnJhZ21lbnQKCQkJCQkpOwoJCQkJfQoJCQl9CgoJCQlp
ZiAoIHNjcmlwdHMubGVuZ3RoICkgewoJCQkJalF1ZXJ5LmVhY2goIHNjcmlwdHMs
IGZ1bmN0aW9uKCBpLCBlbGVtICkgewoJCQkJCWlmICggZWxlbS5zcmMgKSB7CgkJ
CQkJCWpRdWVyeS5hamF4KHsKCQkJCQkJCXR5cGU6ICJHRVQiLAoJCQkJCQkJZ2xv
YmFsOiBmYWxzZSwKCQkJCQkJCXVybDogZWxlbS5zcmMsCgkJCQkJCQlhc3luYzog
ZmFsc2UsCgkJCQkJCQlkYXRhVHlwZTogInNjcmlwdCIKCQkJCQkJfSk7CgkJCQkJ
fSBlbHNlIHsKCQkJCQkJalF1ZXJ5Lmdsb2JhbEV2YWwoICggZWxlbS50ZXh0IHx8
IGVsZW0udGV4dENvbnRlbnQgfHwgZWxlbS5pbm5lckhUTUwgfHwgIiIgKS5yZXBs
YWNlKCByY2xlYW5TY3JpcHQsICIvKiQwKi8iICkgKTsKCQkJCQl9CgoJCQkJCWlm
ICggZWxlbS5wYXJlbnROb2RlICkgewoJCQkJCQllbGVtLnBhcmVudE5vZGUucmVt
b3ZlQ2hpbGQoIGVsZW0gKTsKCQkJCQl9CgkJCQl9KTsKCQkJfQoJCX0KCgkJcmV0
dXJuIHRoaXM7Cgl9Cn0pOwoKZnVuY3Rpb24gcm9vdCggZWxlbSwgY3VyICkgewoJ
cmV0dXJuIGpRdWVyeS5ub2RlTmFtZShlbGVtLCAidGFibGUiKSA/CgkJKGVsZW0u
Z2V0RWxlbWVudHNCeVRhZ05hbWUoInRib2R5IilbMF0gfHwKCQllbGVtLmFwcGVu
ZENoaWxkKGVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0Ym9keSIp
KSkgOgoJCWVsZW07Cn0KCmZ1bmN0aW9uIGNsb25lQ29weUV2ZW50KCBzcmMsIGRl
c3QgKSB7CgoJaWYgKCBkZXN0Lm5vZGVUeXBlICE9PSAxIHx8ICFqUXVlcnkuaGFz
RGF0YSggc3JjICkgKSB7CgkJcmV0dXJuOwoJfQoKCXZhciB0eXBlLCBpLCBsLAoJ
CW9sZERhdGEgPSBqUXVlcnkuX2RhdGEoIHNyYyApLAoJCWN1ckRhdGEgPSBqUXVl
cnkuX2RhdGEoIGRlc3QsIG9sZERhdGEgKSwKCQlldmVudHMgPSBvbGREYXRhLmV2
ZW50czsKCglpZiAoIGV2ZW50cyApIHsKCQlkZWxldGUgY3VyRGF0YS5oYW5kbGU7
CgkJY3VyRGF0YS5ldmVudHMgPSB7fTsKCgkJZm9yICggdHlwZSBpbiBldmVudHMg
KSB7CgkJCWZvciAoIGkgPSAwLCBsID0gZXZlbnRzWyB0eXBlIF0ubGVuZ3RoOyBp
IDwgbDsgaSsrICkgewoJCQkJalF1ZXJ5LmV2ZW50LmFkZCggZGVzdCwgdHlwZSwg
ZXZlbnRzWyB0eXBlIF1bIGkgXSApOwoJCQl9CgkJfQoJfQoKCS8vIG1ha2UgdGhl
IGNsb25lZCBwdWJsaWMgZGF0YSBvYmplY3QgYSBjb3B5IGZyb20gdGhlIG9yaWdp
bmFsCglpZiAoIGN1ckRhdGEuZGF0YSApIHsKCQljdXJEYXRhLmRhdGEgPSBqUXVl
cnkuZXh0ZW5kKCB7fSwgY3VyRGF0YS5kYXRhICk7Cgl9Cn0KCmZ1bmN0aW9uIGNs
b25lRml4QXR0cmlidXRlcyggc3JjLCBkZXN0ICkgewoJdmFyIG5vZGVOYW1lOwoK
CS8vIFdlIGRvIG5vdCBuZWVkIHRvIGRvIGFueXRoaW5nIGZvciBub24tRWxlbWVu
dHMKCWlmICggZGVzdC5ub2RlVHlwZSAhPT0gMSApIHsKCQlyZXR1cm47Cgl9CgoJ
Ly8gY2xlYXJBdHRyaWJ1dGVzIHJlbW92ZXMgdGhlIGF0dHJpYnV0ZXMsIHdoaWNo
IHdlIGRvbid0IHdhbnQsCgkvLyBidXQgYWxzbyByZW1vdmVzIHRoZSBhdHRhY2hF
dmVudCBldmVudHMsIHdoaWNoIHdlICpkbyogd2FudAoJaWYgKCBkZXN0LmNsZWFy
QXR0cmlidXRlcyApIHsKCQlkZXN0LmNsZWFyQXR0cmlidXRlcygpOwoJfQoKCS8v
IG1lcmdlQXR0cmlidXRlcywgaW4gY29udHJhc3QsIG9ubHkgbWVyZ2VzIGJhY2sg
b24gdGhlCgkvLyBvcmlnaW5hbCBhdHRyaWJ1dGVzLCBub3QgdGhlIGV2ZW50cwoJ
aWYgKCBkZXN0Lm1lcmdlQXR0cmlidXRlcyApIHsKCQlkZXN0Lm1lcmdlQXR0cmli
dXRlcyggc3JjICk7Cgl9CgoJbm9kZU5hbWUgPSBkZXN0Lm5vZGVOYW1lLnRvTG93
ZXJDYXNlKCk7CgoJLy8gSUU2LTggZmFpbCB0byBjbG9uZSBjaGlsZHJlbiBpbnNp
ZGUgb2JqZWN0IGVsZW1lbnRzIHRoYXQgdXNlCgkvLyB0aGUgcHJvcHJpZXRhcnkg
Y2xhc3NpZCBhdHRyaWJ1dGUgdmFsdWUgKHJhdGhlciB0aGFuIHRoZSB0eXBlCgkv
LyBhdHRyaWJ1dGUpIHRvIGlkZW50aWZ5IHRoZSB0eXBlIG9mIGNvbnRlbnQgdG8g
ZGlzcGxheQoJaWYgKCBub2RlTmFtZSA9PT0gIm9iamVjdCIgKSB7CgkJZGVzdC5v
dXRlckhUTUwgPSBzcmMub3V0ZXJIVE1MOwoKCX0gZWxzZSBpZiAoIG5vZGVOYW1l
ID09PSAiaW5wdXQiICYmIChzcmMudHlwZSA9PT0gImNoZWNrYm94IiB8fCBzcmMu
dHlwZSA9PT0gInJhZGlvIikgKSB7CgkJLy8gSUU2LTggZmFpbHMgdG8gcGVyc2lz
dCB0aGUgY2hlY2tlZCBzdGF0ZSBvZiBhIGNsb25lZCBjaGVja2JveAoJCS8vIG9y
IHJhZGlvIGJ1dHRvbi4gV29yc2UsIElFNi03IGZhaWwgdG8gZ2l2ZSB0aGUgY2xv
bmVkIGVsZW1lbnQKCQkvLyBhIGNoZWNrZWQgYXBwZWFyYW5jZSBpZiB0aGUgZGVm
YXVsdENoZWNrZWQgdmFsdWUgaXNuJ3QgYWxzbyBzZXQKCQlpZiAoIHNyYy5jaGVj
a2VkICkgewoJCQlkZXN0LmRlZmF1bHRDaGVja2VkID0gZGVzdC5jaGVja2VkID0g
c3JjLmNoZWNrZWQ7CgkJfQoKCQkvLyBJRTYtNyBnZXQgY29uZnVzZWQgYW5kIGVu
ZCB1cCBzZXR0aW5nIHRoZSB2YWx1ZSBvZiBhIGNsb25lZAoJCS8vIGNoZWNrYm94
L3JhZGlvIGJ1dHRvbiB0byBhbiBlbXB0eSBzdHJpbmcgaW5zdGVhZCBvZiAib24i
CgkJaWYgKCBkZXN0LnZhbHVlICE9PSBzcmMudmFsdWUgKSB7CgkJCWRlc3QudmFs
dWUgPSBzcmMudmFsdWU7CgkJfQoKCS8vIElFNi04IGZhaWxzIHRvIHJldHVybiB0
aGUgc2VsZWN0ZWQgb3B0aW9uIHRvIHRoZSBkZWZhdWx0IHNlbGVjdGVkCgkvLyBz
dGF0ZSB3aGVuIGNsb25pbmcgb3B0aW9ucwoJfSBlbHNlIGlmICggbm9kZU5hbWUg
PT09ICJvcHRpb24iICkgewoJCWRlc3Quc2VsZWN0ZWQgPSBzcmMuZGVmYXVsdFNl
bGVjdGVkOwoKCS8vIElFNi04IGZhaWxzIHRvIHNldCB0aGUgZGVmYXVsdFZhbHVl
IHRvIHRoZSBjb3JyZWN0IHZhbHVlIHdoZW4KCS8vIGNsb25pbmcgb3RoZXIgdHlw
ZXMgb2YgaW5wdXQgZmllbGRzCgl9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gImlu
cHV0IiB8fCBub2RlTmFtZSA9PT0gInRleHRhcmVhIiApIHsKCQlkZXN0LmRlZmF1
bHRWYWx1ZSA9IHNyYy5kZWZhdWx0VmFsdWU7CgoJLy8gSUUgYmxhbmtzIGNvbnRl
bnRzIHdoZW4gY2xvbmluZyBzY3JpcHRzCgl9IGVsc2UgaWYgKCBub2RlTmFtZSA9
PT0gInNjcmlwdCIgJiYgZGVzdC50ZXh0ICE9PSBzcmMudGV4dCApIHsKCQlkZXN0
LnRleHQgPSBzcmMudGV4dDsKCX0KCgkvLyBFdmVudCBkYXRhIGdldHMgcmVmZXJl
bmNlZCBpbnN0ZWFkIG9mIGNvcGllZCBpZiB0aGUgZXhwYW5kbwoJLy8gZ2V0cyBj
b3BpZWQgdG9vCglkZXN0LnJlbW92ZUF0dHJpYnV0ZSggalF1ZXJ5LmV4cGFuZG8g
KTsKCgkvLyBDbGVhciBmbGFncyBmb3IgYnViYmxpbmcgc3BlY2lhbCBjaGFuZ2Uv
c3VibWl0IGV2ZW50cywgdGhleSBtdXN0CgkvLyBiZSByZWF0dGFjaGVkIHdoZW4g
dGhlIG5ld2x5IGNsb25lZCBldmVudHMgYXJlIGZpcnN0IGFjdGl2YXRlZAoJZGVz
dC5yZW1vdmVBdHRyaWJ1dGUoICJfc3VibWl0X2F0dGFjaGVkIiApOwoJZGVzdC5y
ZW1vdmVBdHRyaWJ1dGUoICJfY2hhbmdlX2F0dGFjaGVkIiApOwp9CgpqUXVlcnku
YnVpbGRGcmFnbWVudCA9IGZ1bmN0aW9uKCBhcmdzLCBub2Rlcywgc2NyaXB0cyAp
IHsKCXZhciBmcmFnbWVudCwgY2FjaGVhYmxlLCBjYWNoZXJlc3VsdHMsIGRvYywK
CWZpcnN0ID0gYXJnc1sgMCBdOwoKCS8vIG5vZGVzIG1heSBjb250YWluIGVpdGhl
ciBhbiBleHBsaWNpdCBkb2N1bWVudCBvYmplY3QsCgkvLyBhIGpRdWVyeSBjb2xs
ZWN0aW9uIG9yIGNvbnRleHQgb2JqZWN0LgoJLy8gSWYgbm9kZXNbMF0gY29udGFp
bnMgYSB2YWxpZCBvYmplY3QgdG8gYXNzaWduIHRvIGRvYwoJaWYgKCBub2RlcyAm
JiBub2Rlc1swXSApIHsKCQlkb2MgPSBub2Rlc1swXS5vd25lckRvY3VtZW50IHx8
IG5vZGVzWzBdOwoJfQoKCS8vIEVuc3VyZSB0aGF0IGFuIGF0dHIgb2JqZWN0IGRv
ZXNuJ3QgaW5jb3JyZWN0bHkgc3RhbmQgaW4gYXMgYSBkb2N1bWVudCBvYmplY3QK
CS8vIENocm9tZSBhbmQgRmlyZWZveCBzZWVtIHRvIGFsbG93IHRoaXMgdG8gb2Nj
dXIgYW5kIHdpbGwgdGhyb3cgZXhjZXB0aW9uCgkvLyBGaXhlcyAjODk1MAoJaWYg
KCAhZG9jLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQgKSB7CgkJZG9jID0gZG9jdW1l
bnQ7Cgl9CgoJLy8gT25seSBjYWNoZSAic21hbGwiICgxLzIgS0IpIEhUTUwgc3Ry
aW5ncyB0aGF0IGFyZSBhc3NvY2lhdGVkIHdpdGggdGhlIG1haW4gZG9jdW1lbnQK
CS8vIENsb25pbmcgb3B0aW9ucyBsb3NlcyB0aGUgc2VsZWN0ZWQgc3RhdGUsIHNv
IGRvbid0IGNhY2hlIHRoZW0KCS8vIElFIDYgZG9lc24ndCBsaWtlIGl0IHdoZW4g
eW91IHB1dCA8b2JqZWN0PiBvciA8ZW1iZWQ+IGVsZW1lbnRzIGluIGEgZnJhZ21l
bnQKCS8vIEFsc28sIFdlYktpdCBkb2VzIG5vdCBjbG9uZSAnY2hlY2tlZCcgYXR0
cmlidXRlcyBvbiBjbG9uZU5vZGUsIHNvIGRvbid0IGNhY2hlCgkvLyBMYXN0bHks
IElFNiw3LDggd2lsbCBub3QgY29ycmVjdGx5IHJldXNlIGNhY2hlZCBmcmFnbWVu
dHMgdGhhdCB3ZXJlIGNyZWF0ZWQgZnJvbSB1bmtub3duIGVsZW1zICMxMDUwMQoJ
aWYgKCBhcmdzLmxlbmd0aCA9PT0gMSAmJiB0eXBlb2YgZmlyc3QgPT09ICJzdHJp
bmciICYmIGZpcnN0Lmxlbmd0aCA8IDUxMiAmJiBkb2MgPT09IGRvY3VtZW50ICYm
CgkJZmlyc3QuY2hhckF0KDApID09PSAiPCIgJiYgIXJub2NhY2hlLnRlc3QoIGZp
cnN0ICkgJiYKCQkoalF1ZXJ5LnN1cHBvcnQuY2hlY2tDbG9uZSB8fCAhcmNoZWNr
ZWQudGVzdCggZmlyc3QgKSkgJiYKCQkoalF1ZXJ5LnN1cHBvcnQuaHRtbDVDbG9u
ZSB8fCAhcm5vc2hpbWNhY2hlLnRlc3QoIGZpcnN0ICkpICkgewoKCQljYWNoZWFi
bGUgPSB0cnVlOwoKCQljYWNoZXJlc3VsdHMgPSBqUXVlcnkuZnJhZ21lbnRzWyBm
aXJzdCBdOwoJCWlmICggY2FjaGVyZXN1bHRzICYmIGNhY2hlcmVzdWx0cyAhPT0g
MSApIHsKCQkJZnJhZ21lbnQgPSBjYWNoZXJlc3VsdHM7CgkJfQoJfQoKCWlmICgg
IWZyYWdtZW50ICkgewoJCWZyYWdtZW50ID0gZG9jLmNyZWF0ZURvY3VtZW50RnJh
Z21lbnQoKTsKCQlqUXVlcnkuY2xlYW4oIGFyZ3MsIGRvYywgZnJhZ21lbnQsIHNj
cmlwdHMgKTsKCX0KCglpZiAoIGNhY2hlYWJsZSApIHsKCQlqUXVlcnkuZnJhZ21l
bnRzWyBmaXJzdCBdID0gY2FjaGVyZXN1bHRzID8gZnJhZ21lbnQgOiAxOwoJfQoK
CXJldHVybiB7IGZyYWdtZW50OiBmcmFnbWVudCwgY2FjaGVhYmxlOiBjYWNoZWFi
bGUgfTsKfTsKCmpRdWVyeS5mcmFnbWVudHMgPSB7fTsKCmpRdWVyeS5lYWNoKHsK
CWFwcGVuZFRvOiAiYXBwZW5kIiwKCXByZXBlbmRUbzogInByZXBlbmQiLAoJaW5z
ZXJ0QmVmb3JlOiAiYmVmb3JlIiwKCWluc2VydEFmdGVyOiAiYWZ0ZXIiLAoJcmVw
bGFjZUFsbDogInJlcGxhY2VXaXRoIgp9LCBmdW5jdGlvbiggbmFtZSwgb3JpZ2lu
YWwgKSB7CglqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzZWxlY3RvciAp
IHsKCQl2YXIgcmV0ID0gW10sCgkJCWluc2VydCA9IGpRdWVyeSggc2VsZWN0b3Ig
KSwKCQkJcGFyZW50ID0gdGhpcy5sZW5ndGggPT09IDEgJiYgdGhpc1swXS5wYXJl
bnROb2RlOwoKCQlpZiAoIHBhcmVudCAmJiBwYXJlbnQubm9kZVR5cGUgPT09IDEx
ICYmIHBhcmVudC5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMSAmJiBpbnNlcnQubGVu
Z3RoID09PSAxICkgewoJCQlpbnNlcnRbIG9yaWdpbmFsIF0oIHRoaXNbMF0gKTsK
CQkJcmV0dXJuIHRoaXM7CgoJCX0gZWxzZSB7CgkJCWZvciAoIHZhciBpID0gMCwg
bCA9IGluc2VydC5sZW5ndGg7IGkgPCBsOyBpKysgKSB7CgkJCQl2YXIgZWxlbXMg
PSAoIGkgPiAwID8gdGhpcy5jbG9uZSh0cnVlKSA6IHRoaXMgKS5nZXQoKTsKCQkJ
CWpRdWVyeSggaW5zZXJ0W2ldIClbIG9yaWdpbmFsIF0oIGVsZW1zICk7CgkJCQly
ZXQgPSByZXQuY29uY2F0KCBlbGVtcyApOwoJCQl9CgoJCQlyZXR1cm4gdGhpcy5w
dXNoU3RhY2soIHJldCwgbmFtZSwgaW5zZXJ0LnNlbGVjdG9yICk7CgkJfQoJfTsK
fSk7CgpmdW5jdGlvbiBnZXRBbGwoIGVsZW0gKSB7CglpZiAoIHR5cGVvZiBlbGVt
LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSAidW5kZWZpbmVkIiApIHsKCQlyZXR1
cm4gZWxlbS5nZXRFbGVtZW50c0J5VGFnTmFtZSggIioiICk7CgoJfSBlbHNlIGlm
ICggdHlwZW9mIGVsZW0ucXVlcnlTZWxlY3RvckFsbCAhPT0gInVuZGVmaW5lZCIg
KSB7CgkJcmV0dXJuIGVsZW0ucXVlcnlTZWxlY3RvckFsbCggIioiICk7CgoJfSBl
bHNlIHsKCQlyZXR1cm4gW107Cgl9Cn0KCi8vIFVzZWQgaW4gY2xlYW4sIGZpeGVz
IHRoZSBkZWZhdWx0Q2hlY2tlZCBwcm9wZXJ0eQpmdW5jdGlvbiBmaXhEZWZhdWx0
Q2hlY2tlZCggZWxlbSApIHsKCWlmICggZWxlbS50eXBlID09PSAiY2hlY2tib3gi
IHx8IGVsZW0udHlwZSA9PT0gInJhZGlvIiApIHsKCQllbGVtLmRlZmF1bHRDaGVj
a2VkID0gZWxlbS5jaGVja2VkOwoJfQp9Ci8vIEZpbmRzIGFsbCBpbnB1dHMgYW5k
IHBhc3NlcyB0aGVtIHRvIGZpeERlZmF1bHRDaGVja2VkCmZ1bmN0aW9uIGZpbmRJ
bnB1dHMoIGVsZW0gKSB7Cgl2YXIgbm9kZU5hbWUgPSAoIGVsZW0ubm9kZU5hbWUg
fHwgIiIgKS50b0xvd2VyQ2FzZSgpOwoJaWYgKCBub2RlTmFtZSA9PT0gImlucHV0
IiApIHsKCQlmaXhEZWZhdWx0Q2hlY2tlZCggZWxlbSApOwoJLy8gU2tpcCBzY3Jp
cHRzLCBnZXQgb3RoZXIgY2hpbGRyZW4KCX0gZWxzZSBpZiAoIG5vZGVOYW1lICE9
PSAic2NyaXB0IiAmJiB0eXBlb2YgZWxlbS5nZXRFbGVtZW50c0J5VGFnTmFtZSAh
PT0gInVuZGVmaW5lZCIgKSB7CgkJalF1ZXJ5LmdyZXAoIGVsZW0uZ2V0RWxlbWVu
dHNCeVRhZ05hbWUoImlucHV0IiksIGZpeERlZmF1bHRDaGVja2VkICk7Cgl9Cn0K
Ci8vIERlcml2ZWQgRnJvbTogaHR0cDovL3d3dy5pZWNzcy5jb20vc2hpbXByb3Zl
L2phdmFzY3JpcHQvc2hpbXByb3ZlLjEtMC0xLmpzCmZ1bmN0aW9uIHNoaW1DbG9u
ZU5vZGUoIGVsZW0gKSB7Cgl2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVu
dCggImRpdiIgKTsKCXNhZmVGcmFnbWVudC5hcHBlbmRDaGlsZCggZGl2ICk7CgoJ
ZGl2LmlubmVySFRNTCA9IGVsZW0ub3V0ZXJIVE1MOwoJcmV0dXJuIGRpdi5maXJz
dENoaWxkOwp9CgpqUXVlcnkuZXh0ZW5kKHsKCWNsb25lOiBmdW5jdGlvbiggZWxl
bSwgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKSB7CgkJdmFyIHNy
Y0VsZW1lbnRzLAoJCQlkZXN0RWxlbWVudHMsCgkJCWksCgkJCS8vIElFPD04IGRv
ZXMgbm90IHByb3Blcmx5IGNsb25lIGRldGFjaGVkLCB1bmtub3duIGVsZW1lbnQg
bm9kZXMKCQkJY2xvbmUgPSBqUXVlcnkuc3VwcG9ydC5odG1sNUNsb25lIHx8IGpR
dWVyeS5pc1hNTERvYyhlbGVtKSB8fCAhcm5vc2hpbWNhY2hlLnRlc3QoICI8IiAr
IGVsZW0ubm9kZU5hbWUgKyAiPiIgKSA/CgkJCQllbGVtLmNsb25lTm9kZSggdHJ1
ZSApIDoKCQkJCXNoaW1DbG9uZU5vZGUoIGVsZW0gKTsKCgkJaWYgKCAoIWpRdWVy
eS5zdXBwb3J0Lm5vQ2xvbmVFdmVudCB8fCAhalF1ZXJ5LnN1cHBvcnQubm9DbG9u
ZUNoZWNrZWQpICYmCgkJCQkoZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBlbGVtLm5v
ZGVUeXBlID09PSAxMSkgJiYgIWpRdWVyeS5pc1hNTERvYyhlbGVtKSApIHsKCQkJ
Ly8gSUUgY29waWVzIGV2ZW50cyBib3VuZCB2aWEgYXR0YWNoRXZlbnQgd2hlbiB1
c2luZyBjbG9uZU5vZGUuCgkJCS8vIENhbGxpbmcgZGV0YWNoRXZlbnQgb24gdGhl
IGNsb25lIHdpbGwgYWxzbyByZW1vdmUgdGhlIGV2ZW50cwoJCQkvLyBmcm9tIHRo
ZSBvcmlnaW5hbC4gSW4gb3JkZXIgdG8gZ2V0IGFyb3VuZCB0aGlzLCB3ZSB1c2Ug
c29tZQoJCQkvLyBwcm9wcmlldGFyeSBtZXRob2RzIHRvIGNsZWFyIHRoZSBldmVu
dHMuIFRoYW5rcyB0byBNb29Ub29scwoJCQkvLyBndXlzIGZvciB0aGlzIGhvdG5l
c3MuCgoJCQljbG9uZUZpeEF0dHJpYnV0ZXMoIGVsZW0sIGNsb25lICk7CgoJCQkv
LyBVc2luZyBTaXp6bGUgaGVyZSBpcyBjcmF6eSBzbG93LCBzbyB3ZSB1c2UgZ2V0
RWxlbWVudHNCeVRhZ05hbWUgaW5zdGVhZAoJCQlzcmNFbGVtZW50cyA9IGdldEFs
bCggZWxlbSApOwoJCQlkZXN0RWxlbWVudHMgPSBnZXRBbGwoIGNsb25lICk7CgoJ
CQkvLyBXZWlyZCBpdGVyYXRpb24gYmVjYXVzZSBJRSB3aWxsIHJlcGxhY2UgdGhl
IGxlbmd0aCBwcm9wZXJ0eQoJCQkvLyB3aXRoIGFuIGVsZW1lbnQgaWYgeW91IGFy
ZSBjbG9uaW5nIHRoZSBib2R5IGFuZCBvbmUgb2YgdGhlCgkJCS8vIGVsZW1lbnRz
IG9uIHRoZSBwYWdlIGhhcyBhIG5hbWUgb3IgaWQgb2YgImxlbmd0aCIKCQkJZm9y
ICggaSA9IDA7IHNyY0VsZW1lbnRzW2ldOyArK2kgKSB7CgkJCQkvLyBFbnN1cmUg
dGhhdCB0aGUgZGVzdGluYXRpb24gbm9kZSBpcyBub3QgbnVsbDsgRml4ZXMgIzk1
ODcKCQkJCWlmICggZGVzdEVsZW1lbnRzW2ldICkgewoJCQkJCWNsb25lRml4QXR0
cmlidXRlcyggc3JjRWxlbWVudHNbaV0sIGRlc3RFbGVtZW50c1tpXSApOwoJCQkJ
fQoJCQl9CgkJfQoKCQkvLyBDb3B5IHRoZSBldmVudHMgZnJvbSB0aGUgb3JpZ2lu
YWwgdG8gdGhlIGNsb25lCgkJaWYgKCBkYXRhQW5kRXZlbnRzICkgewoJCQljbG9u
ZUNvcHlFdmVudCggZWxlbSwgY2xvbmUgKTsKCgkJCWlmICggZGVlcERhdGFBbmRF
dmVudHMgKSB7CgkJCQlzcmNFbGVtZW50cyA9IGdldEFsbCggZWxlbSApOwoJCQkJ
ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSApOwoKCQkJCWZvciAoIGkgPSAw
OyBzcmNFbGVtZW50c1tpXTsgKytpICkgewoJCQkJCWNsb25lQ29weUV2ZW50KCBz
cmNFbGVtZW50c1tpXSwgZGVzdEVsZW1lbnRzW2ldICk7CgkJCQl9CgkJCX0KCQl9
CgoJCXNyY0VsZW1lbnRzID0gZGVzdEVsZW1lbnRzID0gbnVsbDsKCgkJLy8gUmV0
dXJuIHRoZSBjbG9uZWQgc2V0CgkJcmV0dXJuIGNsb25lOwoJfSwKCgljbGVhbjog
ZnVuY3Rpb24oIGVsZW1zLCBjb250ZXh0LCBmcmFnbWVudCwgc2NyaXB0cyApIHsK
CQl2YXIgY2hlY2tTY3JpcHRUeXBlLCBzY3JpcHQsIGosCgkJCQlyZXQgPSBbXTsK
CgkJY29udGV4dCA9IGNvbnRleHQgfHwgZG9jdW1lbnQ7CgoJCS8vICFjb250ZXh0
LmNyZWF0ZUVsZW1lbnQgZmFpbHMgaW4gSUUgd2l0aCBhbiBlcnJvciBidXQgcmV0
dXJucyB0eXBlb2YgJ29iamVjdCcKCQlpZiAoIHR5cGVvZiBjb250ZXh0LmNyZWF0
ZUVsZW1lbnQgPT09ICJ1bmRlZmluZWQiICkgewoJCQljb250ZXh0ID0gY29udGV4
dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHRbMF0gJiYgY29udGV4dFswXS5vd25l
ckRvY3VtZW50IHx8IGRvY3VtZW50OwoJCX0KCgkJZm9yICggdmFyIGkgPSAwLCBl
bGVtOyAoZWxlbSA9IGVsZW1zW2ldKSAhPSBudWxsOyBpKysgKSB7CgkJCWlmICgg
dHlwZW9mIGVsZW0gPT09ICJudW1iZXIiICkgewoJCQkJZWxlbSArPSAiIjsKCQkJ
fQoKCQkJaWYgKCAhZWxlbSApIHsKCQkJCWNvbnRpbnVlOwoJCQl9CgoJCQkvLyBD
b252ZXJ0IGh0bWwgc3RyaW5nIGludG8gRE9NIG5vZGVzCgkJCWlmICggdHlwZW9m
IGVsZW0gPT09ICJzdHJpbmciICkgewoJCQkJaWYgKCAhcmh0bWwudGVzdCggZWxl
bSApICkgewoJCQkJCWVsZW0gPSBjb250ZXh0LmNyZWF0ZVRleHROb2RlKCBlbGVt
ICk7CgkJCQl9IGVsc2UgewoJCQkJCS8vIEZpeCAiWEhUTUwiLXN0eWxlIHRhZ3Mg
aW4gYWxsIGJyb3dzZXJzCgkJCQkJZWxlbSA9IGVsZW0ucmVwbGFjZShyeGh0bWxU
YWcsICI8JDE+PC8kMj4iKTsKCgkJCQkJLy8gVHJpbSB3aGl0ZXNwYWNlLCBvdGhl
cndpc2UgaW5kZXhPZiB3b24ndCB3b3JrIGFzIGV4cGVjdGVkCgkJCQkJdmFyIHRh
ZyA9ICggcnRhZ05hbWUuZXhlYyggZWxlbSApIHx8IFsiIiwgIiJdIClbMV0udG9M
b3dlckNhc2UoKSwKCQkJCQkJd3JhcCA9IHdyYXBNYXBbIHRhZyBdIHx8IHdyYXBN
YXAuX2RlZmF1bHQsCgkJCQkJCWRlcHRoID0gd3JhcFswXSwKCQkJCQkJZGl2ID0g
Y29udGV4dC5jcmVhdGVFbGVtZW50KCJkaXYiKSwKCQkJCQkJc2FmZUNoaWxkTm9k
ZXMgPSBzYWZlRnJhZ21lbnQuY2hpbGROb2RlcywKCQkJCQkJcmVtb3ZlOwoKCQkJ
CQkvLyBBcHBlbmQgd3JhcHBlciBlbGVtZW50IHRvIHVua25vd24gZWxlbWVudCBz
YWZlIGRvYyBmcmFnbWVudAoJCQkJCWlmICggY29udGV4dCA9PT0gZG9jdW1lbnQg
KSB7CgkJCQkJCS8vIFVzZSB0aGUgZnJhZ21lbnQgd2UndmUgYWxyZWFkeSBjcmVh
dGVkIGZvciB0aGlzIGRvY3VtZW50CgkJCQkJCXNhZmVGcmFnbWVudC5hcHBlbmRD
aGlsZCggZGl2ICk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJLy8gVXNlIGEgZnJhZ21l
bnQgY3JlYXRlZCB3aXRoIHRoZSBvd25lciBkb2N1bWVudAoJCQkJCQljcmVhdGVT
YWZlRnJhZ21lbnQoIGNvbnRleHQgKS5hcHBlbmRDaGlsZCggZGl2ICk7CgkJCQkJ
fQoKCQkJCQkvLyBHbyB0byBodG1sIGFuZCBiYWNrLCB0aGVuIHBlZWwgb2ZmIGV4
dHJhIHdyYXBwZXJzCgkJCQkJZGl2LmlubmVySFRNTCA9IHdyYXBbMV0gKyBlbGVt
ICsgd3JhcFsyXTsKCgkJCQkJLy8gTW92ZSB0byB0aGUgcmlnaHQgZGVwdGgKCQkJ
CQl3aGlsZSAoIGRlcHRoLS0gKSB7CgkJCQkJCWRpdiA9IGRpdi5sYXN0Q2hpbGQ7
CgkJCQkJfQoKCQkJCQkvLyBSZW1vdmUgSUUncyBhdXRvaW5zZXJ0ZWQgPHRib2R5
PiBmcm9tIHRhYmxlIGZyYWdtZW50cwoJCQkJCWlmICggIWpRdWVyeS5zdXBwb3J0
LnRib2R5ICkgewoKCQkJCQkJLy8gU3RyaW5nIHdhcyBhIDx0YWJsZT4sICptYXkq
IGhhdmUgc3B1cmlvdXMgPHRib2R5PgoJCQkJCQl2YXIgaGFzQm9keSA9IHJ0Ym9k
eS50ZXN0KGVsZW0pLAoJCQkJCQkJdGJvZHkgPSB0YWcgPT09ICJ0YWJsZSIgJiYg
IWhhc0JvZHkgPwoJCQkJCQkJCWRpdi5maXJzdENoaWxkICYmIGRpdi5maXJzdENo
aWxkLmNoaWxkTm9kZXMgOgoKCQkJCQkJCQkvLyBTdHJpbmcgd2FzIGEgYmFyZSA8
dGhlYWQ+IG9yIDx0Zm9vdD4KCQkJCQkJCQl3cmFwWzFdID09PSAiPHRhYmxlPiIg
JiYgIWhhc0JvZHkgPwoJCQkJCQkJCQlkaXYuY2hpbGROb2RlcyA6CgkJCQkJCQkJ
CVtdOwoKCQkJCQkJZm9yICggaiA9IHRib2R5Lmxlbmd0aCAtIDE7IGogPj0gMCA7
IC0taiApIHsKCQkJCQkJCWlmICggalF1ZXJ5Lm5vZGVOYW1lKCB0Ym9keVsgaiBd
LCAidGJvZHkiICkgJiYgIXRib2R5WyBqIF0uY2hpbGROb2Rlcy5sZW5ndGggKSB7
CgkJCQkJCQkJdGJvZHlbIGogXS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCB0Ym9k
eVsgaiBdICk7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgoJCQkJCS8vIElFIGNv
bXBsZXRlbHkga2lsbHMgbGVhZGluZyB3aGl0ZXNwYWNlIHdoZW4gaW5uZXJIVE1M
IGlzIHVzZWQKCQkJCQlpZiAoICFqUXVlcnkuc3VwcG9ydC5sZWFkaW5nV2hpdGVz
cGFjZSAmJiBybGVhZGluZ1doaXRlc3BhY2UudGVzdCggZWxlbSApICkgewoJCQkJ
CQlkaXYuaW5zZXJ0QmVmb3JlKCBjb250ZXh0LmNyZWF0ZVRleHROb2RlKCBybGVh
ZGluZ1doaXRlc3BhY2UuZXhlYyhlbGVtKVswXSApLCBkaXYuZmlyc3RDaGlsZCAp
OwoJCQkJCX0KCgkJCQkJZWxlbSA9IGRpdi5jaGlsZE5vZGVzOwoKCQkJCQkvLyBD
bGVhciBlbGVtZW50cyBmcm9tIERvY3VtZW50RnJhZ21lbnQgKHNhZmVGcmFnbWVu
dCBvciBvdGhlcndpc2UpCgkJCQkJLy8gdG8gYXZvaWQgaG9hcmRpbmcgZWxlbWVu
dHMuIEZpeGVzICMxMTM1NgoJCQkJCWlmICggZGl2ICkgewoJCQkJCQlkaXYucGFy
ZW50Tm9kZS5yZW1vdmVDaGlsZCggZGl2ICk7CgoJCQkJCQkvLyBHdWFyZCBhZ2Fp
bnN0IC0xIGluZGV4IGV4Y2VwdGlvbnMgaW4gRkYzLjYKCQkJCQkJaWYgKCBzYWZl
Q2hpbGROb2Rlcy5sZW5ndGggPiAwICkgewoJCQkJCQkJcmVtb3ZlID0gc2FmZUNo
aWxkTm9kZXNbIHNhZmVDaGlsZE5vZGVzLmxlbmd0aCAtIDEgXTsKCgkJCQkJCQlp
ZiAoIHJlbW92ZSAmJiByZW1vdmUucGFyZW50Tm9kZSApIHsKCQkJCQkJCQlyZW1v
dmUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggcmVtb3ZlICk7CgkJCQkJCQl9CgkJ
CQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCgkJCS8vIFJlc2V0cyBkZWZhdWx0Q2hl
Y2tlZCBmb3IgYW55IHJhZGlvcyBhbmQgY2hlY2tib3hlcwoJCQkvLyBhYm91dCB0
byBiZSBhcHBlbmRlZCB0byB0aGUgRE9NIGluIElFIDYvNyAoIzgwNjApCgkJCXZh
ciBsZW47CgkJCWlmICggIWpRdWVyeS5zdXBwb3J0LmFwcGVuZENoZWNrZWQgKSB7
CgkJCQlpZiAoIGVsZW1bMF0gJiYgdHlwZW9mIChsZW4gPSBlbGVtLmxlbmd0aCkg
PT09ICJudW1iZXIiICkgewoJCQkJCWZvciAoIGogPSAwOyBqIDwgbGVuOyBqKysg
KSB7CgkJCQkJCWZpbmRJbnB1dHMoIGVsZW1bal0gKTsKCQkJCQl9CgkJCQl9IGVs
c2UgewoJCQkJCWZpbmRJbnB1dHMoIGVsZW0gKTsKCQkJCX0KCQkJfQoKCQkJaWYg
KCBlbGVtLm5vZGVUeXBlICkgewoJCQkJcmV0LnB1c2goIGVsZW0gKTsKCQkJfSBl
bHNlIHsKCQkJCXJldCA9IGpRdWVyeS5tZXJnZSggcmV0LCBlbGVtICk7CgkJCX0K
CQl9CgoJCWlmICggZnJhZ21lbnQgKSB7CgkJCWNoZWNrU2NyaXB0VHlwZSA9IGZ1
bmN0aW9uKCBlbGVtICkgewoJCQkJcmV0dXJuICFlbGVtLnR5cGUgfHwgcnNjcmlw
dFR5cGUudGVzdCggZWxlbS50eXBlICk7CgkJCX07CgkJCWZvciAoIGkgPSAwOyBy
ZXRbaV07IGkrKyApIHsKCQkJCXNjcmlwdCA9IHJldFtpXTsKCQkJCWlmICggc2Ny
aXB0cyAmJiBqUXVlcnkubm9kZU5hbWUoIHNjcmlwdCwgInNjcmlwdCIgKSAmJiAo
IXNjcmlwdC50eXBlIHx8IHJzY3JpcHRUeXBlLnRlc3QoIHNjcmlwdC50eXBlICkp
ICkgewoJCQkJCXNjcmlwdHMucHVzaCggc2NyaXB0LnBhcmVudE5vZGUgPyBzY3Jp
cHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggc2NyaXB0ICkgOiBzY3JpcHQgKTsK
CgkJCQl9IGVsc2UgewoJCQkJCWlmICggc2NyaXB0Lm5vZGVUeXBlID09PSAxICkg
ewoJCQkJCQl2YXIganNUYWdzID0galF1ZXJ5LmdyZXAoIHNjcmlwdC5nZXRFbGVt
ZW50c0J5VGFnTmFtZSggInNjcmlwdCIgKSwgY2hlY2tTY3JpcHRUeXBlICk7CgoJ
CQkJCQlyZXQuc3BsaWNlLmFwcGx5KCByZXQsIFtpICsgMSwgMF0uY29uY2F0KCBq
c1RhZ3MgKSApOwoJCQkJCX0KCQkJCQlmcmFnbWVudC5hcHBlbmRDaGlsZCggc2Ny
aXB0ICk7CgkJCQl9CgkJCX0KCQl9CgoJCXJldHVybiByZXQ7Cgl9LAoKCWNsZWFu
RGF0YTogZnVuY3Rpb24oIGVsZW1zICkgewoJCXZhciBkYXRhLCBpZCwKCQkJY2Fj
aGUgPSBqUXVlcnkuY2FjaGUsCgkJCXNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3Bl
Y2lhbCwKCQkJZGVsZXRlRXhwYW5kbyA9IGpRdWVyeS5zdXBwb3J0LmRlbGV0ZUV4
cGFuZG87CgoJCWZvciAoIHZhciBpID0gMCwgZWxlbTsgKGVsZW0gPSBlbGVtc1tp
XSkgIT0gbnVsbDsgaSsrICkgewoJCQlpZiAoIGVsZW0ubm9kZU5hbWUgJiYgalF1
ZXJ5Lm5vRGF0YVtlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCldICkgewoJCQkJ
Y29udGludWU7CgkJCX0KCgkJCWlkID0gZWxlbVsgalF1ZXJ5LmV4cGFuZG8gXTsK
CgkJCWlmICggaWQgKSB7CgkJCQlkYXRhID0gY2FjaGVbIGlkIF07CgoJCQkJaWYg
KCBkYXRhICYmIGRhdGEuZXZlbnRzICkgewoJCQkJCWZvciAoIHZhciB0eXBlIGlu
IGRhdGEuZXZlbnRzICkgewoJCQkJCQlpZiAoIHNwZWNpYWxbIHR5cGUgXSApIHsK
CQkJCQkJCWpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKTsKCgkJCQkJ
CS8vIFRoaXMgaXMgYSBzaG9ydGN1dCB0byBhdm9pZCBqUXVlcnkuZXZlbnQucmVt
b3ZlJ3Mgb3ZlcmhlYWQKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCWpRdWVyeS5yZW1v
dmVFdmVudCggZWxlbSwgdHlwZSwgZGF0YS5oYW5kbGUgKTsKCQkJCQkJfQoJCQkJ
CX0KCgkJCQkJLy8gTnVsbCB0aGUgRE9NIHJlZmVyZW5jZSB0byBhdm9pZCBJRTYv
Ny84IGxlYWsgKCM3MDU0KQoJCQkJCWlmICggZGF0YS5oYW5kbGUgKSB7CgkJCQkJ
CWRhdGEuaGFuZGxlLmVsZW0gPSBudWxsOwoJCQkJCX0KCQkJCX0KCgkJCQlpZiAo
IGRlbGV0ZUV4cGFuZG8gKSB7CgkJCQkJZGVsZXRlIGVsZW1bIGpRdWVyeS5leHBh
bmRvIF07CgoJCQkJfSBlbHNlIGlmICggZWxlbS5yZW1vdmVBdHRyaWJ1dGUgKSB7
CgkJCQkJZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIGpRdWVyeS5leHBhbmRvICk7CgkJ
CQl9CgoJCQkJZGVsZXRlIGNhY2hlWyBpZCBdOwoJCQl9CgkJfQoJfQp9KTsKCgoK
CnZhciByYWxwaGEgPSAvYWxwaGFcKFteKV0qXCkvaSwKCXJvcGFjaXR5ID0gL29w
YWNpdHk9KFteKV0qKS8sCgkvLyBmaXhlZCBmb3IgSUU5LCBzZWUgIzgzNDYKCXJ1
cHBlciA9IC8oW0EtWl18Xm1zKS9nLAoJcm51bSA9IC9eW1wtK10/KD86XGQqXC4p
P1xkKyQvaSwKCXJudW1ub25weCA9IC9eLT8oPzpcZCpcLik/XGQrKD8hcHgpW15c
ZFxzXSskL2ksCglycmVsTnVtID0gL14oW1wtK10pPShbXC0rLlxkZV0rKS8sCgly
bWFyZ2luID0gL15tYXJnaW4vLAoKCWNzc1Nob3cgPSB7IHBvc2l0aW9uOiAiYWJz
b2x1dGUiLCB2aXNpYmlsaXR5OiAiaGlkZGVuIiwgZGlzcGxheTogImJsb2NrIiB9
LAoKCS8vIG9yZGVyIGlzIGltcG9ydGFudCEKCWNzc0V4cGFuZCA9IFsgIlRvcCIs
ICJSaWdodCIsICJCb3R0b20iLCAiTGVmdCIgXSwKCgljdXJDU1MsCgoJZ2V0Q29t
cHV0ZWRTdHlsZSwKCWN1cnJlbnRTdHlsZTsKCmpRdWVyeS5mbi5jc3MgPSBmdW5j
dGlvbiggbmFtZSwgdmFsdWUgKSB7CglyZXR1cm4galF1ZXJ5LmFjY2VzcyggdGhp
cywgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkgewoJCXJldHVybiB2YWx1
ZSAhPT0gdW5kZWZpbmVkID8KCQkJalF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lLCB2
YWx1ZSApIDoKCQkJalF1ZXJ5LmNzcyggZWxlbSwgbmFtZSApOwoJfSwgbmFtZSwg
dmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7Cn07CgpqUXVlcnkuZXh0ZW5k
KHsKCS8vIEFkZCBpbiBzdHlsZSBwcm9wZXJ0eSBob29rcyBmb3Igb3ZlcnJpZGlu
ZyB0aGUgZGVmYXVsdAoJLy8gYmVoYXZpb3Igb2YgZ2V0dGluZyBhbmQgc2V0dGlu
ZyBhIHN0eWxlIHByb3BlcnR5Cgljc3NIb29rczogewoJCW9wYWNpdHk6IHsKCQkJ
Z2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7CgkJCQlpZiAoIGNvbXB1
dGVkICkgewoJCQkJCS8vIFdlIHNob3VsZCBhbHdheXMgZ2V0IGEgbnVtYmVyIGJh
Y2sgZnJvbSBvcGFjaXR5CgkJCQkJdmFyIHJldCA9IGN1ckNTUyggZWxlbSwgIm9w
YWNpdHkiICk7CgkJCQkJcmV0dXJuIHJldCA9PT0gIiIgPyAiMSIgOiByZXQ7CgoJ
CQkJfSBlbHNlIHsKCQkJCQlyZXR1cm4gZWxlbS5zdHlsZS5vcGFjaXR5OwoJCQkJ
fQoJCQl9CgkJfQoJfSwKCgkvLyBFeGNsdWRlIHRoZSBmb2xsb3dpbmcgY3NzIHBy
b3BlcnRpZXMgdG8gYWRkIHB4Cgljc3NOdW1iZXI6IHsKCQkiZmlsbE9wYWNpdHki
OiB0cnVlLAoJCSJmb250V2VpZ2h0IjogdHJ1ZSwKCQkibGluZUhlaWdodCI6IHRy
dWUsCgkJIm9wYWNpdHkiOiB0cnVlLAoJCSJvcnBoYW5zIjogdHJ1ZSwKCQkid2lk
b3dzIjogdHJ1ZSwKCQkiekluZGV4IjogdHJ1ZSwKCQkiem9vbSI6IHRydWUKCX0s
CgoJLy8gQWRkIGluIHByb3BlcnRpZXMgd2hvc2UgbmFtZXMgeW91IHdpc2ggdG8g
Zml4IGJlZm9yZQoJLy8gc2V0dGluZyBvciBnZXR0aW5nIHRoZSB2YWx1ZQoJY3Nz
UHJvcHM6IHsKCQkvLyBub3JtYWxpemUgZmxvYXQgY3NzIHByb3BlcnR5CgkJImZs
b2F0IjogalF1ZXJ5LnN1cHBvcnQuY3NzRmxvYXQgPyAiY3NzRmxvYXQiIDogInN0
eWxlRmxvYXQiCgl9LAoKCS8vIEdldCBhbmQgc2V0IHRoZSBzdHlsZSBwcm9wZXJ0
eSBvbiBhIERPTSBOb2RlCglzdHlsZTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZh
bHVlLCBleHRyYSApIHsKCQkvLyBEb24ndCBzZXQgc3R5bGVzIG9uIHRleHQgYW5k
IGNvbW1lbnQgbm9kZXMKCQlpZiAoICFlbGVtIHx8IGVsZW0ubm9kZVR5cGUgPT09
IDMgfHwgZWxlbS5ub2RlVHlwZSA9PT0gOCB8fCAhZWxlbS5zdHlsZSApIHsKCQkJ
cmV0dXJuOwoJCX0KCgkJLy8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3
aXRoIHRoZSByaWdodCBuYW1lCgkJdmFyIHJldCwgdHlwZSwgb3JpZ05hbWUgPSBq
UXVlcnkuY2FtZWxDYXNlKCBuYW1lICksCgkJCXN0eWxlID0gZWxlbS5zdHlsZSwg
aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07CgoJCW5hbWUgPSBq
UXVlcnkuY3NzUHJvcHNbIG9yaWdOYW1lIF0gfHwgb3JpZ05hbWU7CgoJCS8vIENo
ZWNrIGlmIHdlJ3JlIHNldHRpbmcgYSB2YWx1ZQoJCWlmICggdmFsdWUgIT09IHVu
ZGVmaW5lZCApIHsKCQkJdHlwZSA9IHR5cGVvZiB2YWx1ZTsKCgkJCS8vIGNvbnZl
cnQgcmVsYXRpdmUgbnVtYmVyIHN0cmluZ3MgKCs9IG9yIC09KSB0byByZWxhdGl2
ZSBudW1iZXJzLiAjNzM0NQoJCQlpZiAoIHR5cGUgPT09ICJzdHJpbmciICYmIChy
ZXQgPSBycmVsTnVtLmV4ZWMoIHZhbHVlICkpICkgewoJCQkJdmFsdWUgPSAoICso
IHJldFsxXSArIDEpICogK3JldFsyXSApICsgcGFyc2VGbG9hdCggalF1ZXJ5LmNz
cyggZWxlbSwgbmFtZSApICk7CgkJCQkvLyBGaXhlcyBidWcgIzkyMzcKCQkJCXR5
cGUgPSAibnVtYmVyIjsKCQkJfQoKCQkJLy8gTWFrZSBzdXJlIHRoYXQgTmFOIGFu
ZCBudWxsIHZhbHVlcyBhcmVuJ3Qgc2V0LiBTZWU6ICM3MTE2CgkJCWlmICggdmFs
dWUgPT0gbnVsbCB8fCB0eXBlID09PSAibnVtYmVyIiAmJiBpc05hTiggdmFsdWUg
KSApIHsKCQkJCXJldHVybjsKCQkJfQoKCQkJLy8gSWYgYSBudW1iZXIgd2FzIHBh
c3NlZCBpbiwgYWRkICdweCcgdG8gdGhlIChleGNlcHQgZm9yIGNlcnRhaW4gQ1NT
IHByb3BlcnRpZXMpCgkJCWlmICggdHlwZSA9PT0gIm51bWJlciIgJiYgIWpRdWVy
eS5jc3NOdW1iZXJbIG9yaWdOYW1lIF0gKSB7CgkJCQl2YWx1ZSArPSAicHgiOwoJ
CQl9CgoJCQkvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkLCB1c2UgdGhhdCB2YWx1
ZSwgb3RoZXJ3aXNlIGp1c3Qgc2V0IHRoZSBzcGVjaWZpZWQgdmFsdWUKCQkJaWYg
KCAhaG9va3MgfHwgISgic2V0IiBpbiBob29rcykgfHwgKHZhbHVlID0gaG9va3Mu
c2V0KCBlbGVtLCB2YWx1ZSApKSAhPT0gdW5kZWZpbmVkICkgewoJCQkJLy8gV3Jh
cHBlZCB0byBwcmV2ZW50IElFIGZyb20gdGhyb3dpbmcgZXJyb3JzIHdoZW4gJ2lu
dmFsaWQnIHZhbHVlcyBhcmUgcHJvdmlkZWQKCQkJCS8vIEZpeGVzIGJ1ZyAjNTUw
OQoJCQkJdHJ5IHsKCQkJCQlzdHlsZVsgbmFtZSBdID0gdmFsdWU7CgkJCQl9IGNh
dGNoKGUpIHt9CgkJCX0KCgkJfSBlbHNlIHsKCQkJLy8gSWYgYSBob29rIHdhcyBw
cm92aWRlZCBnZXQgdGhlIG5vbi1jb21wdXRlZCB2YWx1ZSBmcm9tIHRoZXJlCgkJ
CWlmICggaG9va3MgJiYgImdldCIgaW4gaG9va3MgJiYgKHJldCA9IGhvb2tzLmdl
dCggZWxlbSwgZmFsc2UsIGV4dHJhICkpICE9PSB1bmRlZmluZWQgKSB7CgkJCQly
ZXR1cm4gcmV0OwoJCQl9CgoJCQkvLyBPdGhlcndpc2UganVzdCBnZXQgdGhlIHZh
bHVlIGZyb20gdGhlIHN0eWxlIG9iamVjdAoJCQlyZXR1cm4gc3R5bGVbIG5hbWUg
XTsKCQl9Cgl9LAoKCWNzczogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGV4dHJhICkg
ewoJCXZhciByZXQsIGhvb2tzOwoKCQkvLyBNYWtlIHN1cmUgdGhhdCB3ZSdyZSB3
b3JraW5nIHdpdGggdGhlIHJpZ2h0IG5hbWUKCQluYW1lID0galF1ZXJ5LmNhbWVs
Q2FzZSggbmFtZSApOwoJCWhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF07
CgkJbmFtZSA9IGpRdWVyeS5jc3NQcm9wc1sgbmFtZSBdIHx8IG5hbWU7CgoJCS8v
IGNzc0Zsb2F0IG5lZWRzIGEgc3BlY2lhbCB0cmVhdG1lbnQKCQlpZiAoIG5hbWUg
PT09ICJjc3NGbG9hdCIgKSB7CgkJCW5hbWUgPSAiZmxvYXQiOwoJCX0KCgkJLy8g
SWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGZy
b20gdGhlcmUKCQlpZiAoIGhvb2tzICYmICJnZXQiIGluIGhvb2tzICYmIChyZXQg
PSBob29rcy5nZXQoIGVsZW0sIHRydWUsIGV4dHJhICkpICE9PSB1bmRlZmluZWQg
KSB7CgkJCXJldHVybiByZXQ7CgoJCS8vIE90aGVyd2lzZSwgaWYgYSB3YXkgdG8g
Z2V0IHRoZSBjb21wdXRlZCB2YWx1ZSBleGlzdHMsIHVzZSB0aGF0CgkJfSBlbHNl
IGlmICggY3VyQ1NTICkgewoJCQlyZXR1cm4gY3VyQ1NTKCBlbGVtLCBuYW1lICk7
CgkJfQoJfSwKCgkvLyBBIG1ldGhvZCBmb3IgcXVpY2tseSBzd2FwcGluZyBpbi9v
dXQgQ1NTIHByb3BlcnRpZXMgdG8gZ2V0IGNvcnJlY3QgY2FsY3VsYXRpb25zCglz
d2FwOiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgY2FsbGJhY2sgKSB7CgkJdmFy
IG9sZCA9IHt9LAoJCQlyZXQsIG5hbWU7CgoJCS8vIFJlbWVtYmVyIHRoZSBvbGQg
dmFsdWVzLCBhbmQgaW5zZXJ0IHRoZSBuZXcgb25lcwoJCWZvciAoIG5hbWUgaW4g
b3B0aW9ucyApIHsKCQkJb2xkWyBuYW1lIF0gPSBlbGVtLnN0eWxlWyBuYW1lIF07
CgkJCWVsZW0uc3R5bGVbIG5hbWUgXSA9IG9wdGlvbnNbIG5hbWUgXTsKCQl9CgoJ
CXJldCA9IGNhbGxiYWNrLmNhbGwoIGVsZW0gKTsKCgkJLy8gUmV2ZXJ0IHRoZSBv
bGQgdmFsdWVzCgkJZm9yICggbmFtZSBpbiBvcHRpb25zICkgewoJCQllbGVtLnN0
eWxlWyBuYW1lIF0gPSBvbGRbIG5hbWUgXTsKCQl9CgoJCXJldHVybiByZXQ7Cgl9
Cn0pOwoKLy8gREVQUkVDQVRFRCBpbiAxLjMsIFVzZSBqUXVlcnkuY3NzKCkgaW5z
dGVhZApqUXVlcnkuY3VyQ1NTID0galF1ZXJ5LmNzczsKCmlmICggZG9jdW1lbnQu
ZGVmYXVsdFZpZXcgJiYgZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRT
dHlsZSApIHsKCWdldENvbXB1dGVkU3R5bGUgPSBmdW5jdGlvbiggZWxlbSwgbmFt
ZSApIHsKCQl2YXIgcmV0LCBkZWZhdWx0VmlldywgY29tcHV0ZWRTdHlsZSwgd2lk
dGgsCgkJCXN0eWxlID0gZWxlbS5zdHlsZTsKCgkJbmFtZSA9IG5hbWUucmVwbGFj
ZSggcnVwcGVyLCAiLSQxIiApLnRvTG93ZXJDYXNlKCk7CgoJCWlmICggKGRlZmF1
bHRWaWV3ID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3KSAmJgoJCQkJ
KGNvbXB1dGVkU3R5bGUgPSBkZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKCBl
bGVtLCBudWxsICkpICkgewoKCQkJcmV0ID0gY29tcHV0ZWRTdHlsZS5nZXRQcm9w
ZXJ0eVZhbHVlKCBuYW1lICk7CgkJCWlmICggcmV0ID09PSAiIiAmJiAhalF1ZXJ5
LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCBl
bGVtICkgKSB7CgkJCQlyZXQgPSBqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUgKTsK
CQkJfQoJCX0KCgkJLy8gQSB0cmlidXRlIHRvIHRoZSAiYXdlc29tZSBoYWNrIGJ5
IERlYW4gRWR3YXJkcyIKCQkvLyBXZWJLaXQgdXNlcyAiY29tcHV0ZWQgdmFsdWUg
KHBlcmNlbnRhZ2UgaWYgc3BlY2lmaWVkKSIgaW5zdGVhZCBvZiAidXNlZCB2YWx1
ZSIgZm9yIG1hcmdpbnMKCQkvLyB3aGljaCBpcyBhZ2FpbnN0IHRoZSBDU1NPTSBk
cmFmdCBzcGVjOiBodHRwOi8vZGV2LnczLm9yZy9jc3N3Zy9jc3NvbS8jcmVzb2x2
ZWQtdmFsdWVzCgkJaWYgKCAhalF1ZXJ5LnN1cHBvcnQucGl4ZWxNYXJnaW4gJiYg
Y29tcHV0ZWRTdHlsZSAmJiBybWFyZ2luLnRlc3QoIG5hbWUgKSAmJiBybnVtbm9u
cHgudGVzdCggcmV0ICkgKSB7CgkJCXdpZHRoID0gc3R5bGUud2lkdGg7CgkJCXN0
eWxlLndpZHRoID0gcmV0OwoJCQlyZXQgPSBjb21wdXRlZFN0eWxlLndpZHRoOwoJ
CQlzdHlsZS53aWR0aCA9IHdpZHRoOwoJCX0KCgkJcmV0dXJuIHJldDsKCX07Cn0K
CmlmICggZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmN1cnJlbnRTdHlsZSApIHsK
CWN1cnJlbnRTdHlsZSA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkgewoJCXZhciBs
ZWZ0LCByc0xlZnQsIHVuY29tcHV0ZWQsCgkJCXJldCA9IGVsZW0uY3VycmVudFN0
eWxlICYmIGVsZW0uY3VycmVudFN0eWxlWyBuYW1lIF0sCgkJCXN0eWxlID0gZWxl
bS5zdHlsZTsKCgkJLy8gQXZvaWQgc2V0dGluZyByZXQgdG8gZW1wdHkgc3RyaW5n
IGhlcmUKCQkvLyBzbyB3ZSBkb24ndCBkZWZhdWx0IHRvIGF1dG8KCQlpZiAoIHJl
dCA9PSBudWxsICYmIHN0eWxlICYmICh1bmNvbXB1dGVkID0gc3R5bGVbIG5hbWUg
XSkgKSB7CgkJCXJldCA9IHVuY29tcHV0ZWQ7CgkJfQoKCQkvLyBGcm9tIHRoZSBh
d2Vzb21lIGhhY2sgYnkgRGVhbiBFZHdhcmRzCgkJLy8gaHR0cDovL2VyaWsuZWFl
Lm5ldC9hcmNoaXZlcy8yMDA3LzA3LzI3LzE4LjU0LjE1LyNjb21tZW50LTEwMjI5
MQoKCQkvLyBJZiB3ZSdyZSBub3QgZGVhbGluZyB3aXRoIGEgcmVndWxhciBwaXhl
bCBudW1iZXIKCQkvLyBidXQgYSBudW1iZXIgdGhhdCBoYXMgYSB3ZWlyZCBlbmRp
bmcsIHdlIG5lZWQgdG8gY29udmVydCBpdCB0byBwaXhlbHMKCQlpZiAoIHJudW1u
b25weC50ZXN0KCByZXQgKSApIHsKCgkJCS8vIFJlbWVtYmVyIHRoZSBvcmlnaW5h
bCB2YWx1ZXMKCQkJbGVmdCA9IHN0eWxlLmxlZnQ7CgkJCXJzTGVmdCA9IGVsZW0u
cnVudGltZVN0eWxlICYmIGVsZW0ucnVudGltZVN0eWxlLmxlZnQ7CgoJCQkvLyBQ
dXQgaW4gdGhlIG5ldyB2YWx1ZXMgdG8gZ2V0IGEgY29tcHV0ZWQgdmFsdWUgb3V0
CgkJCWlmICggcnNMZWZ0ICkgewoJCQkJZWxlbS5ydW50aW1lU3R5bGUubGVmdCA9
IGVsZW0uY3VycmVudFN0eWxlLmxlZnQ7CgkJCX0KCQkJc3R5bGUubGVmdCA9IG5h
bWUgPT09ICJmb250U2l6ZSIgPyAiMWVtIiA6IHJldDsKCQkJcmV0ID0gc3R5bGUu
cGl4ZWxMZWZ0ICsgInB4IjsKCgkJCS8vIFJldmVydCB0aGUgY2hhbmdlZCB2YWx1
ZXMKCQkJc3R5bGUubGVmdCA9IGxlZnQ7CgkJCWlmICggcnNMZWZ0ICkgewoJCQkJ
ZWxlbS5ydW50aW1lU3R5bGUubGVmdCA9IHJzTGVmdDsKCQkJfQoJCX0KCgkJcmV0
dXJuIHJldCA9PT0gIiIgPyAiYXV0byIgOiByZXQ7Cgl9Owp9CgpjdXJDU1MgPSBn
ZXRDb21wdXRlZFN0eWxlIHx8IGN1cnJlbnRTdHlsZTsKCmZ1bmN0aW9uIGdldFdp
ZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4dHJhICkgewoKCS8vIFN0YXJ0IHdp
dGggb2Zmc2V0IHByb3BlcnR5Cgl2YXIgdmFsID0gbmFtZSA9PT0gIndpZHRoIiA/
IGVsZW0ub2Zmc2V0V2lkdGggOiBlbGVtLm9mZnNldEhlaWdodCwKCQlpID0gbmFt
ZSA9PT0gIndpZHRoIiA/IDEgOiAwLAoJCWxlbiA9IDQ7CgoJaWYgKCB2YWwgPiAw
ICkgewoJCWlmICggZXh0cmEgIT09ICJib3JkZXIiICkgewoJCQlmb3IgKCA7IGkg
PCBsZW47IGkgKz0gMiApIHsKCQkJCWlmICggIWV4dHJhICkgewoJCQkJCXZhbCAt
PSBwYXJzZUZsb2F0KCBqUXVlcnkuY3NzKCBlbGVtLCAicGFkZGluZyIgKyBjc3NF
eHBhbmRbIGkgXSApICkgfHwgMDsKCQkJCX0KCQkJCWlmICggZXh0cmEgPT09ICJt
YXJnaW4iICkgewoJCQkJCXZhbCArPSBwYXJzZUZsb2F0KCBqUXVlcnkuY3NzKCBl
bGVtLCBleHRyYSArIGNzc0V4cGFuZFsgaSBdICkgKSB8fCAwOwoJCQkJfSBlbHNl
IHsKCQkJCQl2YWwgLT0gcGFyc2VGbG9hdCggalF1ZXJ5LmNzcyggZWxlbSwgImJv
cmRlciIgKyBjc3NFeHBhbmRbIGkgXSArICJXaWR0aCIgKSApIHx8IDA7CgkJCQl9
CgkJCX0KCQl9CgoJCXJldHVybiB2YWwgKyAicHgiOwoJfQoKCS8vIEZhbGwgYmFj
ayB0byBjb21wdXRlZCB0aGVuIHVuY29tcHV0ZWQgY3NzIGlmIG5lY2Vzc2FyeQoJ
dmFsID0gY3VyQ1NTKCBlbGVtLCBuYW1lICk7CglpZiAoIHZhbCA8IDAgfHwgdmFs
ID09IG51bGwgKSB7CgkJdmFsID0gZWxlbS5zdHlsZVsgbmFtZSBdOwoJfQoKCS8v
IENvbXB1dGVkIHVuaXQgaXMgbm90IHBpeGVscy4gU3RvcCBoZXJlIGFuZCByZXR1
cm4uCglpZiAoIHJudW1ub25weC50ZXN0KHZhbCkgKSB7CgkJcmV0dXJuIHZhbDsK
CX0KCgkvLyBOb3JtYWxpemUgIiIsIGF1dG8sIGFuZCBwcmVwYXJlIGZvciBleHRy
YQoJdmFsID0gcGFyc2VGbG9hdCggdmFsICkgfHwgMDsKCgkvLyBBZGQgcGFkZGlu
ZywgYm9yZGVyLCBtYXJnaW4KCWlmICggZXh0cmEgKSB7CgkJZm9yICggOyBpIDwg
bGVuOyBpICs9IDIgKSB7CgkJCXZhbCArPSBwYXJzZUZsb2F0KCBqUXVlcnkuY3Nz
KCBlbGVtLCAicGFkZGluZyIgKyBjc3NFeHBhbmRbIGkgXSApICkgfHwgMDsKCQkJ
aWYgKCBleHRyYSAhPT0gInBhZGRpbmciICkgewoJCQkJdmFsICs9IHBhcnNlRmxv
YXQoIGpRdWVyeS5jc3MoIGVsZW0sICJib3JkZXIiICsgY3NzRXhwYW5kWyBpIF0g
KyAiV2lkdGgiICkgKSB8fCAwOwoJCQl9CgkJCWlmICggZXh0cmEgPT09ICJtYXJn
aW4iICkgewoJCQkJdmFsICs9IHBhcnNlRmxvYXQoIGpRdWVyeS5jc3MoIGVsZW0s
IGV4dHJhICsgY3NzRXhwYW5kWyBpIF0pICkgfHwgMDsKCQkJfQoJCX0KCX0KCgly
ZXR1cm4gdmFsICsgInB4IjsKfQoKalF1ZXJ5LmVhY2goWyAiaGVpZ2h0IiwgIndp
ZHRoIiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHsKCWpRdWVyeS5jc3NIb29rc1sg
bmFtZSBdID0gewoJCWdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkLCBleHRy
YSApIHsKCQkJaWYgKCBjb21wdXRlZCApIHsKCQkJCWlmICggZWxlbS5vZmZzZXRX
aWR0aCAhPT0gMCApIHsKCQkJCQlyZXR1cm4gZ2V0V2lkdGhPckhlaWdodCggZWxl
bSwgbmFtZSwgZXh0cmEgKTsKCQkJCX0gZWxzZSB7CgkJCQkJcmV0dXJuIGpRdWVy
eS5zd2FwKCBlbGVtLCBjc3NTaG93LCBmdW5jdGlvbigpIHsKCQkJCQkJcmV0dXJu
IGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4dHJhICk7CgkJCQkJfSk7
CgkJCQl9CgkJCX0KCQl9LAoKCQlzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSAp
IHsKCQkJcmV0dXJuIHJudW0udGVzdCggdmFsdWUgKSA/CgkJCQl2YWx1ZSArICJw
eCIgOgoJCQkJdmFsdWU7CgkJfQoJfTsKfSk7CgppZiAoICFqUXVlcnkuc3VwcG9y
dC5vcGFjaXR5ICkgewoJalF1ZXJ5LmNzc0hvb2tzLm9wYWNpdHkgPSB7CgkJZ2V0
OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7CgkJCS8vIElFIHVzZXMgZmls
dGVycyBmb3Igb3BhY2l0eQoJCQlyZXR1cm4gcm9wYWNpdHkudGVzdCggKGNvbXB1
dGVkICYmIGVsZW0uY3VycmVudFN0eWxlID8gZWxlbS5jdXJyZW50U3R5bGUuZmls
dGVyIDogZWxlbS5zdHlsZS5maWx0ZXIpIHx8ICIiICkgPwoJCQkJKCBwYXJzZUZs
b2F0KCBSZWdFeHAuJDEgKSAvIDEwMCApICsgIiIgOgoJCQkJY29tcHV0ZWQgPyAi
MSIgOiAiIjsKCQl9LAoKCQlzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHsK
CQkJdmFyIHN0eWxlID0gZWxlbS5zdHlsZSwKCQkJCWN1cnJlbnRTdHlsZSA9IGVs
ZW0uY3VycmVudFN0eWxlLAoJCQkJb3BhY2l0eSA9IGpRdWVyeS5pc051bWVyaWMo
IHZhbHVlICkgPyAiYWxwaGEob3BhY2l0eT0iICsgdmFsdWUgKiAxMDAgKyAiKSIg
OiAiIiwKCQkJCWZpbHRlciA9IGN1cnJlbnRTdHlsZSAmJiBjdXJyZW50U3R5bGUu
ZmlsdGVyIHx8IHN0eWxlLmZpbHRlciB8fCAiIjsKCgkJCS8vIElFIGhhcyB0cm91
YmxlIHdpdGggb3BhY2l0eSBpZiBpdCBkb2VzIG5vdCBoYXZlIGxheW91dAoJCQkv
LyBGb3JjZSBpdCBieSBzZXR0aW5nIHRoZSB6b29tIGxldmVsCgkJCXN0eWxlLnpv
b20gPSAxOwoKCQkJLy8gaWYgc2V0dGluZyBvcGFjaXR5IHRvIDEsIGFuZCBubyBv
dGhlciBmaWx0ZXJzIGV4aXN0IC0gYXR0ZW1wdCB0byByZW1vdmUgZmlsdGVyIGF0
dHJpYnV0ZSAjNjY1MgoJCQlpZiAoIHZhbHVlID49IDEgJiYgalF1ZXJ5LnRyaW0o
IGZpbHRlci5yZXBsYWNlKCByYWxwaGEsICIiICkgKSA9PT0gIiIgKSB7CgoJCQkJ
Ly8gU2V0dGluZyBzdHlsZS5maWx0ZXIgdG8gbnVsbCwgIiIgJiAiICIgc3RpbGwg
bGVhdmUgImZpbHRlcjoiIGluIHRoZSBjc3NUZXh0CgkJCQkvLyBpZiAiZmlsdGVy
OiIgaXMgcHJlc2VudCBhdCBhbGwsIGNsZWFyVHlwZSBpcyBkaXNhYmxlZCwgd2Ug
d2FudCB0byBhdm9pZCB0aGlzCgkJCQkvLyBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUg
aXMgSUUgT25seSwgYnV0IHNvIGFwcGFyZW50bHkgaXMgdGhpcyBjb2RlIHBhdGgu
Li4KCQkJCXN0eWxlLnJlbW92ZUF0dHJpYnV0ZSggImZpbHRlciIgKTsKCgkJCQkv
LyBpZiB0aGVyZSB0aGVyZSBpcyBubyBmaWx0ZXIgc3R5bGUgYXBwbGllZCBpbiBh
IGNzcyBydWxlLCB3ZSBhcmUgZG9uZQoJCQkJaWYgKCBjdXJyZW50U3R5bGUgJiYg
IWN1cnJlbnRTdHlsZS5maWx0ZXIgKSB7CgkJCQkJcmV0dXJuOwoJCQkJfQoJCQl9
CgoJCQkvLyBvdGhlcndpc2UsIHNldCBuZXcgZmlsdGVyIHZhbHVlcwoJCQlzdHls
ZS5maWx0ZXIgPSByYWxwaGEudGVzdCggZmlsdGVyICkgPwoJCQkJZmlsdGVyLnJl
cGxhY2UoIHJhbHBoYSwgb3BhY2l0eSApIDoKCQkJCWZpbHRlciArICIgIiArIG9w
YWNpdHk7CgkJfQoJfTsKfQoKalF1ZXJ5KGZ1bmN0aW9uKCkgewoJLy8gVGhpcyBo
b29rIGNhbm5vdCBiZSBhZGRlZCB1bnRpbCBET00gcmVhZHkgYmVjYXVzZSB0aGUg
c3VwcG9ydCB0ZXN0CgkvLyBmb3IgaXQgaXMgbm90IHJ1biB1bnRpbCBhZnRlciBE
T00gcmVhZHkKCWlmICggIWpRdWVyeS5zdXBwb3J0LnJlbGlhYmxlTWFyZ2luUmln
aHQgKSB7CgkJalF1ZXJ5LmNzc0hvb2tzLm1hcmdpblJpZ2h0ID0gewoJCQlnZXQ6
IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHsKCQkJCS8vIFdlYktpdCBCdWcg
MTMzNDMgLSBnZXRDb21wdXRlZFN0eWxlIHJldHVybnMgd3JvbmcgdmFsdWUgZm9y
IG1hcmdpbi1yaWdodAoJCQkJLy8gV29yayBhcm91bmQgYnkgdGVtcG9yYXJpbHkg
c2V0dGluZyBlbGVtZW50IGRpc3BsYXkgdG8gaW5saW5lLWJsb2NrCgkJCQlyZXR1
cm4galF1ZXJ5LnN3YXAoIGVsZW0sIHsgImRpc3BsYXkiOiAiaW5saW5lLWJsb2Nr
IiB9LCBmdW5jdGlvbigpIHsKCQkJCQlpZiAoIGNvbXB1dGVkICkgewoJCQkJCQly
ZXR1cm4gY3VyQ1NTKCBlbGVtLCAibWFyZ2luLXJpZ2h0IiApOwoJCQkJCX0gZWxz
ZSB7CgkJCQkJCXJldHVybiBlbGVtLnN0eWxlLm1hcmdpblJpZ2h0OwoJCQkJCX0K
CQkJCX0pOwoJCQl9CgkJfTsKCX0KfSk7CgppZiAoIGpRdWVyeS5leHByICYmIGpR
dWVyeS5leHByLmZpbHRlcnMgKSB7CglqUXVlcnkuZXhwci5maWx0ZXJzLmhpZGRl
biA9IGZ1bmN0aW9uKCBlbGVtICkgewoJCXZhciB3aWR0aCA9IGVsZW0ub2Zmc2V0
V2lkdGgsCgkJCWhlaWdodCA9IGVsZW0ub2Zmc2V0SGVpZ2h0OwoKCQlyZXR1cm4g
KCB3aWR0aCA9PT0gMCAmJiBoZWlnaHQgPT09IDAgKSB8fCAoIWpRdWVyeS5zdXBw
b3J0LnJlbGlhYmxlSGlkZGVuT2Zmc2V0cyAmJiAoKGVsZW0uc3R5bGUgJiYgZWxl
bS5zdHlsZS5kaXNwbGF5KSB8fCBqUXVlcnkuY3NzKCBlbGVtLCAiZGlzcGxheSIg
KSkgPT09ICJub25lIik7Cgl9OwoKCWpRdWVyeS5leHByLmZpbHRlcnMudmlzaWJs
ZSA9IGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiAhalF1ZXJ5LmV4cHIuZmls
dGVycy5oaWRkZW4oIGVsZW0gKTsKCX07Cn0KCi8vIFRoZXNlIGhvb2tzIGFyZSB1
c2VkIGJ5IGFuaW1hdGUgdG8gZXhwYW5kIHByb3BlcnRpZXMKalF1ZXJ5LmVhY2go
ewoJbWFyZ2luOiAiIiwKCXBhZGRpbmc6ICIiLAoJYm9yZGVyOiAiV2lkdGgiCn0s
IGZ1bmN0aW9uKCBwcmVmaXgsIHN1ZmZpeCApIHsKCglqUXVlcnkuY3NzSG9va3Nb
IHByZWZpeCArIHN1ZmZpeCBdID0gewoJCWV4cGFuZDogZnVuY3Rpb24oIHZhbHVl
ICkgewoJCQl2YXIgaSwKCgkJCQkvLyBhc3N1bWVzIGEgc2luZ2xlIG51bWJlciBp
ZiBub3QgYSBzdHJpbmcKCQkJCXBhcnRzID0gdHlwZW9mIHZhbHVlID09PSAic3Ry
aW5nIiA/IHZhbHVlLnNwbGl0KCIgIikgOiBbIHZhbHVlIF0sCgkJCQlleHBhbmRl
ZCA9IHt9OwoKCQkJZm9yICggaSA9IDA7IGkgPCA0OyBpKysgKSB7CgkJCQlleHBh
bmRlZFsgcHJlZml4ICsgY3NzRXhwYW5kWyBpIF0gKyBzdWZmaXggXSA9CgkJCQkJ
cGFydHNbIGkgXSB8fCBwYXJ0c1sgaSAtIDIgXSB8fCBwYXJ0c1sgMCBdOwoJCQl9
CgoJCQlyZXR1cm4gZXhwYW5kZWQ7CgkJfQoJfTsKfSk7CgoKCgp2YXIgcjIwID0g
LyUyMC9nLAoJcmJyYWNrZXQgPSAvXFtcXSQvLAoJckNSTEYgPSAvXHI/XG4vZywK
CXJoYXNoID0gLyMuKiQvLAoJcmhlYWRlcnMgPSAvXiguKj8pOlsgXHRdKihbXlxy
XG5dKilccj8kL21nLCAvLyBJRSBsZWF2ZXMgYW4gXHIgY2hhcmFjdGVyIGF0IEVP
TAoJcmlucHV0ID0gL14oPzpjb2xvcnxkYXRlfGRhdGV0aW1lfGRhdGV0aW1lLWxv
Y2FsfGVtYWlsfGhpZGRlbnxtb250aHxudW1iZXJ8cGFzc3dvcmR8cmFuZ2V8c2Vh
cmNofHRlbHx0ZXh0fHRpbWV8dXJsfHdlZWspJC9pLAoJLy8gIzc2NTMsICM4MTI1
LCAjODE1MjogbG9jYWwgcHJvdG9jb2wgZGV0ZWN0aW9uCglybG9jYWxQcm90b2Nv
bCA9IC9eKD86YWJvdXR8YXBwfGFwcFwtc3RvcmFnZXwuK1wtZXh0ZW5zaW9ufGZp
bGV8cmVzfHdpZGdldCk6JC8sCglybm9Db250ZW50ID0gL14oPzpHRVR8SEVBRCkk
LywKCXJwcm90b2NvbCA9IC9eXC9cLy8sCglycXVlcnkgPSAvXD8vLAoJcnNjcmlw
dCA9IC88c2NyaXB0XGJbXjxdKig/Oig/ITxcL3NjcmlwdD4pPFtePF0qKSo8XC9z
Y3JpcHQ+L2dpLAoJcnNlbGVjdFRleHRhcmVhID0gL14oPzpzZWxlY3R8dGV4dGFy
ZWEpL2ksCglyc3BhY2VzQWpheCA9IC9ccysvLAoJcnRzID0gLyhbPyZdKV89W14m
XSovLAoJcnVybCA9IC9eKFtcd1wrXC5cLV0rOikoPzpcL1wvKFteXC8/IzpdKiko
Pzo6KFxkKykpPyk/LywKCgkvLyBLZWVwIGEgY29weSBvZiB0aGUgb2xkIGxvYWQg
bWV0aG9kCglfbG9hZCA9IGpRdWVyeS5mbi5sb2FkLAoKCS8qIFByZWZpbHRlcnMK
CSAqIDEpIFRoZXkgYXJlIHVzZWZ1bCB0byBpbnRyb2R1Y2UgY3VzdG9tIGRhdGFU
eXBlcyAoc2VlIGFqYXgvanNvbnAuanMgZm9yIGFuIGV4YW1wbGUpCgkgKiAyKSBU
aGVzZSBhcmUgY2FsbGVkOgoJICogICAgLSBCRUZPUkUgYXNraW5nIGZvciBhIHRy
YW5zcG9ydAoJICogICAgLSBBRlRFUiBwYXJhbSBzZXJpYWxpemF0aW9uIChzLmRh
dGEgaXMgYSBzdHJpbmcgaWYgcy5wcm9jZXNzRGF0YSBpcyB0cnVlKQoJICogMykg
a2V5IGlzIHRoZSBkYXRhVHlwZQoJICogNCkgdGhlIGNhdGNoYWxsIHN5bWJvbCAi
KiIgY2FuIGJlIHVzZWQKCSAqIDUpIGV4ZWN1dGlvbiB3aWxsIHN0YXJ0IHdpdGgg
dHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGNvbnRpbnVlIGRvd24gdG8gIioi
IGlmIG5lZWRlZAoJICovCglwcmVmaWx0ZXJzID0ge30sCgoJLyogVHJhbnNwb3J0
cyBiaW5kaW5ncwoJICogMSkga2V5IGlzIHRoZSBkYXRhVHlwZQoJICogMikgdGhl
IGNhdGNoYWxsIHN5bWJvbCAiKiIgY2FuIGJlIHVzZWQKCSAqIDMpIHNlbGVjdGlv
biB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGdv
IHRvICIqIiBpZiBuZWVkZWQKCSAqLwoJdHJhbnNwb3J0cyA9IHt9LAoKCS8vIERv
Y3VtZW50IGxvY2F0aW9uCglhamF4TG9jYXRpb24sCgoJLy8gRG9jdW1lbnQgbG9j
YXRpb24gc2VnbWVudHMKCWFqYXhMb2NQYXJ0cywKCgkvLyBBdm9pZCBjb21tZW50
LXByb2xvZyBjaGFyIHNlcXVlbmNlICgjMTAwOTgpOyBtdXN0IGFwcGVhc2UgbGlu
dCBhbmQgZXZhZGUgY29tcHJlc3Npb24KCWFsbFR5cGVzID0gWyIqLyJdICsgWyIq
Il07CgovLyAjODEzOCwgSUUgbWF5IHRocm93IGFuIGV4Y2VwdGlvbiB3aGVuIGFj
Y2Vzc2luZwovLyBhIGZpZWxkIGZyb20gd2luZG93LmxvY2F0aW9uIGlmIGRvY3Vt
ZW50LmRvbWFpbiBoYXMgYmVlbiBzZXQKdHJ5IHsKCWFqYXhMb2NhdGlvbiA9IGxv
Y2F0aW9uLmhyZWY7Cn0gY2F0Y2goIGUgKSB7CgkvLyBVc2UgdGhlIGhyZWYgYXR0
cmlidXRlIG9mIGFuIEEgZWxlbWVudAoJLy8gc2luY2UgSUUgd2lsbCBtb2RpZnkg
aXQgZ2l2ZW4gZG9jdW1lbnQubG9jYXRpb24KCWFqYXhMb2NhdGlvbiA9IGRvY3Vt
ZW50LmNyZWF0ZUVsZW1lbnQoICJhIiApOwoJYWpheExvY2F0aW9uLmhyZWYgPSAi
IjsKCWFqYXhMb2NhdGlvbiA9IGFqYXhMb2NhdGlvbi5ocmVmOwp9CgovLyBTZWdt
ZW50IGxvY2F0aW9uIGludG8gcGFydHMKYWpheExvY1BhcnRzID0gcnVybC5leGVj
KCBhamF4TG9jYXRpb24udG9Mb3dlckNhc2UoKSApIHx8IFtdOwoKLy8gQmFzZSAi
Y29uc3RydWN0b3IiIGZvciBqUXVlcnkuYWpheFByZWZpbHRlciBhbmQgalF1ZXJ5
LmFqYXhUcmFuc3BvcnQKZnVuY3Rpb24gYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3Bv
cnRzKCBzdHJ1Y3R1cmUgKSB7CgoJLy8gZGF0YVR5cGVFeHByZXNzaW9uIGlzIG9w
dGlvbmFsIGFuZCBkZWZhdWx0cyB0byAiKiIKCXJldHVybiBmdW5jdGlvbiggZGF0
YVR5cGVFeHByZXNzaW9uLCBmdW5jICkgewoKCQlpZiAoIHR5cGVvZiBkYXRhVHlw
ZUV4cHJlc3Npb24gIT09ICJzdHJpbmciICkgewoJCQlmdW5jID0gZGF0YVR5cGVF
eHByZXNzaW9uOwoJCQlkYXRhVHlwZUV4cHJlc3Npb24gPSAiKiI7CgkJfQoKCQlp
ZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBmdW5jICkgKSB7CgkJCXZhciBkYXRhVHlw
ZXMgPSBkYXRhVHlwZUV4cHJlc3Npb24udG9Mb3dlckNhc2UoKS5zcGxpdCggcnNw
YWNlc0FqYXggKSwKCQkJCWkgPSAwLAoJCQkJbGVuZ3RoID0gZGF0YVR5cGVzLmxl
bmd0aCwKCQkJCWRhdGFUeXBlLAoJCQkJbGlzdCwKCQkJCXBsYWNlQmVmb3JlOwoK
CQkJLy8gRm9yIGVhY2ggZGF0YVR5cGUgaW4gdGhlIGRhdGFUeXBlRXhwcmVzc2lv
bgoJCQlmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHsKCQkJCWRhdGFUeXBlID0g
ZGF0YVR5cGVzWyBpIF07CgkJCQkvLyBXZSBjb250cm9sIGlmIHdlJ3JlIGFza2Vk
IHRvIGFkZCBiZWZvcmUKCQkJCS8vIGFueSBleGlzdGluZyBlbGVtZW50CgkJCQlw
bGFjZUJlZm9yZSA9IC9eXCsvLnRlc3QoIGRhdGFUeXBlICk7CgkJCQlpZiAoIHBs
YWNlQmVmb3JlICkgewoJCQkJCWRhdGFUeXBlID0gZGF0YVR5cGUuc3Vic3RyKCAx
ICkgfHwgIioiOwoJCQkJfQoJCQkJbGlzdCA9IHN0cnVjdHVyZVsgZGF0YVR5cGUg
XSA9IHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXTsKCQkJCS8vIHRoZW4gd2Ug
YWRkIHRvIHRoZSBzdHJ1Y3R1cmUgYWNjb3JkaW5nbHkKCQkJCWxpc3RbIHBsYWNl
QmVmb3JlID8gInVuc2hpZnQiIDogInB1c2giIF0oIGZ1bmMgKTsKCQkJfQoJCX0K
CX07Cn0KCi8vIEJhc2UgaW5zcGVjdGlvbiBmdW5jdGlvbiBmb3IgcHJlZmlsdGVy
cyBhbmQgdHJhbnNwb3J0cwpmdW5jdGlvbiBpbnNwZWN0UHJlZmlsdGVyc09yVHJh
bnNwb3J0cyggc3RydWN0dXJlLCBvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIGpx
WEhSLAoJCWRhdGFUeXBlIC8qIGludGVybmFsICovLCBpbnNwZWN0ZWQgLyogaW50
ZXJuYWwgKi8gKSB7CgoJZGF0YVR5cGUgPSBkYXRhVHlwZSB8fCBvcHRpb25zLmRh
dGFUeXBlc1sgMCBdOwoJaW5zcGVjdGVkID0gaW5zcGVjdGVkIHx8IHt9OwoKCWlu
c3BlY3RlZFsgZGF0YVR5cGUgXSA9IHRydWU7CgoJdmFyIGxpc3QgPSBzdHJ1Y3R1
cmVbIGRhdGFUeXBlIF0sCgkJaSA9IDAsCgkJbGVuZ3RoID0gbGlzdCA/IGxpc3Qu
bGVuZ3RoIDogMCwKCQlleGVjdXRlT25seSA9ICggc3RydWN0dXJlID09PSBwcmVm
aWx0ZXJzICksCgkJc2VsZWN0aW9uOwoKCWZvciAoIDsgaSA8IGxlbmd0aCAmJiAo
IGV4ZWN1dGVPbmx5IHx8ICFzZWxlY3Rpb24gKTsgaSsrICkgewoJCXNlbGVjdGlv
biA9IGxpc3RbIGkgXSggb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiAp
OwoJCS8vIElmIHdlIGdvdCByZWRpcmVjdGVkIHRvIGFub3RoZXIgZGF0YVR5cGUK
CQkvLyB3ZSB0cnkgdGhlcmUgaWYgZXhlY3V0aW5nIG9ubHkgYW5kIG5vdCBkb25l
IGFscmVhZHkKCQlpZiAoIHR5cGVvZiBzZWxlY3Rpb24gPT09ICJzdHJpbmciICkg
ewoJCQlpZiAoICFleGVjdXRlT25seSB8fCBpbnNwZWN0ZWRbIHNlbGVjdGlvbiBd
ICkgewoJCQkJc2VsZWN0aW9uID0gdW5kZWZpbmVkOwoJCQl9IGVsc2UgewoJCQkJ
b3B0aW9ucy5kYXRhVHlwZXMudW5zaGlmdCggc2VsZWN0aW9uICk7CgkJCQlzZWxl
Y3Rpb24gPSBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cygKCQkJCQkJc3Ry
dWN0dXJlLCBvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIGpxWEhSLCBzZWxlY3Rp
b24sIGluc3BlY3RlZCApOwoJCQl9CgkJfQoJfQoJLy8gSWYgd2UncmUgb25seSBl
eGVjdXRpbmcgb3Igbm90aGluZyB3YXMgc2VsZWN0ZWQKCS8vIHdlIHRyeSB0aGUg
Y2F0Y2hhbGwgZGF0YVR5cGUgaWYgbm90IGRvbmUgYWxyZWFkeQoJaWYgKCAoIGV4
ZWN1dGVPbmx5IHx8ICFzZWxlY3Rpb24gKSAmJiAhaW5zcGVjdGVkWyAiKiIgXSAp
IHsKCQlzZWxlY3Rpb24gPSBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cygK
CQkJCXN0cnVjdHVyZSwgb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiwg
IioiLCBpbnNwZWN0ZWQgKTsKCX0KCS8vIHVubmVjZXNzYXJ5IHdoZW4gb25seSBl
eGVjdXRpbmcgKHByZWZpbHRlcnMpCgkvLyBidXQgaXQnbGwgYmUgaWdub3JlZCBi
eSB0aGUgY2FsbGVyIGluIHRoYXQgY2FzZQoJcmV0dXJuIHNlbGVjdGlvbjsKfQoK
Ly8gQSBzcGVjaWFsIGV4dGVuZCBmb3IgYWpheCBvcHRpb25zCi8vIHRoYXQgdGFr
ZXMgImZsYXQiIG9wdGlvbnMgKG5vdCB0byBiZSBkZWVwIGV4dGVuZGVkKQovLyBG
aXhlcyAjOTg4NwpmdW5jdGlvbiBhamF4RXh0ZW5kKCB0YXJnZXQsIHNyYyApIHsK
CXZhciBrZXksIGRlZXAsCgkJZmxhdE9wdGlvbnMgPSBqUXVlcnkuYWpheFNldHRp
bmdzLmZsYXRPcHRpb25zIHx8IHt9OwoJZm9yICgga2V5IGluIHNyYyApIHsKCQlp
ZiAoIHNyY1sga2V5IF0gIT09IHVuZGVmaW5lZCApIHsKCQkJKCBmbGF0T3B0aW9u
c1sga2V5IF0gPyB0YXJnZXQgOiAoIGRlZXAgfHwgKCBkZWVwID0ge30gKSApIClb
IGtleSBdID0gc3JjWyBrZXkgXTsKCQl9Cgl9CglpZiAoIGRlZXAgKSB7CgkJalF1
ZXJ5LmV4dGVuZCggdHJ1ZSwgdGFyZ2V0LCBkZWVwICk7Cgl9Cn0KCmpRdWVyeS5m
bi5leHRlbmQoewoJbG9hZDogZnVuY3Rpb24oIHVybCwgcGFyYW1zLCBjYWxsYmFj
ayApIHsKCQlpZiAoIHR5cGVvZiB1cmwgIT09ICJzdHJpbmciICYmIF9sb2FkICkg
ewoJCQlyZXR1cm4gX2xvYWQuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoKCQkv
LyBEb24ndCBkbyBhIHJlcXVlc3QgaWYgbm8gZWxlbWVudHMgYXJlIGJlaW5nIHJl
cXVlc3RlZAoJCX0gZWxzZSBpZiAoICF0aGlzLmxlbmd0aCApIHsKCQkJcmV0dXJu
IHRoaXM7CgkJfQoKCQl2YXIgb2ZmID0gdXJsLmluZGV4T2YoICIgIiApOwoJCWlm
ICggb2ZmID49IDAgKSB7CgkJCXZhciBzZWxlY3RvciA9IHVybC5zbGljZSggb2Zm
LCB1cmwubGVuZ3RoICk7CgkJCXVybCA9IHVybC5zbGljZSggMCwgb2ZmICk7CgkJ
fQoKCQkvLyBEZWZhdWx0IHRvIGEgR0VUIHJlcXVlc3QKCQl2YXIgdHlwZSA9ICJH
RVQiOwoKCQkvLyBJZiB0aGUgc2Vjb25kIHBhcmFtZXRlciB3YXMgcHJvdmlkZWQK
CQlpZiAoIHBhcmFtcyApIHsKCQkJLy8gSWYgaXQncyBhIGZ1bmN0aW9uCgkJCWlm
ICggalF1ZXJ5LmlzRnVuY3Rpb24oIHBhcmFtcyApICkgewoJCQkJLy8gV2UgYXNz
dW1lIHRoYXQgaXQncyB0aGUgY2FsbGJhY2sKCQkJCWNhbGxiYWNrID0gcGFyYW1z
OwoJCQkJcGFyYW1zID0gdW5kZWZpbmVkOwoKCQkJLy8gT3RoZXJ3aXNlLCBidWls
ZCBhIHBhcmFtIHN0cmluZwoJCQl9IGVsc2UgaWYgKCB0eXBlb2YgcGFyYW1zID09
PSAib2JqZWN0IiApIHsKCQkJCXBhcmFtcyA9IGpRdWVyeS5wYXJhbSggcGFyYW1z
LCBqUXVlcnkuYWpheFNldHRpbmdzLnRyYWRpdGlvbmFsICk7CgkJCQl0eXBlID0g
IlBPU1QiOwoJCQl9CgkJfQoKCQl2YXIgc2VsZiA9IHRoaXM7CgoJCS8vIFJlcXVl
c3QgdGhlIHJlbW90ZSBkb2N1bWVudAoJCWpRdWVyeS5hamF4KHsKCQkJdXJsOiB1
cmwsCgkJCXR5cGU6IHR5cGUsCgkJCWRhdGFUeXBlOiAiaHRtbCIsCgkJCWRhdGE6
IHBhcmFtcywKCQkJLy8gQ29tcGxldGUgY2FsbGJhY2sgKHJlc3BvbnNlVGV4dCBp
cyB1c2VkIGludGVybmFsbHkpCgkJCWNvbXBsZXRlOiBmdW5jdGlvbigganFYSFIs
IHN0YXR1cywgcmVzcG9uc2VUZXh0ICkgewoJCQkJLy8gU3RvcmUgdGhlIHJlc3Bv
bnNlIGFzIHNwZWNpZmllZCBieSB0aGUganFYSFIgb2JqZWN0CgkJCQlyZXNwb25z
ZVRleHQgPSBqcVhIUi5yZXNwb25zZVRleHQ7CgkJCQkvLyBJZiBzdWNjZXNzZnVs
LCBpbmplY3QgdGhlIEhUTUwgaW50byBhbGwgdGhlIG1hdGNoZWQgZWxlbWVudHMK
CQkJCWlmICgganFYSFIuaXNSZXNvbHZlZCgpICkgewoJCQkJCS8vICM0ODI1OiBH
ZXQgdGhlIGFjdHVhbCByZXNwb25zZSBpbiBjYXNlCgkJCQkJLy8gYSBkYXRhRmls
dGVyIGlzIHByZXNlbnQgaW4gYWpheFNldHRpbmdzCgkJCQkJanFYSFIuZG9uZShm
dW5jdGlvbiggciApIHsKCQkJCQkJcmVzcG9uc2VUZXh0ID0gcjsKCQkJCQl9KTsK
CQkJCQkvLyBTZWUgaWYgYSBzZWxlY3RvciB3YXMgc3BlY2lmaWVkCgkJCQkJc2Vs
Zi5odG1sKCBzZWxlY3RvciA/CgkJCQkJCS8vIENyZWF0ZSBhIGR1bW15IGRpdiB0
byBob2xkIHRoZSByZXN1bHRzCgkJCQkJCWpRdWVyeSgiPGRpdj4iKQoJCQkJCQkJ
Ly8gaW5qZWN0IHRoZSBjb250ZW50cyBvZiB0aGUgZG9jdW1lbnQgaW4sIHJlbW92
aW5nIHRoZSBzY3JpcHRzCgkJCQkJCQkvLyB0byBhdm9pZCBhbnkgJ1Blcm1pc3Np
b24gRGVuaWVkJyBlcnJvcnMgaW4gSUUKCQkJCQkJCS5hcHBlbmQocmVzcG9uc2VU
ZXh0LnJlcGxhY2UocnNjcmlwdCwgIiIpKQoKCQkJCQkJCS8vIExvY2F0ZSB0aGUg
c3BlY2lmaWVkIGVsZW1lbnRzCgkJCQkJCQkuZmluZChzZWxlY3RvcikgOgoKCQkJ
CQkJLy8gSWYgbm90LCBqdXN0IGluamVjdCB0aGUgZnVsbCByZXN1bHQKCQkJCQkJ
cmVzcG9uc2VUZXh0ICk7CgkJCQl9CgoJCQkJaWYgKCBjYWxsYmFjayApIHsKCQkJ
CQlzZWxmLmVhY2goIGNhbGxiYWNrLCBbIHJlc3BvbnNlVGV4dCwgc3RhdHVzLCBq
cVhIUiBdICk7CgkJCQl9CgkJCX0KCQl9KTsKCgkJcmV0dXJuIHRoaXM7Cgl9LAoK
CXNlcmlhbGl6ZTogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIGpRdWVyeS5wYXJhbSgg
dGhpcy5zZXJpYWxpemVBcnJheSgpICk7Cgl9LAoKCXNlcmlhbGl6ZUFycmF5OiBm
dW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXsKCQkJcmV0
dXJuIHRoaXMuZWxlbWVudHMgPyBqUXVlcnkubWFrZUFycmF5KCB0aGlzLmVsZW1l
bnRzICkgOiB0aGlzOwoJCX0pCgkJLmZpbHRlcihmdW5jdGlvbigpewoJCQlyZXR1
cm4gdGhpcy5uYW1lICYmICF0aGlzLmRpc2FibGVkICYmCgkJCQkoIHRoaXMuY2hl
Y2tlZCB8fCByc2VsZWN0VGV4dGFyZWEudGVzdCggdGhpcy5ub2RlTmFtZSApIHx8
CgkJCQkJcmlucHV0LnRlc3QoIHRoaXMudHlwZSApICk7CgkJfSkKCQkubWFwKGZ1
bmN0aW9uKCBpLCBlbGVtICl7CgkJCXZhciB2YWwgPSBqUXVlcnkoIHRoaXMgKS52
YWwoKTsKCgkJCXJldHVybiB2YWwgPT0gbnVsbCA/CgkJCQludWxsIDoKCQkJCWpR
dWVyeS5pc0FycmF5KCB2YWwgKSA/CgkJCQkJalF1ZXJ5Lm1hcCggdmFsLCBmdW5j
dGlvbiggdmFsLCBpICl7CgkJCQkJCXJldHVybiB7IG5hbWU6IGVsZW0ubmFtZSwg
dmFsdWU6IHZhbC5yZXBsYWNlKCByQ1JMRiwgIlxyXG4iICkgfTsKCQkJCQl9KSA6
CgkJCQkJeyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNS
TEYsICJcclxuIiApIH07CgkJfSkuZ2V0KCk7Cgl9Cn0pOwoKLy8gQXR0YWNoIGEg
YnVuY2ggb2YgZnVuY3Rpb25zIGZvciBoYW5kbGluZyBjb21tb24gQUpBWCBldmVu
dHMKalF1ZXJ5LmVhY2goICJhamF4U3RhcnQgYWpheFN0b3AgYWpheENvbXBsZXRl
IGFqYXhFcnJvciBhamF4U3VjY2VzcyBhamF4U2VuZCIuc3BsaXQoICIgIiApLCBm
dW5jdGlvbiggaSwgbyApewoJalF1ZXJ5LmZuWyBvIF0gPSBmdW5jdGlvbiggZiAp
ewoJCXJldHVybiB0aGlzLm9uKCBvLCBmICk7Cgl9Owp9KTsKCmpRdWVyeS5lYWNo
KCBbICJnZXQiLCAicG9zdCIgXSwgZnVuY3Rpb24oIGksIG1ldGhvZCApIHsKCWpR
dWVyeVsgbWV0aG9kIF0gPSBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjaywg
dHlwZSApIHsKCQkvLyBzaGlmdCBhcmd1bWVudHMgaWYgZGF0YSBhcmd1bWVudCB3
YXMgb21pdHRlZAoJCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGRhdGEgKSApIHsK
CQkJdHlwZSA9IHR5cGUgfHwgY2FsbGJhY2s7CgkJCWNhbGxiYWNrID0gZGF0YTsK
CQkJZGF0YSA9IHVuZGVmaW5lZDsKCQl9CgoJCXJldHVybiBqUXVlcnkuYWpheCh7
CgkJCXR5cGU6IG1ldGhvZCwKCQkJdXJsOiB1cmwsCgkJCWRhdGE6IGRhdGEsCgkJ
CXN1Y2Nlc3M6IGNhbGxiYWNrLAoJCQlkYXRhVHlwZTogdHlwZQoJCX0pOwoJfTsK
fSk7CgpqUXVlcnkuZXh0ZW5kKHsKCglnZXRTY3JpcHQ6IGZ1bmN0aW9uKCB1cmws
IGNhbGxiYWNrICkgewoJCXJldHVybiBqUXVlcnkuZ2V0KCB1cmwsIHVuZGVmaW5l
ZCwgY2FsbGJhY2ssICJzY3JpcHQiICk7Cgl9LAoKCWdldEpTT046IGZ1bmN0aW9u
KCB1cmwsIGRhdGEsIGNhbGxiYWNrICkgewoJCXJldHVybiBqUXVlcnkuZ2V0KCB1
cmwsIGRhdGEsIGNhbGxiYWNrLCAianNvbiIgKTsKCX0sCgoJLy8gQ3JlYXRlcyBh
IGZ1bGwgZmxlZGdlZCBzZXR0aW5ncyBvYmplY3QgaW50byB0YXJnZXQKCS8vIHdp
dGggYm90aCBhamF4U2V0dGluZ3MgYW5kIHNldHRpbmdzIGZpZWxkcy4KCS8vIElm
IHRhcmdldCBpcyBvbWl0dGVkLCB3cml0ZXMgaW50byBhamF4U2V0dGluZ3MuCglh
amF4U2V0dXA6IGZ1bmN0aW9uKCB0YXJnZXQsIHNldHRpbmdzICkgewoJCWlmICgg
c2V0dGluZ3MgKSB7CgkJCS8vIEJ1aWxkaW5nIGEgc2V0dGluZ3Mgb2JqZWN0CgkJ
CWFqYXhFeHRlbmQoIHRhcmdldCwgalF1ZXJ5LmFqYXhTZXR0aW5ncyApOwoJCX0g
ZWxzZSB7CgkJCS8vIEV4dGVuZGluZyBhamF4U2V0dGluZ3MKCQkJc2V0dGluZ3Mg
PSB0YXJnZXQ7CgkJCXRhcmdldCA9IGpRdWVyeS5hamF4U2V0dGluZ3M7CgkJfQoJ
CWFqYXhFeHRlbmQoIHRhcmdldCwgc2V0dGluZ3MgKTsKCQlyZXR1cm4gdGFyZ2V0
OwoJfSwKCglhamF4U2V0dGluZ3M6IHsKCQl1cmw6IGFqYXhMb2NhdGlvbiwKCQlp
c0xvY2FsOiBybG9jYWxQcm90b2NvbC50ZXN0KCBhamF4TG9jUGFydHNbIDEgXSAp
LAoJCWdsb2JhbDogdHJ1ZSwKCQl0eXBlOiAiR0VUIiwKCQljb250ZW50VHlwZTog
ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYt
OCIsCgkJcHJvY2Vzc0RhdGE6IHRydWUsCgkJYXN5bmM6IHRydWUsCgkJLyoKCQl0
aW1lb3V0OiAwLAoJCWRhdGE6IG51bGwsCgkJZGF0YVR5cGU6IG51bGwsCgkJdXNl
cm5hbWU6IG51bGwsCgkJcGFzc3dvcmQ6IG51bGwsCgkJY2FjaGU6IG51bGwsCgkJ
dHJhZGl0aW9uYWw6IGZhbHNlLAoJCWhlYWRlcnM6IHt9LAoJCSovCgoJCWFjY2Vw
dHM6IHsKCQkJeG1sOiAiYXBwbGljYXRpb24veG1sLCB0ZXh0L3htbCIsCgkJCWh0
bWw6ICJ0ZXh0L2h0bWwiLAoJCQl0ZXh0OiAidGV4dC9wbGFpbiIsCgkJCWpzb246
ICJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQiLAoJCQkiKiI6IGFs
bFR5cGVzCgkJfSwKCgkJY29udGVudHM6IHsKCQkJeG1sOiAveG1sLywKCQkJaHRt
bDogL2h0bWwvLAoJCQlqc29uOiAvanNvbi8KCQl9LAoKCQlyZXNwb25zZUZpZWxk
czogewoJCQl4bWw6ICJyZXNwb25zZVhNTCIsCgkJCXRleHQ6ICJyZXNwb25zZVRl
eHQiCgkJfSwKCgkJLy8gTGlzdCBvZiBkYXRhIGNvbnZlcnRlcnMKCQkvLyAxKSBr
ZXkgZm9ybWF0IGlzICJzb3VyY2VfdHlwZSBkZXN0aW5hdGlvbl90eXBlIiAoYSBz
aW5nbGUgc3BhY2UgaW4tYmV0d2VlbikKCQkvLyAyKSB0aGUgY2F0Y2hhbGwgc3lt
Ym9sICIqIiBjYW4gYmUgdXNlZCBmb3Igc291cmNlX3R5cGUKCQljb252ZXJ0ZXJz
OiB7CgoJCQkvLyBDb252ZXJ0IGFueXRoaW5nIHRvIHRleHQKCQkJIiogdGV4dCI6
IHdpbmRvdy5TdHJpbmcsCgoJCQkvLyBUZXh0IHRvIGh0bWwgKHRydWUgPSBubyB0
cmFuc2Zvcm1hdGlvbikKCQkJInRleHQgaHRtbCI6IHRydWUsCgoJCQkvLyBFdmFs
dWF0ZSB0ZXh0IGFzIGEganNvbiBleHByZXNzaW9uCgkJCSJ0ZXh0IGpzb24iOiBq
UXVlcnkucGFyc2VKU09OLAoKCQkJLy8gUGFyc2UgdGV4dCBhcyB4bWwKCQkJInRl
eHQgeG1sIjogalF1ZXJ5LnBhcnNlWE1MCgkJfSwKCgkJLy8gRm9yIG9wdGlvbnMg
dGhhdCBzaG91bGRuJ3QgYmUgZGVlcCBleHRlbmRlZDoKCQkvLyB5b3UgY2FuIGFk
ZCB5b3VyIG93biBjdXN0b20gb3B0aW9ucyBoZXJlIGlmCgkJLy8gYW5kIHdoZW4g
eW91IGNyZWF0ZSBvbmUgdGhhdCBzaG91bGRuJ3QgYmUKCQkvLyBkZWVwIGV4dGVu
ZGVkIChzZWUgYWpheEV4dGVuZCkKCQlmbGF0T3B0aW9uczogewoJCQljb250ZXh0
OiB0cnVlLAoJCQl1cmw6IHRydWUKCQl9Cgl9LAoKCWFqYXhQcmVmaWx0ZXI6IGFk
ZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJlZmlsdGVycyApLAoJYWpheFRy
YW5zcG9ydDogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCB0cmFuc3BvcnRz
ICksCgoJLy8gTWFpbiBtZXRob2QKCWFqYXg6IGZ1bmN0aW9uKCB1cmwsIG9wdGlv
bnMgKSB7CgoJCS8vIElmIHVybCBpcyBhbiBvYmplY3QsIHNpbXVsYXRlIHByZS0x
LjUgc2lnbmF0dXJlCgkJaWYgKCB0eXBlb2YgdXJsID09PSAib2JqZWN0IiApIHsK
CQkJb3B0aW9ucyA9IHVybDsKCQkJdXJsID0gdW5kZWZpbmVkOwoJCX0KCgkJLy8g
Rm9yY2Ugb3B0aW9ucyB0byBiZSBhbiBvYmplY3QKCQlvcHRpb25zID0gb3B0aW9u
cyB8fCB7fTsKCgkJdmFyIC8vIENyZWF0ZSB0aGUgZmluYWwgb3B0aW9ucyBvYmpl
Y3QKCQkJcyA9IGpRdWVyeS5hamF4U2V0dXAoIHt9LCBvcHRpb25zICksCgkJCS8v
IENhbGxiYWNrcyBjb250ZXh0CgkJCWNhbGxiYWNrQ29udGV4dCA9IHMuY29udGV4
dCB8fCBzLAoJCQkvLyBDb250ZXh0IGZvciBnbG9iYWwgZXZlbnRzCgkJCS8vIEl0
J3MgdGhlIGNhbGxiYWNrQ29udGV4dCBpZiBvbmUgd2FzIHByb3ZpZGVkIGluIHRo
ZSBvcHRpb25zCgkJCS8vIGFuZCBpZiBpdCdzIGEgRE9NIG5vZGUgb3IgYSBqUXVl
cnkgY29sbGVjdGlvbgoJCQlnbG9iYWxFdmVudENvbnRleHQgPSBjYWxsYmFja0Nv
bnRleHQgIT09IHMgJiYKCQkJCSggY2FsbGJhY2tDb250ZXh0Lm5vZGVUeXBlIHx8
IGNhbGxiYWNrQ29udGV4dCBpbnN0YW5jZW9mIGpRdWVyeSApID8KCQkJCQkJalF1
ZXJ5KCBjYWxsYmFja0NvbnRleHQgKSA6IGpRdWVyeS5ldmVudCwKCQkJLy8gRGVm
ZXJyZWRzCgkJCWRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksCgkJCWNvbXBs
ZXRlRGVmZXJyZWQgPSBqUXVlcnkuQ2FsbGJhY2tzKCAib25jZSBtZW1vcnkiICks
CgkJCS8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzCgkJCXN0YXR1c0NvZGUg
PSBzLnN0YXR1c0NvZGUgfHwge30sCgkJCS8vIGlmTW9kaWZpZWQga2V5CgkJCWlm
TW9kaWZpZWRLZXksCgkJCS8vIEhlYWRlcnMgKHRoZXkgYXJlIHNlbnQgYWxsIGF0
IG9uY2UpCgkJCXJlcXVlc3RIZWFkZXJzID0ge30sCgkJCXJlcXVlc3RIZWFkZXJz
TmFtZXMgPSB7fSwKCQkJLy8gUmVzcG9uc2UgaGVhZGVycwoJCQlyZXNwb25zZUhl
YWRlcnNTdHJpbmcsCgkJCXJlc3BvbnNlSGVhZGVycywKCQkJLy8gdHJhbnNwb3J0
CgkJCXRyYW5zcG9ydCwKCQkJLy8gdGltZW91dCBoYW5kbGUKCQkJdGltZW91dFRp
bWVyLAoJCQkvLyBDcm9zcy1kb21haW4gZGV0ZWN0aW9uIHZhcnMKCQkJcGFydHMs
CgkJCS8vIFRoZSBqcVhIUiBzdGF0ZQoJCQlzdGF0ZSA9IDAsCgkJCS8vIFRvIGtu
b3cgaWYgZ2xvYmFsIGV2ZW50cyBhcmUgdG8gYmUgZGlzcGF0Y2hlZAoJCQlmaXJl
R2xvYmFscywKCQkJLy8gTG9vcCB2YXJpYWJsZQoJCQlpLAoJCQkvLyBGYWtlIHho
cgoJCQlqcVhIUiA9IHsKCgkJCQlyZWFkeVN0YXRlOiAwLAoKCQkJCS8vIENhY2hl
cyB0aGUgaGVhZGVyCgkJCQlzZXRSZXF1ZXN0SGVhZGVyOiBmdW5jdGlvbiggbmFt
ZSwgdmFsdWUgKSB7CgkJCQkJaWYgKCAhc3RhdGUgKSB7CgkJCQkJCXZhciBsbmFt
ZSA9IG5hbWUudG9Mb3dlckNhc2UoKTsKCQkJCQkJbmFtZSA9IHJlcXVlc3RIZWFk
ZXJzTmFtZXNbIGxuYW1lIF0gPSByZXF1ZXN0SGVhZGVyc05hbWVzWyBsbmFtZSBd
IHx8IG5hbWU7CgkJCQkJCXJlcXVlc3RIZWFkZXJzWyBuYW1lIF0gPSB2YWx1ZTsK
CQkJCQl9CgkJCQkJcmV0dXJuIHRoaXM7CgkJCQl9LAoKCQkJCS8vIFJhdyBzdHJp
bmcKCQkJCWdldEFsbFJlc3BvbnNlSGVhZGVyczogZnVuY3Rpb24oKSB7CgkJCQkJ
cmV0dXJuIHN0YXRlID09PSAyID8gcmVzcG9uc2VIZWFkZXJzU3RyaW5nIDogbnVs
bDsKCQkJCX0sCgoJCQkJLy8gQnVpbGRzIGhlYWRlcnMgaGFzaHRhYmxlIGlmIG5l
ZWRlZAoJCQkJZ2V0UmVzcG9uc2VIZWFkZXI6IGZ1bmN0aW9uKCBrZXkgKSB7CgkJ
CQkJdmFyIG1hdGNoOwoJCQkJCWlmICggc3RhdGUgPT09IDIgKSB7CgkJCQkJCWlm
ICggIXJlc3BvbnNlSGVhZGVycyApIHsKCQkJCQkJCXJlc3BvbnNlSGVhZGVycyA9
IHt9OwoJCQkJCQkJd2hpbGUoICggbWF0Y2ggPSByaGVhZGVycy5leGVjKCByZXNw
b25zZUhlYWRlcnNTdHJpbmcgKSApICkgewoJCQkJCQkJCXJlc3BvbnNlSGVhZGVy
c1sgbWF0Y2hbMV0udG9Mb3dlckNhc2UoKSBdID0gbWF0Y2hbIDIgXTsKCQkJCQkJ
CX0KCQkJCQkJfQoJCQkJCQltYXRjaCA9IHJlc3BvbnNlSGVhZGVyc1sga2V5LnRv
TG93ZXJDYXNlKCkgXTsKCQkJCQl9CgkJCQkJcmV0dXJuIG1hdGNoID09PSB1bmRl
ZmluZWQgPyBudWxsIDogbWF0Y2g7CgkJCQl9LAoKCQkJCS8vIE92ZXJyaWRlcyBy
ZXNwb25zZSBjb250ZW50LXR5cGUgaGVhZGVyCgkJCQlvdmVycmlkZU1pbWVUeXBl
OiBmdW5jdGlvbiggdHlwZSApIHsKCQkJCQlpZiAoICFzdGF0ZSApIHsKCQkJCQkJ
cy5taW1lVHlwZSA9IHR5cGU7CgkJCQkJfQoJCQkJCXJldHVybiB0aGlzOwoJCQkJ
fSwKCgkJCQkvLyBDYW5jZWwgdGhlIHJlcXVlc3QKCQkJCWFib3J0OiBmdW5jdGlv
biggc3RhdHVzVGV4dCApIHsKCQkJCQlzdGF0dXNUZXh0ID0gc3RhdHVzVGV4dCB8
fCAiYWJvcnQiOwoJCQkJCWlmICggdHJhbnNwb3J0ICkgewoJCQkJCQl0cmFuc3Bv
cnQuYWJvcnQoIHN0YXR1c1RleHQgKTsKCQkJCQl9CgkJCQkJZG9uZSggMCwgc3Rh
dHVzVGV4dCApOwoJCQkJCXJldHVybiB0aGlzOwoJCQkJfQoJCQl9OwoKCQkvLyBD
YWxsYmFjayBmb3Igd2hlbiBldmVyeXRoaW5nIGlzIGRvbmUKCQkvLyBJdCBpcyBk
ZWZpbmVkIGhlcmUgYmVjYXVzZSBqc2xpbnQgY29tcGxhaW5zIGlmIGl0IGlzIGRl
Y2xhcmVkCgkJLy8gYXQgdGhlIGVuZCBvZiB0aGUgZnVuY3Rpb24gKHdoaWNoIHdv
dWxkIGJlIG1vcmUgbG9naWNhbCBhbmQgcmVhZGFibGUpCgkJZnVuY3Rpb24gZG9u
ZSggc3RhdHVzLCBuYXRpdmVTdGF0dXNUZXh0LCByZXNwb25zZXMsIGhlYWRlcnMg
KSB7CgoJCQkvLyBDYWxsZWQgb25jZQoJCQlpZiAoIHN0YXRlID09PSAyICkgewoJ
CQkJcmV0dXJuOwoJCQl9CgoJCQkvLyBTdGF0ZSBpcyAiZG9uZSIgbm93CgkJCXN0
YXRlID0gMjsKCgkJCS8vIENsZWFyIHRpbWVvdXQgaWYgaXQgZXhpc3RzCgkJCWlm
ICggdGltZW91dFRpbWVyICkgewoJCQkJY2xlYXJUaW1lb3V0KCB0aW1lb3V0VGlt
ZXIgKTsKCQkJfQoKCQkJLy8gRGVyZWZlcmVuY2UgdHJhbnNwb3J0IGZvciBlYXJs
eSBnYXJiYWdlIGNvbGxlY3Rpb24KCQkJLy8gKG5vIG1hdHRlciBob3cgbG9uZyB0
aGUganFYSFIgb2JqZWN0IHdpbGwgYmUgdXNlZCkKCQkJdHJhbnNwb3J0ID0gdW5k
ZWZpbmVkOwoKCQkJLy8gQ2FjaGUgcmVzcG9uc2UgaGVhZGVycwoJCQlyZXNwb25z
ZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8ICIiOwoKCQkJLy8gU2V0IHJlYWR5
U3RhdGUKCQkJanFYSFIucmVhZHlTdGF0ZSA9IHN0YXR1cyA+IDAgPyA0IDogMDsK
CgkJCXZhciBpc1N1Y2Nlc3MsCgkJCQlzdWNjZXNzLAoJCQkJZXJyb3IsCgkJCQlz
dGF0dXNUZXh0ID0gbmF0aXZlU3RhdHVzVGV4dCwKCQkJCXJlc3BvbnNlID0gcmVz
cG9uc2VzID8gYWpheEhhbmRsZVJlc3BvbnNlcyggcywganFYSFIsIHJlc3BvbnNl
cyApIDogdW5kZWZpbmVkLAoJCQkJbGFzdE1vZGlmaWVkLAoJCQkJZXRhZzsKCgkJ
CS8vIElmIHN1Y2Nlc3NmdWwsIGhhbmRsZSB0eXBlIGNoYWluaW5nCgkJCWlmICgg
c3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQg
KSB7CgoJCQkJLy8gU2V0IHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBhbmQvb3IgSWYt
Tm9uZS1NYXRjaCBoZWFkZXIsIGlmIGluIGlmTW9kaWZpZWQgbW9kZS4KCQkJCWlm
ICggcy5pZk1vZGlmaWVkICkgewoKCQkJCQlpZiAoICggbGFzdE1vZGlmaWVkID0g
anFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoICJMYXN0LU1vZGlmaWVkIiApICkgKSB7
CgkJCQkJCWpRdWVyeS5sYXN0TW9kaWZpZWRbIGlmTW9kaWZpZWRLZXkgXSA9IGxh
c3RNb2RpZmllZDsKCQkJCQl9CgkJCQkJaWYgKCAoIGV0YWcgPSBqcVhIUi5nZXRS
ZXNwb25zZUhlYWRlciggIkV0YWciICkgKSApIHsKCQkJCQkJalF1ZXJ5LmV0YWdb
IGlmTW9kaWZpZWRLZXkgXSA9IGV0YWc7CgkJCQkJfQoJCQkJfQoKCQkJCS8vIElm
IG5vdCBtb2RpZmllZAoJCQkJaWYgKCBzdGF0dXMgPT09IDMwNCApIHsKCgkJCQkJ
c3RhdHVzVGV4dCA9ICJub3Rtb2RpZmllZCI7CgkJCQkJaXNTdWNjZXNzID0gdHJ1
ZTsKCgkJCQkvLyBJZiB3ZSBoYXZlIGRhdGEKCQkJCX0gZWxzZSB7CgoJCQkJCXRy
eSB7CgkJCQkJCXN1Y2Nlc3MgPSBhamF4Q29udmVydCggcywgcmVzcG9uc2UgKTsK
CQkJCQkJc3RhdHVzVGV4dCA9ICJzdWNjZXNzIjsKCQkJCQkJaXNTdWNjZXNzID0g
dHJ1ZTsKCQkJCQl9IGNhdGNoKGUpIHsKCQkJCQkJLy8gV2UgaGF2ZSBhIHBhcnNl
cmVycm9yCgkJCQkJCXN0YXR1c1RleHQgPSAicGFyc2VyZXJyb3IiOwoJCQkJCQll
cnJvciA9IGU7CgkJCQkJfQoJCQkJfQoJCQl9IGVsc2UgewoJCQkJLy8gV2UgZXh0
cmFjdCBlcnJvciBmcm9tIHN0YXR1c1RleHQKCQkJCS8vIHRoZW4gbm9ybWFsaXpl
IHN0YXR1c1RleHQgYW5kIHN0YXR1cyBmb3Igbm9uLWFib3J0cwoJCQkJZXJyb3Ig
PSBzdGF0dXNUZXh0OwoJCQkJaWYgKCAhc3RhdHVzVGV4dCB8fCBzdGF0dXMgKSB7
CgkJCQkJc3RhdHVzVGV4dCA9ICJlcnJvciI7CgkJCQkJaWYgKCBzdGF0dXMgPCAw
ICkgewoJCQkJCQlzdGF0dXMgPSAwOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJLy8g
U2V0IGRhdGEgZm9yIHRoZSBmYWtlIHhociBvYmplY3QKCQkJanFYSFIuc3RhdHVz
ID0gc3RhdHVzOwoJCQlqcVhIUi5zdGF0dXNUZXh0ID0gIiIgKyAoIG5hdGl2ZVN0
YXR1c1RleHQgfHwgc3RhdHVzVGV4dCApOwoKCQkJLy8gU3VjY2Vzcy9FcnJvcgoJ
CQlpZiAoIGlzU3VjY2VzcyApIHsKCQkJCWRlZmVycmVkLnJlc29sdmVXaXRoKCBj
YWxsYmFja0NvbnRleHQsIFsgc3VjY2Vzcywgc3RhdHVzVGV4dCwganFYSFIgXSAp
OwoJCQl9IGVsc2UgewoJCQkJZGVmZXJyZWQucmVqZWN0V2l0aCggY2FsbGJhY2tD
b250ZXh0LCBbIGpxWEhSLCBzdGF0dXNUZXh0LCBlcnJvciBdICk7CgkJCX0KCgkJ
CS8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzCgkJCWpxWEhSLnN0YXR1c0Nv
ZGUoIHN0YXR1c0NvZGUgKTsKCQkJc3RhdHVzQ29kZSA9IHVuZGVmaW5lZDsKCgkJ
CWlmICggZmlyZUdsb2JhbHMgKSB7CgkJCQlnbG9iYWxFdmVudENvbnRleHQudHJp
Z2dlciggImFqYXgiICsgKCBpc1N1Y2Nlc3MgPyAiU3VjY2VzcyIgOiAiRXJyb3Ii
ICksCgkJCQkJCVsganFYSFIsIHMsIGlzU3VjY2VzcyA/IHN1Y2Nlc3MgOiBlcnJv
ciBdICk7CgkJCX0KCgkJCS8vIENvbXBsZXRlCgkJCWNvbXBsZXRlRGVmZXJyZWQu
ZmlyZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCBd
ICk7CgoJCQlpZiAoIGZpcmVHbG9iYWxzICkgewoJCQkJZ2xvYmFsRXZlbnRDb250
ZXh0LnRyaWdnZXIoICJhamF4Q29tcGxldGUiLCBbIGpxWEhSLCBzIF0gKTsKCQkJ
CS8vIEhhbmRsZSB0aGUgZ2xvYmFsIEFKQVggY291bnRlcgoJCQkJaWYgKCAhKCAt
LWpRdWVyeS5hY3RpdmUgKSApIHsKCQkJCQlqUXVlcnkuZXZlbnQudHJpZ2dlcigg
ImFqYXhTdG9wIiApOwoJCQkJfQoJCQl9CgkJfQoKCQkvLyBBdHRhY2ggZGVmZXJy
ZWRzCgkJZGVmZXJyZWQucHJvbWlzZSgganFYSFIgKTsKCQlqcVhIUi5zdWNjZXNz
ID0ganFYSFIuZG9uZTsKCQlqcVhIUi5lcnJvciA9IGpxWEhSLmZhaWw7CgkJanFY
SFIuY29tcGxldGUgPSBjb21wbGV0ZURlZmVycmVkLmFkZDsKCgkJLy8gU3RhdHVz
LWRlcGVuZGVudCBjYWxsYmFja3MKCQlqcVhIUi5zdGF0dXNDb2RlID0gZnVuY3Rp
b24oIG1hcCApIHsKCQkJaWYgKCBtYXAgKSB7CgkJCQl2YXIgdG1wOwoJCQkJaWYg
KCBzdGF0ZSA8IDIgKSB7CgkJCQkJZm9yICggdG1wIGluIG1hcCApIHsKCQkJCQkJ
c3RhdHVzQ29kZVsgdG1wIF0gPSBbIHN0YXR1c0NvZGVbdG1wXSwgbWFwW3RtcF0g
XTsKCQkJCQl9CgkJCQl9IGVsc2UgewoJCQkJCXRtcCA9IG1hcFsganFYSFIuc3Rh
dHVzIF07CgkJCQkJanFYSFIudGhlbiggdG1wLCB0bXAgKTsKCQkJCX0KCQkJfQoJ
CQlyZXR1cm4gdGhpczsKCQl9OwoKCQkvLyBSZW1vdmUgaGFzaCBjaGFyYWN0ZXIg
KCM3NTMxOiBhbmQgc3RyaW5nIHByb21vdGlvbikKCQkvLyBBZGQgcHJvdG9jb2wg
aWYgbm90IHByb3ZpZGVkICgjNTg2NjogSUU3IGlzc3VlIHdpdGggcHJvdG9jb2wt
bGVzcyB1cmxzKQoJCS8vIFdlIGFsc28gdXNlIHRoZSB1cmwgcGFyYW1ldGVyIGlm
IGF2YWlsYWJsZQoJCXMudXJsID0gKCAoIHVybCB8fCBzLnVybCApICsgIiIgKS5y
ZXBsYWNlKCByaGFzaCwgIiIgKS5yZXBsYWNlKCBycHJvdG9jb2wsIGFqYXhMb2NQ
YXJ0c1sgMSBdICsgIi8vIiApOwoKCQkvLyBFeHRyYWN0IGRhdGFUeXBlcyBsaXN0
CgkJcy5kYXRhVHlwZXMgPSBqUXVlcnkudHJpbSggcy5kYXRhVHlwZSB8fCAiKiIg
KS50b0xvd2VyQ2FzZSgpLnNwbGl0KCByc3BhY2VzQWpheCApOwoKCQkvLyBEZXRl
cm1pbmUgaWYgYSBjcm9zcy1kb21haW4gcmVxdWVzdCBpcyBpbiBvcmRlcgoJCWlm
ICggcy5jcm9zc0RvbWFpbiA9PSBudWxsICkgewoJCQlwYXJ0cyA9IHJ1cmwuZXhl
Yyggcy51cmwudG9Mb3dlckNhc2UoKSApOwoJCQlzLmNyb3NzRG9tYWluID0gISEo
IHBhcnRzICYmCgkJCQkoIHBhcnRzWyAxIF0gIT0gYWpheExvY1BhcnRzWyAxIF0g
fHwgcGFydHNbIDIgXSAhPSBhamF4TG9jUGFydHNbIDIgXSB8fAoJCQkJCSggcGFy
dHNbIDMgXSB8fCAoIHBhcnRzWyAxIF0gPT09ICJodHRwOiIgPyA4MCA6IDQ0MyAp
ICkgIT0KCQkJCQkJKCBhamF4TG9jUGFydHNbIDMgXSB8fCAoIGFqYXhMb2NQYXJ0
c1sgMSBdID09PSAiaHR0cDoiID8gODAgOiA0NDMgKSApICkKCQkJKTsKCQl9CgoJ
CS8vIENvbnZlcnQgZGF0YSBpZiBub3QgYWxyZWFkeSBhIHN0cmluZwoJCWlmICgg
cy5kYXRhICYmIHMucHJvY2Vzc0RhdGEgJiYgdHlwZW9mIHMuZGF0YSAhPT0gInN0
cmluZyIgKSB7CgkJCXMuZGF0YSA9IGpRdWVyeS5wYXJhbSggcy5kYXRhLCBzLnRy
YWRpdGlvbmFsICk7CgkJfQoKCQkvLyBBcHBseSBwcmVmaWx0ZXJzCgkJaW5zcGVj
dFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMsIHMsIG9wdGlvbnMs
IGpxWEhSICk7CgoJCS8vIElmIHJlcXVlc3Qgd2FzIGFib3J0ZWQgaW5zaWRlIGEg
cHJlZmlsdGVyLCBzdG9wIHRoZXJlCgkJaWYgKCBzdGF0ZSA9PT0gMiApIHsKCQkJ
cmV0dXJuIGZhbHNlOwoJCX0KCgkJLy8gV2UgY2FuIGZpcmUgZ2xvYmFsIGV2ZW50
cyBhcyBvZiBub3cgaWYgYXNrZWQgdG8KCQlmaXJlR2xvYmFscyA9IHMuZ2xvYmFs
OwoKCQkvLyBVcHBlcmNhc2UgdGhlIHR5cGUKCQlzLnR5cGUgPSBzLnR5cGUudG9V
cHBlckNhc2UoKTsKCgkJLy8gRGV0ZXJtaW5lIGlmIHJlcXVlc3QgaGFzIGNvbnRl
bnQKCQlzLmhhc0NvbnRlbnQgPSAhcm5vQ29udGVudC50ZXN0KCBzLnR5cGUgKTsK
CgkJLy8gV2F0Y2ggZm9yIGEgbmV3IHNldCBvZiByZXF1ZXN0cwoJCWlmICggZmly
ZUdsb2JhbHMgJiYgalF1ZXJ5LmFjdGl2ZSsrID09PSAwICkgewoJCQlqUXVlcnku
ZXZlbnQudHJpZ2dlciggImFqYXhTdGFydCIgKTsKCQl9CgoJCS8vIE1vcmUgb3B0
aW9ucyBoYW5kbGluZyBmb3IgcmVxdWVzdHMgd2l0aCBubyBjb250ZW50CgkJaWYg
KCAhcy5oYXNDb250ZW50ICkgewoKCQkJLy8gSWYgZGF0YSBpcyBhdmFpbGFibGUs
IGFwcGVuZCBkYXRhIHRvIHVybAoJCQlpZiAoIHMuZGF0YSApIHsKCQkJCXMudXJs
ICs9ICggcnF1ZXJ5LnRlc3QoIHMudXJsICkgPyAiJiIgOiAiPyIgKSArIHMuZGF0
YTsKCQkJCS8vICM5NjgyOiByZW1vdmUgZGF0YSBzbyB0aGF0IGl0J3Mgbm90IHVz
ZWQgaW4gYW4gZXZlbnR1YWwgcmV0cnkKCQkJCWRlbGV0ZSBzLmRhdGE7CgkJCX0K
CgkJCS8vIEdldCBpZk1vZGlmaWVkS2V5IGJlZm9yZSBhZGRpbmcgdGhlIGFudGkt
Y2FjaGUgcGFyYW1ldGVyCgkJCWlmTW9kaWZpZWRLZXkgPSBzLnVybDsKCgkJCS8v
IEFkZCBhbnRpLWNhY2hlIGluIHVybCBpZiBuZWVkZWQKCQkJaWYgKCBzLmNhY2hl
ID09PSBmYWxzZSApIHsKCgkJCQl2YXIgdHMgPSBqUXVlcnkubm93KCksCgkJCQkJ
Ly8gdHJ5IHJlcGxhY2luZyBfPSBpZiBpdCBpcyB0aGVyZQoJCQkJCXJldCA9IHMu
dXJsLnJlcGxhY2UoIHJ0cywgIiQxXz0iICsgdHMgKTsKCgkJCQkvLyBpZiBub3Ro
aW5nIHdhcyByZXBsYWNlZCwgYWRkIHRpbWVzdGFtcCB0byB0aGUgZW5kCgkJCQlz
LnVybCA9IHJldCArICggKCByZXQgPT09IHMudXJsICkgPyAoIHJxdWVyeS50ZXN0
KCBzLnVybCApID8gIiYiIDogIj8iICkgKyAiXz0iICsgdHMgOiAiIiApOwoJCQl9
CgkJfQoKCQkvLyBTZXQgdGhlIGNvcnJlY3QgaGVhZGVyLCBpZiBkYXRhIGlzIGJl
aW5nIHNlbnQKCQlpZiAoIHMuZGF0YSAmJiBzLmhhc0NvbnRlbnQgJiYgcy5jb250
ZW50VHlwZSAhPT0gZmFsc2UgfHwgb3B0aW9ucy5jb250ZW50VHlwZSApIHsKCQkJ
anFYSFIuc2V0UmVxdWVzdEhlYWRlciggIkNvbnRlbnQtVHlwZSIsIHMuY29udGVu
dFR5cGUgKTsKCQl9CgoJCS8vIFNldCB0aGUgSWYtTW9kaWZpZWQtU2luY2UgYW5k
L29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyLCBpZiBpbiBpZk1vZGlmaWVkIG1vZGUu
CgkJaWYgKCBzLmlmTW9kaWZpZWQgKSB7CgkJCWlmTW9kaWZpZWRLZXkgPSBpZk1v
ZGlmaWVkS2V5IHx8IHMudXJsOwoJCQlpZiAoIGpRdWVyeS5sYXN0TW9kaWZpZWRb
IGlmTW9kaWZpZWRLZXkgXSApIHsKCQkJCWpxWEhSLnNldFJlcXVlc3RIZWFkZXIo
ICJJZi1Nb2RpZmllZC1TaW5jZSIsIGpRdWVyeS5sYXN0TW9kaWZpZWRbIGlmTW9k
aWZpZWRLZXkgXSApOwoJCQl9CgkJCWlmICggalF1ZXJ5LmV0YWdbIGlmTW9kaWZp
ZWRLZXkgXSApIHsKCQkJCWpxWEhSLnNldFJlcXVlc3RIZWFkZXIoICJJZi1Ob25l
LU1hdGNoIiwgalF1ZXJ5LmV0YWdbIGlmTW9kaWZpZWRLZXkgXSApOwoJCQl9CgkJ
fQoKCQkvLyBTZXQgdGhlIEFjY2VwdHMgaGVhZGVyIGZvciB0aGUgc2VydmVyLCBk
ZXBlbmRpbmcgb24gdGhlIGRhdGFUeXBlCgkJanFYSFIuc2V0UmVxdWVzdEhlYWRl
cigKCQkJIkFjY2VwdCIsCgkJCXMuZGF0YVR5cGVzWyAwIF0gJiYgcy5hY2NlcHRz
WyBzLmRhdGFUeXBlc1swXSBdID8KCQkJCXMuYWNjZXB0c1sgcy5kYXRhVHlwZXNb
MF0gXSArICggcy5kYXRhVHlwZXNbIDAgXSAhPT0gIioiID8gIiwgIiArIGFsbFR5
cGVzICsgIjsgcT0wLjAxIiA6ICIiICkgOgoJCQkJcy5hY2NlcHRzWyAiKiIgXQoJ
CSk7CgoJCS8vIENoZWNrIGZvciBoZWFkZXJzIG9wdGlvbgoJCWZvciAoIGkgaW4g
cy5oZWFkZXJzICkgewoJCQlqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBpLCBzLmhl
YWRlcnNbIGkgXSApOwoJCX0KCgkJLy8gQWxsb3cgY3VzdG9tIGhlYWRlcnMvbWlt
ZXR5cGVzIGFuZCBlYXJseSBhYm9ydAoJCWlmICggcy5iZWZvcmVTZW5kICYmICgg
cy5iZWZvcmVTZW5kLmNhbGwoIGNhbGxiYWNrQ29udGV4dCwganFYSFIsIHMgKSA9
PT0gZmFsc2UgfHwgc3RhdGUgPT09IDIgKSApIHsKCQkJCS8vIEFib3J0IGlmIG5v
dCBkb25lIGFscmVhZHkKCQkJCWpxWEhSLmFib3J0KCk7CgkJCQlyZXR1cm4gZmFs
c2U7CgoJCX0KCgkJLy8gSW5zdGFsbCBjYWxsYmFja3Mgb24gZGVmZXJyZWRzCgkJ
Zm9yICggaSBpbiB7IHN1Y2Nlc3M6IDEsIGVycm9yOiAxLCBjb21wbGV0ZTogMSB9
ICkgewoJCQlqcVhIUlsgaSBdKCBzWyBpIF0gKTsKCQl9CgoJCS8vIEdldCB0cmFu
c3BvcnQKCQl0cmFuc3BvcnQgPSBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0
cyggdHJhbnNwb3J0cywgcywgb3B0aW9ucywganFYSFIgKTsKCgkJLy8gSWYgbm8g
dHJhbnNwb3J0LCB3ZSBhdXRvLWFib3J0CgkJaWYgKCAhdHJhbnNwb3J0ICkgewoJ
CQlkb25lKCAtMSwgIk5vIFRyYW5zcG9ydCIgKTsKCQl9IGVsc2UgewoJCQlqcVhI
Ui5yZWFkeVN0YXRlID0gMTsKCQkJLy8gU2VuZCBnbG9iYWwgZXZlbnQKCQkJaWYg
KCBmaXJlR2xvYmFscyApIHsKCQkJCWdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2Vy
KCAiYWpheFNlbmQiLCBbIGpxWEhSLCBzIF0gKTsKCQkJfQoJCQkvLyBUaW1lb3V0
CgkJCWlmICggcy5hc3luYyAmJiBzLnRpbWVvdXQgPiAwICkgewoJCQkJdGltZW91
dFRpbWVyID0gc2V0VGltZW91dCggZnVuY3Rpb24oKXsKCQkJCQlqcVhIUi5hYm9y
dCggInRpbWVvdXQiICk7CgkJCQl9LCBzLnRpbWVvdXQgKTsKCQkJfQoKCQkJdHJ5
IHsKCQkJCXN0YXRlID0gMTsKCQkJCXRyYW5zcG9ydC5zZW5kKCByZXF1ZXN0SGVh
ZGVycywgZG9uZSApOwoJCQl9IGNhdGNoIChlKSB7CgkJCQkvLyBQcm9wYWdhdGUg
ZXhjZXB0aW9uIGFzIGVycm9yIGlmIG5vdCBkb25lCgkJCQlpZiAoIHN0YXRlIDwg
MiApIHsKCQkJCQlkb25lKCAtMSwgZSApOwoJCQkJLy8gU2ltcGx5IHJldGhyb3cg
b3RoZXJ3aXNlCgkJCQl9IGVsc2UgewoJCQkJCXRocm93IGU7CgkJCQl9CgkJCX0K
CQl9CgoJCXJldHVybiBqcVhIUjsKCX0sCgoJLy8gU2VyaWFsaXplIGFuIGFycmF5
IG9mIGZvcm0gZWxlbWVudHMgb3IgYSBzZXQgb2YKCS8vIGtleS92YWx1ZXMgaW50
byBhIHF1ZXJ5IHN0cmluZwoJcGFyYW06IGZ1bmN0aW9uKCBhLCB0cmFkaXRpb25h
bCApIHsKCQl2YXIgcyA9IFtdLAoJCQlhZGQgPSBmdW5jdGlvbigga2V5LCB2YWx1
ZSApIHsKCQkJCS8vIElmIHZhbHVlIGlzIGEgZnVuY3Rpb24sIGludm9rZSBpdCBh
bmQgcmV0dXJuIGl0cyB2YWx1ZQoJCQkJdmFsdWUgPSBqUXVlcnkuaXNGdW5jdGlv
biggdmFsdWUgKSA/IHZhbHVlKCkgOiB2YWx1ZTsKCQkJCXNbIHMubGVuZ3RoIF0g
PSBlbmNvZGVVUklDb21wb25lbnQoIGtleSApICsgIj0iICsgZW5jb2RlVVJJQ29t
cG9uZW50KCB2YWx1ZSApOwoJCQl9OwoKCQkvLyBTZXQgdHJhZGl0aW9uYWwgdG8g
dHJ1ZSBmb3IgalF1ZXJ5IDw9IDEuMy4yIGJlaGF2aW9yLgoJCWlmICggdHJhZGl0
aW9uYWwgPT09IHVuZGVmaW5lZCApIHsKCQkJdHJhZGl0aW9uYWwgPSBqUXVlcnku
YWpheFNldHRpbmdzLnRyYWRpdGlvbmFsOwoJCX0KCgkJLy8gSWYgYW4gYXJyYXkg
d2FzIHBhc3NlZCBpbiwgYXNzdW1lIHRoYXQgaXQgaXMgYW4gYXJyYXkgb2YgZm9y
bSBlbGVtZW50cy4KCQlpZiAoIGpRdWVyeS5pc0FycmF5KCBhICkgfHwgKCBhLmpx
dWVyeSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGEgKSApICkgewoJCQkvLyBT
ZXJpYWxpemUgdGhlIGZvcm0gZWxlbWVudHMKCQkJalF1ZXJ5LmVhY2goIGEsIGZ1
bmN0aW9uKCkgewoJCQkJYWRkKCB0aGlzLm5hbWUsIHRoaXMudmFsdWUgKTsKCQkJ
fSk7CgoJCX0gZWxzZSB7CgkJCS8vIElmIHRyYWRpdGlvbmFsLCBlbmNvZGUgdGhl
ICJvbGQiIHdheSAodGhlIHdheSAxLjMuMiBvciBvbGRlcgoJCQkvLyBkaWQgaXQp
LCBvdGhlcndpc2UgZW5jb2RlIHBhcmFtcyByZWN1cnNpdmVseS4KCQkJZm9yICgg
dmFyIHByZWZpeCBpbiBhICkgewoJCQkJYnVpbGRQYXJhbXMoIHByZWZpeCwgYVsg
cHJlZml4IF0sIHRyYWRpdGlvbmFsLCBhZGQgKTsKCQkJfQoJCX0KCgkJLy8gUmV0
dXJuIHRoZSByZXN1bHRpbmcgc2VyaWFsaXphdGlvbgoJCXJldHVybiBzLmpvaW4o
ICImIiApLnJlcGxhY2UoIHIyMCwgIisiICk7Cgl9Cn0pOwoKZnVuY3Rpb24gYnVp
bGRQYXJhbXMoIHByZWZpeCwgb2JqLCB0cmFkaXRpb25hbCwgYWRkICkgewoJaWYg
KCBqUXVlcnkuaXNBcnJheSggb2JqICkgKSB7CgkJLy8gU2VyaWFsaXplIGFycmF5
IGl0ZW0uCgkJalF1ZXJ5LmVhY2goIG9iaiwgZnVuY3Rpb24oIGksIHYgKSB7CgkJ
CWlmICggdHJhZGl0aW9uYWwgfHwgcmJyYWNrZXQudGVzdCggcHJlZml4ICkgKSB7
CgkJCQkvLyBUcmVhdCBlYWNoIGFycmF5IGl0ZW0gYXMgYSBzY2FsYXIuCgkJCQlh
ZGQoIHByZWZpeCwgdiApOwoKCQkJfSBlbHNlIHsKCQkJCS8vIElmIGFycmF5IGl0
ZW0gaXMgbm9uLXNjYWxhciAoYXJyYXkgb3Igb2JqZWN0KSwgZW5jb2RlIGl0cwoJ
CQkJLy8gbnVtZXJpYyBpbmRleCB0byByZXNvbHZlIGRlc2VyaWFsaXphdGlvbiBh
bWJpZ3VpdHkgaXNzdWVzLgoJCQkJLy8gTm90ZSB0aGF0IHJhY2sgKGFzIG9mIDEu
MC4wKSBjYW4ndCBjdXJyZW50bHkgZGVzZXJpYWxpemUKCQkJCS8vIG5lc3RlZCBh
cnJheXMgcHJvcGVybHksIGFuZCBhdHRlbXB0aW5nIHRvIGRvIHNvIG1heSBjYXVz
ZQoJCQkJLy8gYSBzZXJ2ZXIgZXJyb3IuIFBvc3NpYmxlIGZpeGVzIGFyZSB0byBt
b2RpZnkgcmFjaydzCgkJCQkvLyBkZXNlcmlhbGl6YXRpb24gYWxnb3JpdGhtIG9y
IHRvIHByb3ZpZGUgYW4gb3B0aW9uIG9yIGZsYWcKCQkJCS8vIHRvIGZvcmNlIGFy
cmF5IHNlcmlhbGl6YXRpb24gdG8gYmUgc2hhbGxvdy4KCQkJCWJ1aWxkUGFyYW1z
KCBwcmVmaXggKyAiWyIgKyAoIHR5cGVvZiB2ID09PSAib2JqZWN0IiA/IGkgOiAi
IiApICsgIl0iLCB2LCB0cmFkaXRpb25hbCwgYWRkICk7CgkJCX0KCQl9KTsKCgl9
IGVsc2UgaWYgKCAhdHJhZGl0aW9uYWwgJiYgalF1ZXJ5LnR5cGUoIG9iaiApID09
PSAib2JqZWN0IiApIHsKCQkvLyBTZXJpYWxpemUgb2JqZWN0IGl0ZW0uCgkJZm9y
ICggdmFyIG5hbWUgaW4gb2JqICkgewoJCQlidWlsZFBhcmFtcyggcHJlZml4ICsg
IlsiICsgbmFtZSArICJdIiwgb2JqWyBuYW1lIF0sIHRyYWRpdGlvbmFsLCBhZGQg
KTsKCQl9CgoJfSBlbHNlIHsKCQkvLyBTZXJpYWxpemUgc2NhbGFyIGl0ZW0uCgkJ
YWRkKCBwcmVmaXgsIG9iaiApOwoJfQp9CgovLyBUaGlzIGlzIHN0aWxsIG9uIHRo
ZSBqUXVlcnkgb2JqZWN0Li4uIGZvciBub3cKLy8gV2FudCB0byBtb3ZlIHRoaXMg
dG8galF1ZXJ5LmFqYXggc29tZSBkYXkKalF1ZXJ5LmV4dGVuZCh7CgoJLy8gQ291
bnRlciBmb3IgaG9sZGluZyB0aGUgbnVtYmVyIG9mIGFjdGl2ZSBxdWVyaWVzCglh
Y3RpdmU6IDAsCgoJLy8gTGFzdC1Nb2RpZmllZCBoZWFkZXIgY2FjaGUgZm9yIG5l
eHQgcmVxdWVzdAoJbGFzdE1vZGlmaWVkOiB7fSwKCWV0YWc6IHt9Cgp9KTsKCi8q
IEhhbmRsZXMgcmVzcG9uc2VzIHRvIGFuIGFqYXggcmVxdWVzdDoKICogLSBzZXRz
IGFsbCByZXNwb25zZVhYWCBmaWVsZHMgYWNjb3JkaW5nbHkKICogLSBmaW5kcyB0
aGUgcmlnaHQgZGF0YVR5cGUgKG1lZGlhdGVzIGJldHdlZW4gY29udGVudC10eXBl
IGFuZCBleHBlY3RlZCBkYXRhVHlwZSkKICogLSByZXR1cm5zIHRoZSBjb3JyZXNw
b25kaW5nIHJlc3BvbnNlCiAqLwpmdW5jdGlvbiBhamF4SGFuZGxlUmVzcG9uc2Vz
KCBzLCBqcVhIUiwgcmVzcG9uc2VzICkgewoKCXZhciBjb250ZW50cyA9IHMuY29u
dGVudHMsCgkJZGF0YVR5cGVzID0gcy5kYXRhVHlwZXMsCgkJcmVzcG9uc2VGaWVs
ZHMgPSBzLnJlc3BvbnNlRmllbGRzLAoJCWN0LAoJCXR5cGUsCgkJZmluYWxEYXRh
VHlwZSwKCQlmaXJzdERhdGFUeXBlOwoKCS8vIEZpbGwgcmVzcG9uc2VYWFggZmll
bGRzCglmb3IgKCB0eXBlIGluIHJlc3BvbnNlRmllbGRzICkgewoJCWlmICggdHlw
ZSBpbiByZXNwb25zZXMgKSB7CgkJCWpxWEhSWyByZXNwb25zZUZpZWxkc1t0eXBl
XSBdID0gcmVzcG9uc2VzWyB0eXBlIF07CgkJfQoJfQoKCS8vIFJlbW92ZSBhdXRv
IGRhdGFUeXBlIGFuZCBnZXQgY29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzCgl3
aGlsZSggZGF0YVR5cGVzWyAwIF0gPT09ICIqIiApIHsKCQlkYXRhVHlwZXMuc2hp
ZnQoKTsKCQlpZiAoIGN0ID09PSB1bmRlZmluZWQgKSB7CgkJCWN0ID0gcy5taW1l
VHlwZSB8fCBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggImNvbnRlbnQtdHlwZSIg
KTsKCQl9Cgl9CgoJLy8gQ2hlY2sgaWYgd2UncmUgZGVhbGluZyB3aXRoIGEga25v
d24gY29udGVudC10eXBlCglpZiAoIGN0ICkgewoJCWZvciAoIHR5cGUgaW4gY29u
dGVudHMgKSB7CgkJCWlmICggY29udGVudHNbIHR5cGUgXSAmJiBjb250ZW50c1sg
dHlwZSBdLnRlc3QoIGN0ICkgKSB7CgkJCQlkYXRhVHlwZXMudW5zaGlmdCggdHlw
ZSApOwoJCQkJYnJlYWs7CgkJCX0KCQl9Cgl9CgoJLy8gQ2hlY2sgdG8gc2VlIGlm
IHdlIGhhdmUgYSByZXNwb25zZSBmb3IgdGhlIGV4cGVjdGVkIGRhdGFUeXBlCglp
ZiAoIGRhdGFUeXBlc1sgMCBdIGluIHJlc3BvbnNlcyApIHsKCQlmaW5hbERhdGFU
eXBlID0gZGF0YVR5cGVzWyAwIF07Cgl9IGVsc2UgewoJCS8vIFRyeSBjb252ZXJ0
aWJsZSBkYXRhVHlwZXMKCQlmb3IgKCB0eXBlIGluIHJlc3BvbnNlcyApIHsKCQkJ
aWYgKCAhZGF0YVR5cGVzWyAwIF0gfHwgcy5jb252ZXJ0ZXJzWyB0eXBlICsgIiAi
ICsgZGF0YVR5cGVzWzBdIF0gKSB7CgkJCQlmaW5hbERhdGFUeXBlID0gdHlwZTsK
CQkJCWJyZWFrOwoJCQl9CgkJCWlmICggIWZpcnN0RGF0YVR5cGUgKSB7CgkJCQlm
aXJzdERhdGFUeXBlID0gdHlwZTsKCQkJfQoJCX0KCQkvLyBPciBqdXN0IHVzZSBm
aXJzdCBvbmUKCQlmaW5hbERhdGFUeXBlID0gZmluYWxEYXRhVHlwZSB8fCBmaXJz
dERhdGFUeXBlOwoJfQoKCS8vIElmIHdlIGZvdW5kIGEgZGF0YVR5cGUKCS8vIFdl
IGFkZCB0aGUgZGF0YVR5cGUgdG8gdGhlIGxpc3QgaWYgbmVlZGVkCgkvLyBhbmQg
cmV0dXJuIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlCglpZiAoIGZpbmFsRGF0
YVR5cGUgKSB7CgkJaWYgKCBmaW5hbERhdGFUeXBlICE9PSBkYXRhVHlwZXNbIDAg
XSApIHsKCQkJZGF0YVR5cGVzLnVuc2hpZnQoIGZpbmFsRGF0YVR5cGUgKTsKCQl9
CgkJcmV0dXJuIHJlc3BvbnNlc1sgZmluYWxEYXRhVHlwZSBdOwoJfQp9CgovLyBD
aGFpbiBjb252ZXJzaW9ucyBnaXZlbiB0aGUgcmVxdWVzdCBhbmQgdGhlIG9yaWdp
bmFsIHJlc3BvbnNlCmZ1bmN0aW9uIGFqYXhDb252ZXJ0KCBzLCByZXNwb25zZSAp
IHsKCgkvLyBBcHBseSB0aGUgZGF0YUZpbHRlciBpZiBwcm92aWRlZAoJaWYgKCBz
LmRhdGFGaWx0ZXIgKSB7CgkJcmVzcG9uc2UgPSBzLmRhdGFGaWx0ZXIoIHJlc3Bv
bnNlLCBzLmRhdGFUeXBlICk7Cgl9CgoJdmFyIGRhdGFUeXBlcyA9IHMuZGF0YVR5
cGVzLAoJCWNvbnZlcnRlcnMgPSB7fSwKCQlpLAoJCWtleSwKCQlsZW5ndGggPSBk
YXRhVHlwZXMubGVuZ3RoLAoJCXRtcCwKCQkvLyBDdXJyZW50IGFuZCBwcmV2aW91
cyBkYXRhVHlwZXMKCQljdXJyZW50ID0gZGF0YVR5cGVzWyAwIF0sCgkJcHJldiwK
CQkvLyBDb252ZXJzaW9uIGV4cHJlc3Npb24KCQljb252ZXJzaW9uLAoJCS8vIENv
bnZlcnNpb24gZnVuY3Rpb24KCQljb252LAoJCS8vIENvbnZlcnNpb24gZnVuY3Rp
b25zICh0cmFuc2l0aXZlIGNvbnZlcnNpb24pCgkJY29udjEsCgkJY29udjI7CgoJ
Ly8gRm9yIGVhY2ggZGF0YVR5cGUgaW4gdGhlIGNoYWluCglmb3IgKCBpID0gMTsg
aSA8IGxlbmd0aDsgaSsrICkgewoKCQkvLyBDcmVhdGUgY29udmVydGVycyBtYXAK
CQkvLyB3aXRoIGxvd2VyY2FzZWQga2V5cwoJCWlmICggaSA9PT0gMSApIHsKCQkJ
Zm9yICgga2V5IGluIHMuY29udmVydGVycyApIHsKCQkJCWlmICggdHlwZW9mIGtl
eSA9PT0gInN0cmluZyIgKSB7CgkJCQkJY29udmVydGVyc1sga2V5LnRvTG93ZXJD
YXNlKCkgXSA9IHMuY29udmVydGVyc1sga2V5IF07CgkJCQl9CgkJCX0KCQl9CgoJ
CS8vIEdldCB0aGUgZGF0YVR5cGVzCgkJcHJldiA9IGN1cnJlbnQ7CgkJY3VycmVu
dCA9IGRhdGFUeXBlc1sgaSBdOwoKCQkvLyBJZiBjdXJyZW50IGlzIGF1dG8gZGF0
YVR5cGUsIHVwZGF0ZSBpdCB0byBwcmV2CgkJaWYgKCBjdXJyZW50ID09PSAiKiIg
KSB7CgkJCWN1cnJlbnQgPSBwcmV2OwoJCS8vIElmIG5vIGF1dG8gYW5kIGRhdGFU
eXBlcyBhcmUgYWN0dWFsbHkgZGlmZmVyZW50CgkJfSBlbHNlIGlmICggcHJldiAh
PT0gIioiICYmIHByZXYgIT09IGN1cnJlbnQgKSB7CgoJCQkvLyBHZXQgdGhlIGNv
bnZlcnRlcgoJCQljb252ZXJzaW9uID0gcHJldiArICIgIiArIGN1cnJlbnQ7CgkJ
CWNvbnYgPSBjb252ZXJ0ZXJzWyBjb252ZXJzaW9uIF0gfHwgY29udmVydGVyc1sg
IiogIiArIGN1cnJlbnQgXTsKCgkJCS8vIElmIHRoZXJlIGlzIG5vIGRpcmVjdCBj
b252ZXJ0ZXIsIHNlYXJjaCB0cmFuc2l0aXZlbHkKCQkJaWYgKCAhY29udiApIHsK
CQkJCWNvbnYyID0gdW5kZWZpbmVkOwoJCQkJZm9yICggY29udjEgaW4gY29udmVy
dGVycyApIHsKCQkJCQl0bXAgPSBjb252MS5zcGxpdCggIiAiICk7CgkJCQkJaWYg
KCB0bXBbIDAgXSA9PT0gcHJldiB8fCB0bXBbIDAgXSA9PT0gIioiICkgewoJCQkJ
CQljb252MiA9IGNvbnZlcnRlcnNbIHRtcFsxXSArICIgIiArIGN1cnJlbnQgXTsK
CQkJCQkJaWYgKCBjb252MiApIHsKCQkJCQkJCWNvbnYxID0gY29udmVydGVyc1sg
Y29udjEgXTsKCQkJCQkJCWlmICggY29udjEgPT09IHRydWUgKSB7CgkJCQkJCQkJ
Y29udiA9IGNvbnYyOwoJCQkJCQkJfSBlbHNlIGlmICggY29udjIgPT09IHRydWUg
KSB7CgkJCQkJCQkJY29udiA9IGNvbnYxOwoJCQkJCQkJfQoJCQkJCQkJYnJlYWs7
CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCQkJLy8gSWYgd2UgZm91bmQgbm8g
Y29udmVydGVyLCBkaXNwYXRjaCBhbiBlcnJvcgoJCQlpZiAoICEoIGNvbnYgfHwg
Y29udjIgKSApIHsKCQkJCWpRdWVyeS5lcnJvciggIk5vIGNvbnZlcnNpb24gZnJv
bSAiICsgY29udmVyc2lvbi5yZXBsYWNlKCIgIiwiIHRvICIpICk7CgkJCX0KCQkJ
Ly8gSWYgZm91bmQgY29udmVydGVyIGlzIG5vdCBhbiBlcXVpdmFsZW5jZQoJCQlp
ZiAoIGNvbnYgIT09IHRydWUgKSB7CgkJCQkvLyBDb252ZXJ0IHdpdGggMSBvciAy
IGNvbnZlcnRlcnMgYWNjb3JkaW5nbHkKCQkJCXJlc3BvbnNlID0gY29udiA/IGNv
bnYoIHJlc3BvbnNlICkgOiBjb252MiggY29udjEocmVzcG9uc2UpICk7CgkJCX0K
CQl9Cgl9CglyZXR1cm4gcmVzcG9uc2U7Cn0KCgoKCnZhciBqc2MgPSBqUXVlcnku
bm93KCksCglqc3JlID0gLyhcPSlcPygmfCQpfFw/XD8vaTsKCi8vIERlZmF1bHQg
anNvbnAgc2V0dGluZ3MKalF1ZXJ5LmFqYXhTZXR1cCh7Cglqc29ucDogImNhbGxi
YWNrIiwKCWpzb25wQ2FsbGJhY2s6IGZ1bmN0aW9uKCkgewoJCXJldHVybiBqUXVl
cnkuZXhwYW5kbyArICJfIiArICgganNjKysgKTsKCX0KfSk7CgovLyBEZXRlY3Qs
IG5vcm1hbGl6ZSBvcHRpb25zIGFuZCBpbnN0YWxsIGNhbGxiYWNrcyBmb3IganNv
bnAgcmVxdWVzdHMKalF1ZXJ5LmFqYXhQcmVmaWx0ZXIoICJqc29uIGpzb25wIiwg
ZnVuY3Rpb24oIHMsIG9yaWdpbmFsU2V0dGluZ3MsIGpxWEhSICkgewoKCXZhciBp
bnNwZWN0RGF0YSA9ICggdHlwZW9mIHMuZGF0YSA9PT0gInN0cmluZyIgKSAmJiAv
XmFwcGxpY2F0aW9uXC94XC13d3dcLWZvcm1cLXVybGVuY29kZWQvLnRlc3QoIHMu
Y29udGVudFR5cGUgKTsKCglpZiAoIHMuZGF0YVR5cGVzWyAwIF0gPT09ICJqc29u
cCIgfHwKCQlzLmpzb25wICE9PSBmYWxzZSAmJiAoIGpzcmUudGVzdCggcy51cmwg
KSB8fAoJCQkJaW5zcGVjdERhdGEgJiYganNyZS50ZXN0KCBzLmRhdGEgKSApICkg
ewoKCQl2YXIgcmVzcG9uc2VDb250YWluZXIsCgkJCWpzb25wQ2FsbGJhY2sgPSBz
Lmpzb25wQ2FsbGJhY2sgPQoJCQkJalF1ZXJ5LmlzRnVuY3Rpb24oIHMuanNvbnBD
YWxsYmFjayApID8gcy5qc29ucENhbGxiYWNrKCkgOiBzLmpzb25wQ2FsbGJhY2ss
CgkJCXByZXZpb3VzID0gd2luZG93WyBqc29ucENhbGxiYWNrIF0sCgkJCXVybCA9
IHMudXJsLAoJCQlkYXRhID0gcy5kYXRhLAoJCQlyZXBsYWNlID0gIiQxIiArIGpz
b25wQ2FsbGJhY2sgKyAiJDIiOwoKCQlpZiAoIHMuanNvbnAgIT09IGZhbHNlICkg
ewoJCQl1cmwgPSB1cmwucmVwbGFjZSgganNyZSwgcmVwbGFjZSApOwoJCQlpZiAo
IHMudXJsID09PSB1cmwgKSB7CgkJCQlpZiAoIGluc3BlY3REYXRhICkgewoJCQkJ
CWRhdGEgPSBkYXRhLnJlcGxhY2UoIGpzcmUsIHJlcGxhY2UgKTsKCQkJCX0KCQkJ
CWlmICggcy5kYXRhID09PSBkYXRhICkgewoJCQkJCS8vIEFkZCBjYWxsYmFjayBt
YW51YWxseQoJCQkJCXVybCArPSAoL1w/Ly50ZXN0KCB1cmwgKSA/ICImIiA6ICI/
IikgKyBzLmpzb25wICsgIj0iICsganNvbnBDYWxsYmFjazsKCQkJCX0KCQkJfQoJ
CX0KCgkJcy51cmwgPSB1cmw7CgkJcy5kYXRhID0gZGF0YTsKCgkJLy8gSW5zdGFs
bCBjYWxsYmFjawoJCXdpbmRvd1sganNvbnBDYWxsYmFjayBdID0gZnVuY3Rpb24o
IHJlc3BvbnNlICkgewoJCQlyZXNwb25zZUNvbnRhaW5lciA9IFsgcmVzcG9uc2Ug
XTsKCQl9OwoKCQkvLyBDbGVhbi11cCBmdW5jdGlvbgoJCWpxWEhSLmFsd2F5cyhm
dW5jdGlvbigpIHsKCQkJLy8gU2V0IGNhbGxiYWNrIGJhY2sgdG8gcHJldmlvdXMg
dmFsdWUKCQkJd2luZG93WyBqc29ucENhbGxiYWNrIF0gPSBwcmV2aW91czsKCQkJ
Ly8gQ2FsbCBpZiBpdCB3YXMgYSBmdW5jdGlvbiBhbmQgd2UgaGF2ZSBhIHJlc3Bv
bnNlCgkJCWlmICggcmVzcG9uc2VDb250YWluZXIgJiYgalF1ZXJ5LmlzRnVuY3Rp
b24oIHByZXZpb3VzICkgKSB7CgkJCQl3aW5kb3dbIGpzb25wQ2FsbGJhY2sgXSgg
cmVzcG9uc2VDb250YWluZXJbIDAgXSApOwoJCQl9CgkJfSk7CgoJCS8vIFVzZSBk
YXRhIGNvbnZlcnRlciB0byByZXRyaWV2ZSBqc29uIGFmdGVyIHNjcmlwdCBleGVj
dXRpb24KCQlzLmNvbnZlcnRlcnNbInNjcmlwdCBqc29uIl0gPSBmdW5jdGlvbigp
IHsKCQkJaWYgKCAhcmVzcG9uc2VDb250YWluZXIgKSB7CgkJCQlqUXVlcnkuZXJy
b3IoIGpzb25wQ2FsbGJhY2sgKyAiIHdhcyBub3QgY2FsbGVkIiApOwoJCQl9CgkJ
CXJldHVybiByZXNwb25zZUNvbnRhaW5lclsgMCBdOwoJCX07CgoJCS8vIGZvcmNl
IGpzb24gZGF0YVR5cGUKCQlzLmRhdGFUeXBlc1sgMCBdID0gImpzb24iOwoKCQkv
LyBEZWxlZ2F0ZSB0byBzY3JpcHQKCQlyZXR1cm4gInNjcmlwdCI7Cgl9Cn0pOwoK
CgoKLy8gSW5zdGFsbCBzY3JpcHQgZGF0YVR5cGUKalF1ZXJ5LmFqYXhTZXR1cCh7
CglhY2NlcHRzOiB7CgkJc2NyaXB0OiAidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNh
dGlvbi9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNh
dGlvbi94LWVjbWFzY3JpcHQiCgl9LAoJY29udGVudHM6IHsKCQlzY3JpcHQ6IC9q
YXZhc2NyaXB0fGVjbWFzY3JpcHQvCgl9LAoJY29udmVydGVyczogewoJCSJ0ZXh0
IHNjcmlwdCI6IGZ1bmN0aW9uKCB0ZXh0ICkgewoJCQlqUXVlcnkuZ2xvYmFsRXZh
bCggdGV4dCApOwoJCQlyZXR1cm4gdGV4dDsKCQl9Cgl9Cn0pOwoKLy8gSGFuZGxl
IGNhY2hlJ3Mgc3BlY2lhbCBjYXNlIGFuZCBnbG9iYWwKalF1ZXJ5LmFqYXhQcmVm
aWx0ZXIoICJzY3JpcHQiLCBmdW5jdGlvbiggcyApIHsKCWlmICggcy5jYWNoZSA9
PT0gdW5kZWZpbmVkICkgewoJCXMuY2FjaGUgPSBmYWxzZTsKCX0KCWlmICggcy5j
cm9zc0RvbWFpbiApIHsKCQlzLnR5cGUgPSAiR0VUIjsKCQlzLmdsb2JhbCA9IGZh
bHNlOwoJfQp9KTsKCi8vIEJpbmQgc2NyaXB0IHRhZyBoYWNrIHRyYW5zcG9ydApq
UXVlcnkuYWpheFRyYW5zcG9ydCggInNjcmlwdCIsIGZ1bmN0aW9uKHMpIHsKCgkv
LyBUaGlzIHRyYW5zcG9ydCBvbmx5IGRlYWxzIHdpdGggY3Jvc3MgZG9tYWluIHJl
cXVlc3RzCglpZiAoIHMuY3Jvc3NEb21haW4gKSB7CgoJCXZhciBzY3JpcHQsCgkJ
CWhlYWQgPSBkb2N1bWVudC5oZWFkIHx8IGRvY3VtZW50LmdldEVsZW1lbnRzQnlU
YWdOYW1lKCAiaGVhZCIgKVswXSB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7
CgoJCXJldHVybiB7CgoJCQlzZW5kOiBmdW5jdGlvbiggXywgY2FsbGJhY2sgKSB7
CgoJCQkJc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggInNjcmlwdCIg
KTsKCgkJCQlzY3JpcHQuYXN5bmMgPSAiYXN5bmMiOwoKCQkJCWlmICggcy5zY3Jp
cHRDaGFyc2V0ICkgewoJCQkJCXNjcmlwdC5jaGFyc2V0ID0gcy5zY3JpcHRDaGFy
c2V0OwoJCQkJfQoKCQkJCXNjcmlwdC5zcmMgPSBzLnVybDsKCgkJCQkvLyBBdHRh
Y2ggaGFuZGxlcnMgZm9yIGFsbCBicm93c2VycwoJCQkJc2NyaXB0Lm9ubG9hZCA9
IHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiggXywgaXNBYm9y
dCApIHsKCgkJCQkJaWYgKCBpc0Fib3J0IHx8ICFzY3JpcHQucmVhZHlTdGF0ZSB8
fCAvbG9hZGVkfGNvbXBsZXRlLy50ZXN0KCBzY3JpcHQucmVhZHlTdGF0ZSApICkg
ewoKCQkJCQkJLy8gSGFuZGxlIG1lbW9yeSBsZWFrIGluIElFCgkJCQkJCXNjcmlw
dC5vbmxvYWQgPSBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gbnVsbDsKCgkJ
CQkJCS8vIFJlbW92ZSB0aGUgc2NyaXB0CgkJCQkJCWlmICggaGVhZCAmJiBzY3Jp
cHQucGFyZW50Tm9kZSApIHsKCQkJCQkJCWhlYWQucmVtb3ZlQ2hpbGQoIHNjcmlw
dCApOwoJCQkJCQl9CgoJCQkJCQkvLyBEZXJlZmVyZW5jZSB0aGUgc2NyaXB0CgkJ
CQkJCXNjcmlwdCA9IHVuZGVmaW5lZDsKCgkJCQkJCS8vIENhbGxiYWNrIGlmIG5v
dCBhYm9ydAoJCQkJCQlpZiAoICFpc0Fib3J0ICkgewoJCQkJCQkJY2FsbGJhY2so
IDIwMCwgInN1Y2Nlc3MiICk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9OwoJCQkJLy8g
VXNlIGluc2VydEJlZm9yZSBpbnN0ZWFkIG9mIGFwcGVuZENoaWxkICB0byBjaXJj
dW12ZW50IGFuIElFNiBidWcuCgkJCQkvLyBUaGlzIGFyaXNlcyB3aGVuIGEgYmFz
ZSBub2RlIGlzIHVzZWQgKCMyNzA5IGFuZCAjNDM3OCkuCgkJCQloZWFkLmluc2Vy
dEJlZm9yZSggc2NyaXB0LCBoZWFkLmZpcnN0Q2hpbGQgKTsKCQkJfSwKCgkJCWFi
b3J0OiBmdW5jdGlvbigpIHsKCQkJCWlmICggc2NyaXB0ICkgewoJCQkJCXNjcmlw
dC5vbmxvYWQoIDAsIDEgKTsKCQkJCX0KCQkJfQoJCX07Cgl9Cn0pOwoKCgoKdmFy
IC8vICM1MjgwOiBJbnRlcm5ldCBFeHBsb3JlciB3aWxsIGtlZXAgY29ubmVjdGlv
bnMgYWxpdmUgaWYgd2UgZG9uJ3QgYWJvcnQgb24gdW5sb2FkCgl4aHJPblVubG9h
ZEFib3J0ID0gd2luZG93LkFjdGl2ZVhPYmplY3QgPyBmdW5jdGlvbigpIHsKCQkv
LyBBYm9ydCBhbGwgcGVuZGluZyByZXF1ZXN0cwoJCWZvciAoIHZhciBrZXkgaW4g
eGhyQ2FsbGJhY2tzICkgewoJCQl4aHJDYWxsYmFja3NbIGtleSBdKCAwLCAxICk7
CgkJfQoJfSA6IGZhbHNlLAoJeGhySWQgPSAwLAoJeGhyQ2FsbGJhY2tzOwoKLy8g
RnVuY3Rpb25zIHRvIGNyZWF0ZSB4aHJzCmZ1bmN0aW9uIGNyZWF0ZVN0YW5kYXJk
WEhSKCkgewoJdHJ5IHsKCQlyZXR1cm4gbmV3IHdpbmRvdy5YTUxIdHRwUmVxdWVz
dCgpOwoJfSBjYXRjaCggZSApIHt9Cn0KCmZ1bmN0aW9uIGNyZWF0ZUFjdGl2ZVhI
UigpIHsKCXRyeSB7CgkJcmV0dXJuIG5ldyB3aW5kb3cuQWN0aXZlWE9iamVjdCgg
Ik1pY3Jvc29mdC5YTUxIVFRQIiApOwoJfSBjYXRjaCggZSApIHt9Cn0KCi8vIENy
ZWF0ZSB0aGUgcmVxdWVzdCBvYmplY3QKLy8gKFRoaXMgaXMgc3RpbGwgYXR0YWNo
ZWQgdG8gYWpheFNldHRpbmdzIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5KQpq
UXVlcnkuYWpheFNldHRpbmdzLnhociA9IHdpbmRvdy5BY3RpdmVYT2JqZWN0ID8K
CS8qIE1pY3Jvc29mdCBmYWlsZWQgdG8gcHJvcGVybHkKCSAqIGltcGxlbWVudCB0
aGUgWE1MSHR0cFJlcXVlc3QgaW4gSUU3IChjYW4ndCByZXF1ZXN0IGxvY2FsIGZp
bGVzKSwKCSAqIHNvIHdlIHVzZSB0aGUgQWN0aXZlWE9iamVjdCB3aGVuIGl0IGlz
IGF2YWlsYWJsZQoJICogQWRkaXRpb25hbGx5IFhNTEh0dHBSZXF1ZXN0IGNhbiBi
ZSBkaXNhYmxlZCBpbiBJRTcvSUU4IHNvCgkgKiB3ZSBuZWVkIGEgZmFsbGJhY2su
CgkgKi8KCWZ1bmN0aW9uKCkgewoJCXJldHVybiAhdGhpcy5pc0xvY2FsICYmIGNy
ZWF0ZVN0YW5kYXJkWEhSKCkgfHwgY3JlYXRlQWN0aXZlWEhSKCk7Cgl9IDoKCS8v
IEZvciBhbGwgb3RoZXIgYnJvd3NlcnMsIHVzZSB0aGUgc3RhbmRhcmQgWE1MSHR0
cFJlcXVlc3Qgb2JqZWN0CgljcmVhdGVTdGFuZGFyZFhIUjsKCi8vIERldGVybWlu
ZSBzdXBwb3J0IHByb3BlcnRpZXMKKGZ1bmN0aW9uKCB4aHIgKSB7CglqUXVlcnku
ZXh0ZW5kKCBqUXVlcnkuc3VwcG9ydCwgewoJCWFqYXg6ICEheGhyLAoJCWNvcnM6
ICEheGhyICYmICggIndpdGhDcmVkZW50aWFscyIgaW4geGhyICkKCX0pOwp9KSgg
alF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIoKSApOwoKLy8gQ3JlYXRlIHRyYW5zcG9y
dCBpZiB0aGUgYnJvd3NlciBjYW4gcHJvdmlkZSBhbiB4aHIKaWYgKCBqUXVlcnku
c3VwcG9ydC5hamF4ICkgewoKCWpRdWVyeS5hamF4VHJhbnNwb3J0KGZ1bmN0aW9u
KCBzICkgewoJCS8vIENyb3NzIGRvbWFpbiBvbmx5IGFsbG93ZWQgaWYgc3VwcG9y
dGVkIHRocm91Z2ggWE1MSHR0cFJlcXVlc3QKCQlpZiAoICFzLmNyb3NzRG9tYWlu
IHx8IGpRdWVyeS5zdXBwb3J0LmNvcnMgKSB7CgoJCQl2YXIgY2FsbGJhY2s7CgoJ
CQlyZXR1cm4gewoJCQkJc2VuZDogZnVuY3Rpb24oIGhlYWRlcnMsIGNvbXBsZXRl
ICkgewoKCQkJCQkvLyBHZXQgYSBuZXcgeGhyCgkJCQkJdmFyIHhociA9IHMueGhy
KCksCgkJCQkJCWhhbmRsZSwKCQkJCQkJaTsKCgkJCQkJLy8gT3BlbiB0aGUgc29j
a2V0CgkJCQkJLy8gUGFzc2luZyBudWxsIHVzZXJuYW1lLCBnZW5lcmF0ZXMgYSBs
b2dpbiBwb3B1cCBvbiBPcGVyYSAoIzI4NjUpCgkJCQkJaWYgKCBzLnVzZXJuYW1l
ICkgewoJCQkJCQl4aHIub3Blbiggcy50eXBlLCBzLnVybCwgcy5hc3luYywgcy51
c2VybmFtZSwgcy5wYXNzd29yZCApOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXhoci5v
cGVuKCBzLnR5cGUsIHMudXJsLCBzLmFzeW5jICk7CgkJCQkJfQoKCQkJCQkvLyBB
cHBseSBjdXN0b20gZmllbGRzIGlmIHByb3ZpZGVkCgkJCQkJaWYgKCBzLnhockZp
ZWxkcyApIHsKCQkJCQkJZm9yICggaSBpbiBzLnhockZpZWxkcyApIHsKCQkJCQkJ
CXhoclsgaSBdID0gcy54aHJGaWVsZHNbIGkgXTsKCQkJCQkJfQoJCQkJCX0KCgkJ
CQkJLy8gT3ZlcnJpZGUgbWltZSB0eXBlIGlmIG5lZWRlZAoJCQkJCWlmICggcy5t
aW1lVHlwZSAmJiB4aHIub3ZlcnJpZGVNaW1lVHlwZSApIHsKCQkJCQkJeGhyLm92
ZXJyaWRlTWltZVR5cGUoIHMubWltZVR5cGUgKTsKCQkJCQl9CgoJCQkJCS8vIFgt
UmVxdWVzdGVkLVdpdGggaGVhZGVyCgkJCQkJLy8gRm9yIGNyb3NzLWRvbWFpbiBy
ZXF1ZXN0cywgc2VlaW5nIGFzIGNvbmRpdGlvbnMgZm9yIGEgcHJlZmxpZ2h0IGFy
ZQoJCQkJCS8vIGFraW4gdG8gYSBqaWdzYXcgcHV6emxlLCB3ZSBzaW1wbHkgbmV2
ZXIgc2V0IGl0IHRvIGJlIHN1cmUuCgkJCQkJLy8gKGl0IGNhbiBhbHdheXMgYmUg
c2V0IG9uIGEgcGVyLXJlcXVlc3QgYmFzaXMgb3IgZXZlbiB1c2luZyBhamF4U2V0
dXApCgkJCQkJLy8gRm9yIHNhbWUtZG9tYWluIHJlcXVlc3RzLCB3b24ndCBjaGFu
Z2UgaGVhZGVyIGlmIGFscmVhZHkgcHJvdmlkZWQuCgkJCQkJaWYgKCAhcy5jcm9z
c0RvbWFpbiAmJiAhaGVhZGVyc1siWC1SZXF1ZXN0ZWQtV2l0aCJdICkgewoJCQkJ
CQloZWFkZXJzWyAiWC1SZXF1ZXN0ZWQtV2l0aCIgXSA9ICJYTUxIdHRwUmVxdWVz
dCI7CgkJCQkJfQoKCQkJCQkvLyBOZWVkIGFuIGV4dHJhIHRyeS9jYXRjaCBmb3Ig
Y3Jvc3MgZG9tYWluIHJlcXVlc3RzIGluIEZpcmVmb3ggMwoJCQkJCXRyeSB7CgkJ
CQkJCWZvciAoIGkgaW4gaGVhZGVycyApIHsKCQkJCQkJCXhoci5zZXRSZXF1ZXN0
SGVhZGVyKCBpLCBoZWFkZXJzWyBpIF0gKTsKCQkJCQkJfQoJCQkJCX0gY2F0Y2go
IF8gKSB7fQoKCQkJCQkvLyBEbyBzZW5kIHRoZSByZXF1ZXN0CgkJCQkJLy8gVGhp
cyBtYXkgcmFpc2UgYW4gZXhjZXB0aW9uIHdoaWNoIGlzIGFjdHVhbGx5CgkJCQkJ
Ly8gaGFuZGxlZCBpbiBqUXVlcnkuYWpheCAoc28gbm8gdHJ5L2NhdGNoIGhlcmUp
CgkJCQkJeGhyLnNlbmQoICggcy5oYXNDb250ZW50ICYmIHMuZGF0YSApIHx8IG51
bGwgKTsKCgkJCQkJLy8gTGlzdGVuZXIKCQkJCQljYWxsYmFjayA9IGZ1bmN0aW9u
KCBfLCBpc0Fib3J0ICkgewoKCQkJCQkJdmFyIHN0YXR1cywKCQkJCQkJCXN0YXR1
c1RleHQsCgkJCQkJCQlyZXNwb25zZUhlYWRlcnMsCgkJCQkJCQlyZXNwb25zZXMs
CgkJCQkJCQl4bWw7CgoJCQkJCQkvLyBGaXJlZm94IHRocm93cyBleGNlcHRpb25z
IHdoZW4gYWNjZXNzaW5nIHByb3BlcnRpZXMKCQkJCQkJLy8gb2YgYW4geGhyIHdo
ZW4gYSBuZXR3b3JrIGVycm9yIG9jY3VyZWQKCQkJCQkJLy8gaHR0cDovL2hlbHBm
dWwua25vYnMtZGlhbHMuY29tL2luZGV4LnBocC9Db21wb25lbnRfcmV0dXJuZWRf
ZmFpbHVyZV9jb2RlOl8weDgwMDQwMTExXyhOU19FUlJPUl9OT1RfQVZBSUxBQkxF
KQoJCQkJCQl0cnkgewoKCQkJCQkJCS8vIFdhcyBuZXZlciBjYWxsZWQgYW5kIGlz
IGFib3J0ZWQgb3IgY29tcGxldGUKCQkJCQkJCWlmICggY2FsbGJhY2sgJiYgKCBp
c0Fib3J0IHx8IHhoci5yZWFkeVN0YXRlID09PSA0ICkgKSB7CgoJCQkJCQkJCS8v
IE9ubHkgY2FsbGVkIG9uY2UKCQkJCQkJCQljYWxsYmFjayA9IHVuZGVmaW5lZDsK
CgkJCQkJCQkJLy8gRG8gbm90IGtlZXAgYXMgYWN0aXZlIGFueW1vcmUKCQkJCQkJ
CQlpZiAoIGhhbmRsZSApIHsKCQkJCQkJCQkJeGhyLm9ucmVhZHlzdGF0ZWNoYW5n
ZSA9IGpRdWVyeS5ub29wOwoJCQkJCQkJCQlpZiAoIHhock9uVW5sb2FkQWJvcnQg
KSB7CgkJCQkJCQkJCQlkZWxldGUgeGhyQ2FsbGJhY2tzWyBoYW5kbGUgXTsKCQkJ
CQkJCQkJfQoJCQkJCQkJCX0KCgkJCQkJCQkJLy8gSWYgaXQncyBhbiBhYm9ydAoJ
CQkJCQkJCWlmICggaXNBYm9ydCApIHsKCQkJCQkJCQkJLy8gQWJvcnQgaXQgbWFu
dWFsbHkgaWYgbmVlZGVkCgkJCQkJCQkJCWlmICggeGhyLnJlYWR5U3RhdGUgIT09
IDQgKSB7CgkJCQkJCQkJCQl4aHIuYWJvcnQoKTsKCQkJCQkJCQkJfQoJCQkJCQkJ
CX0gZWxzZSB7CgkJCQkJCQkJCXN0YXR1cyA9IHhoci5zdGF0dXM7CgkJCQkJCQkJ
CXJlc3BvbnNlSGVhZGVycyA9IHhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKTsK
CQkJCQkJCQkJcmVzcG9uc2VzID0ge307CgkJCQkJCQkJCXhtbCA9IHhoci5yZXNw
b25zZVhNTDsKCgkJCQkJCQkJCS8vIENvbnN0cnVjdCByZXNwb25zZSBsaXN0CgkJ
CQkJCQkJCWlmICggeG1sICYmIHhtbC5kb2N1bWVudEVsZW1lbnQgLyogIzQ5NTgg
Ki8gKSB7CgkJCQkJCQkJCQlyZXNwb25zZXMueG1sID0geG1sOwoJCQkJCQkJCQl9
CgoJCQkJCQkJCQkvLyBXaGVuIHJlcXVlc3RpbmcgYmluYXJ5IGRhdGEsIElFNi05
IHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uCgkJCQkJCQkJCS8vIG9uIGFueSBhdHRl
bXB0IHRvIGFjY2VzcyByZXNwb25zZVRleHQgKCMxMTQyNikKCQkJCQkJCQkJdHJ5
IHsKCQkJCQkJCQkJCXJlc3BvbnNlcy50ZXh0ID0geGhyLnJlc3BvbnNlVGV4dDsK
CQkJCQkJCQkJfSBjYXRjaCggXyApIHsKCQkJCQkJCQkJfQoKCQkJCQkJCQkJLy8g
RmlyZWZveCB0aHJvd3MgYW4gZXhjZXB0aW9uIHdoZW4gYWNjZXNzaW5nCgkJCQkJ
CQkJCS8vIHN0YXR1c1RleHQgZm9yIGZhdWx0eSBjcm9zcy1kb21haW4gcmVxdWVz
dHMKCQkJCQkJCQkJdHJ5IHsKCQkJCQkJCQkJCXN0YXR1c1RleHQgPSB4aHIuc3Rh
dHVzVGV4dDsKCQkJCQkJCQkJfSBjYXRjaCggZSApIHsKCQkJCQkJCQkJCS8vIFdl
IG5vcm1hbGl6ZSB3aXRoIFdlYmtpdCBnaXZpbmcgYW4gZW1wdHkgc3RhdHVzVGV4
dAoJCQkJCQkJCQkJc3RhdHVzVGV4dCA9ICIiOwoJCQkJCQkJCQl9CgoJCQkJCQkJ
CQkvLyBGaWx0ZXIgc3RhdHVzIGZvciBub24gc3RhbmRhcmQgYmVoYXZpb3JzCgoJ
CQkJCQkJCQkvLyBJZiB0aGUgcmVxdWVzdCBpcyBsb2NhbCBhbmQgd2UgaGF2ZSBk
YXRhOiBhc3N1bWUgYSBzdWNjZXNzCgkJCQkJCQkJCS8vIChzdWNjZXNzIHdpdGgg
bm8gZGF0YSB3b24ndCBnZXQgbm90aWZpZWQsIHRoYXQncyB0aGUgYmVzdCB3ZQoJ
CQkJCQkJCQkvLyBjYW4gZG8gZ2l2ZW4gY3VycmVudCBpbXBsZW1lbnRhdGlvbnMp
CgkJCQkJCQkJCWlmICggIXN0YXR1cyAmJiBzLmlzTG9jYWwgJiYgIXMuY3Jvc3NE
b21haW4gKSB7CgkJCQkJCQkJCQlzdGF0dXMgPSByZXNwb25zZXMudGV4dCA/IDIw
MCA6IDQwNDsKCQkJCQkJCQkJLy8gSUUgLSAjMTQ1MDogc29tZXRpbWVzIHJldHVy
bnMgMTIyMyB3aGVuIGl0IHNob3VsZCBiZSAyMDQKCQkJCQkJCQkJfSBlbHNlIGlm
ICggc3RhdHVzID09PSAxMjIzICkgewoJCQkJCQkJCQkJc3RhdHVzID0gMjA0OwoJ
CQkJCQkJCQl9CgkJCQkJCQkJfQoJCQkJCQkJfQoJCQkJCQl9IGNhdGNoKCBmaXJl
Zm94QWNjZXNzRXhjZXB0aW9uICkgewoJCQkJCQkJaWYgKCAhaXNBYm9ydCApIHsK
CQkJCQkJCQljb21wbGV0ZSggLTEsIGZpcmVmb3hBY2Nlc3NFeGNlcHRpb24gKTsK
CQkJCQkJCX0KCQkJCQkJfQoKCQkJCQkJLy8gQ2FsbCBjb21wbGV0ZSBpZiBuZWVk
ZWQKCQkJCQkJaWYgKCByZXNwb25zZXMgKSB7CgkJCQkJCQljb21wbGV0ZSggc3Rh
dHVzLCBzdGF0dXNUZXh0LCByZXNwb25zZXMsIHJlc3BvbnNlSGVhZGVycyApOwoJ
CQkJCQl9CgkJCQkJfTsKCgkJCQkJLy8gaWYgd2UncmUgaW4gc3luYyBtb2RlIG9y
IGl0J3MgaW4gY2FjaGUKCQkJCQkvLyBhbmQgaGFzIGJlZW4gcmV0cmlldmVkIGRp
cmVjdGx5IChJRTYgJiBJRTcpCgkJCQkJLy8gd2UgbmVlZCB0byBtYW51YWxseSBm
aXJlIHRoZSBjYWxsYmFjawoJCQkJCWlmICggIXMuYXN5bmMgfHwgeGhyLnJlYWR5
U3RhdGUgPT09IDQgKSB7CgkJCQkJCWNhbGxiYWNrKCk7CgkJCQkJfSBlbHNlIHsK
CQkJCQkJaGFuZGxlID0gKyt4aHJJZDsKCQkJCQkJaWYgKCB4aHJPblVubG9hZEFi
b3J0ICkgewoJCQkJCQkJLy8gQ3JlYXRlIHRoZSBhY3RpdmUgeGhycyBjYWxsYmFj
a3MgbGlzdCBpZiBuZWVkZWQKCQkJCQkJCS8vIGFuZCBhdHRhY2ggdGhlIHVubG9h
ZCBoYW5kbGVyCgkJCQkJCQlpZiAoICF4aHJDYWxsYmFja3MgKSB7CgkJCQkJCQkJ
eGhyQ2FsbGJhY2tzID0ge307CgkJCQkJCQkJalF1ZXJ5KCB3aW5kb3cgKS51bmxv
YWQoIHhock9uVW5sb2FkQWJvcnQgKTsKCQkJCQkJCX0KCQkJCQkJCS8vIEFkZCB0
byBsaXN0IG9mIGFjdGl2ZSB4aHJzIGNhbGxiYWNrcwoJCQkJCQkJeGhyQ2FsbGJh
Y2tzWyBoYW5kbGUgXSA9IGNhbGxiYWNrOwoJCQkJCQl9CgkJCQkJCXhoci5vbnJl
YWR5c3RhdGVjaGFuZ2UgPSBjYWxsYmFjazsKCQkJCQl9CgkJCQl9LAoKCQkJCWFi
b3J0OiBmdW5jdGlvbigpIHsKCQkJCQlpZiAoIGNhbGxiYWNrICkgewoJCQkJCQlj
YWxsYmFjaygwLDEpOwoJCQkJCX0KCQkJCX0KCQkJfTsKCQl9Cgl9KTsKfQoKCgoK
dmFyIGVsZW1kaXNwbGF5ID0ge30sCglpZnJhbWUsIGlmcmFtZURvYywKCXJmeHR5
cGVzID0gL14oPzp0b2dnbGV8c2hvd3xoaWRlKSQvLAoJcmZ4bnVtID0gL14oWytc
LV09KT8oW1xkKy5cLV0rKShbYS16JV0qKSQvaSwKCXRpbWVySWQsCglmeEF0dHJz
ID0gWwoJCS8vIGhlaWdodCBhbmltYXRpb25zCgkJWyAiaGVpZ2h0IiwgIm1hcmdp
blRvcCIsICJtYXJnaW5Cb3R0b20iLCAicGFkZGluZ1RvcCIsICJwYWRkaW5nQm90
dG9tIiBdLAoJCS8vIHdpZHRoIGFuaW1hdGlvbnMKCQlbICJ3aWR0aCIsICJtYXJn
aW5MZWZ0IiwgIm1hcmdpblJpZ2h0IiwgInBhZGRpbmdMZWZ0IiwgInBhZGRpbmdS
aWdodCIgXSwKCQkvLyBvcGFjaXR5IGFuaW1hdGlvbnMKCQlbICJvcGFjaXR5IiBd
CgldLAoJZnhOb3c7CgpqUXVlcnkuZm4uZXh0ZW5kKHsKCXNob3c6IGZ1bmN0aW9u
KCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHsKCQl2YXIgZWxlbSwgZGlzcGxh
eTsKCgkJaWYgKCBzcGVlZCB8fCBzcGVlZCA9PT0gMCApIHsKCQkJcmV0dXJuIHRo
aXMuYW5pbWF0ZSggZ2VuRngoInNob3ciLCAzKSwgc3BlZWQsIGVhc2luZywgY2Fs
bGJhY2sgKTsKCgkJfSBlbHNlIHsKCQkJZm9yICggdmFyIGkgPSAwLCBqID0gdGhp
cy5sZW5ndGg7IGkgPCBqOyBpKysgKSB7CgkJCQllbGVtID0gdGhpc1sgaSBdOwoK
CQkJCWlmICggZWxlbS5zdHlsZSApIHsKCQkJCQlkaXNwbGF5ID0gZWxlbS5zdHls
ZS5kaXNwbGF5OwoKCQkJCQkvLyBSZXNldCB0aGUgaW5saW5lIGRpc3BsYXkgb2Yg
dGhpcyBlbGVtZW50IHRvIGxlYXJuIGlmIGl0IGlzCgkJCQkJLy8gYmVpbmcgaGlk
ZGVuIGJ5IGNhc2NhZGVkIHJ1bGVzIG9yIG5vdAoJCQkJCWlmICggIWpRdWVyeS5f
ZGF0YShlbGVtLCAib2xkZGlzcGxheSIpICYmIGRpc3BsYXkgPT09ICJub25lIiAp
IHsKCQkJCQkJZGlzcGxheSA9IGVsZW0uc3R5bGUuZGlzcGxheSA9ICIiOwoJCQkJ
CX0KCgkJCQkJLy8gU2V0IGVsZW1lbnRzIHdoaWNoIGhhdmUgYmVlbiBvdmVycmlk
ZGVuIHdpdGggZGlzcGxheTogbm9uZQoJCQkJCS8vIGluIGEgc3R5bGVzaGVldCB0
byB3aGF0ZXZlciB0aGUgZGVmYXVsdCBicm93c2VyIHN0eWxlIGlzCgkJCQkJLy8g
Zm9yIHN1Y2ggYW4gZWxlbWVudAoJCQkJCWlmICggKGRpc3BsYXkgPT09ICIiICYm
IGpRdWVyeS5jc3MoZWxlbSwgImRpc3BsYXkiKSA9PT0gIm5vbmUiKSB8fAoJCQkJ
CQkhalF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRF
bGVtZW50LCBlbGVtICkgKSB7CgkJCQkJCWpRdWVyeS5fZGF0YSggZWxlbSwgIm9s
ZGRpc3BsYXkiLCBkZWZhdWx0RGlzcGxheShlbGVtLm5vZGVOYW1lKSApOwoJCQkJ
CX0KCQkJCX0KCQkJfQoKCQkJLy8gU2V0IHRoZSBkaXNwbGF5IG9mIG1vc3Qgb2Yg
dGhlIGVsZW1lbnRzIGluIGEgc2Vjb25kIGxvb3AKCQkJLy8gdG8gYXZvaWQgdGhl
IGNvbnN0YW50IHJlZmxvdwoJCQlmb3IgKCBpID0gMDsgaSA8IGo7IGkrKyApIHsK
CQkJCWVsZW0gPSB0aGlzWyBpIF07CgoJCQkJaWYgKCBlbGVtLnN0eWxlICkgewoJ
CQkJCWRpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXk7CgoJCQkJCWlmICggZGlz
cGxheSA9PT0gIiIgfHwgZGlzcGxheSA9PT0gIm5vbmUiICkgewoJCQkJCQllbGVt
LnN0eWxlLmRpc3BsYXkgPSBqUXVlcnkuX2RhdGEoIGVsZW0sICJvbGRkaXNwbGF5
IiApIHx8ICIiOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJcmV0dXJuIHRoaXM7CgkJ
fQoJfSwKCgloaWRlOiBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sg
KSB7CgkJaWYgKCBzcGVlZCB8fCBzcGVlZCA9PT0gMCApIHsKCQkJcmV0dXJuIHRo
aXMuYW5pbWF0ZSggZ2VuRngoImhpZGUiLCAzKSwgc3BlZWQsIGVhc2luZywgY2Fs
bGJhY2spOwoKCQl9IGVsc2UgewoJCQl2YXIgZWxlbSwgZGlzcGxheSwKCQkJCWkg
PSAwLAoJCQkJaiA9IHRoaXMubGVuZ3RoOwoKCQkJZm9yICggOyBpIDwgajsgaSsr
ICkgewoJCQkJZWxlbSA9IHRoaXNbaV07CgkJCQlpZiAoIGVsZW0uc3R5bGUgKSB7
CgkJCQkJZGlzcGxheSA9IGpRdWVyeS5jc3MoIGVsZW0sICJkaXNwbGF5IiApOwoK
CQkJCQlpZiAoIGRpc3BsYXkgIT09ICJub25lIiAmJiAhalF1ZXJ5Ll9kYXRhKCBl
bGVtLCAib2xkZGlzcGxheSIgKSApIHsKCQkJCQkJalF1ZXJ5Ll9kYXRhKCBlbGVt
LCAib2xkZGlzcGxheSIsIGRpc3BsYXkgKTsKCQkJCQl9CgkJCQl9CgkJCX0KCgkJ
CS8vIFNldCB0aGUgZGlzcGxheSBvZiB0aGUgZWxlbWVudHMgaW4gYSBzZWNvbmQg
bG9vcAoJCQkvLyB0byBhdm9pZCB0aGUgY29uc3RhbnQgcmVmbG93CgkJCWZvciAo
IGkgPSAwOyBpIDwgajsgaSsrICkgewoJCQkJaWYgKCB0aGlzW2ldLnN0eWxlICkg
ewoJCQkJCXRoaXNbaV0uc3R5bGUuZGlzcGxheSA9ICJub25lIjsKCQkJCX0KCQkJ
fQoKCQkJcmV0dXJuIHRoaXM7CgkJfQoJfSwKCgkvLyBTYXZlIHRoZSBvbGQgdG9n
Z2xlIGZ1bmN0aW9uCglfdG9nZ2xlOiBqUXVlcnkuZm4udG9nZ2xlLAoKCXRvZ2ds
ZTogZnVuY3Rpb24oIGZuLCBmbjIsIGNhbGxiYWNrICkgewoJCXZhciBib29sID0g
dHlwZW9mIGZuID09PSAiYm9vbGVhbiI7CgoJCWlmICggalF1ZXJ5LmlzRnVuY3Rp
b24oZm4pICYmIGpRdWVyeS5pc0Z1bmN0aW9uKGZuMikgKSB7CgkJCXRoaXMuX3Rv
Z2dsZS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgoJCX0gZWxzZSBpZiAoIGZu
ID09IG51bGwgfHwgYm9vbCApIHsKCQkJdGhpcy5lYWNoKGZ1bmN0aW9uKCkgewoJ
CQkJdmFyIHN0YXRlID0gYm9vbCA/IGZuIDogalF1ZXJ5KHRoaXMpLmlzKCI6aGlk
ZGVuIik7CgkJCQlqUXVlcnkodGhpcylbIHN0YXRlID8gInNob3ciIDogImhpZGUi
IF0oKTsKCQkJfSk7CgoJCX0gZWxzZSB7CgkJCXRoaXMuYW5pbWF0ZShnZW5GeCgi
dG9nZ2xlIiwgMyksIGZuLCBmbjIsIGNhbGxiYWNrKTsKCQl9CgoJCXJldHVybiB0
aGlzOwoJfSwKCglmYWRlVG86IGZ1bmN0aW9uKCBzcGVlZCwgdG8sIGVhc2luZywg
Y2FsbGJhY2sgKSB7CgkJcmV0dXJuIHRoaXMuZmlsdGVyKCI6aGlkZGVuIikuY3Nz
KCJvcGFjaXR5IiwgMCkuc2hvdygpLmVuZCgpCgkJCQkJLmFuaW1hdGUoe29wYWNp
dHk6IHRvfSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2spOwoJfSwKCglhbmltYXRl
OiBmdW5jdGlvbiggcHJvcCwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7CgkJ
dmFyIG9wdGFsbCA9IGpRdWVyeS5zcGVlZCggc3BlZWQsIGVhc2luZywgY2FsbGJh
Y2sgKTsKCgkJaWYgKCBqUXVlcnkuaXNFbXB0eU9iamVjdCggcHJvcCApICkgewoJ
CQlyZXR1cm4gdGhpcy5lYWNoKCBvcHRhbGwuY29tcGxldGUsIFsgZmFsc2UgXSAp
OwoJCX0KCgkJLy8gRG8gbm90IGNoYW5nZSByZWZlcmVuY2VkIHByb3BlcnRpZXMg
YXMgcGVyLXByb3BlcnR5IGVhc2luZyB3aWxsIGJlIGxvc3QKCQlwcm9wID0galF1
ZXJ5LmV4dGVuZCgge30sIHByb3AgKTsKCgkJZnVuY3Rpb24gZG9BbmltYXRpb24o
KSB7CgkJCS8vIFhYWCAndGhpcycgZG9lcyBub3QgYWx3YXlzIGhhdmUgYSBub2Rl
TmFtZSB3aGVuIHJ1bm5pbmcgdGhlCgkJCS8vIHRlc3Qgc3VpdGUKCgkJCWlmICgg
b3B0YWxsLnF1ZXVlID09PSBmYWxzZSApIHsKCQkJCWpRdWVyeS5fbWFyayggdGhp
cyApOwoJCQl9CgoJCQl2YXIgb3B0ID0galF1ZXJ5LmV4dGVuZCgge30sIG9wdGFs
bCApLAoJCQkJaXNFbGVtZW50ID0gdGhpcy5ub2RlVHlwZSA9PT0gMSwKCQkJCWhp
ZGRlbiA9IGlzRWxlbWVudCAmJiBqUXVlcnkodGhpcykuaXMoIjpoaWRkZW4iKSwK
CQkJCW5hbWUsIHZhbCwgcCwgZSwgaG9va3MsIHJlcGxhY2UsCgkJCQlwYXJ0cywg
c3RhcnQsIGVuZCwgdW5pdCwKCQkJCW1ldGhvZDsKCgkJCS8vIHdpbGwgc3RvcmUg
cGVyIHByb3BlcnR5IGVhc2luZyBhbmQgYmUgdXNlZCB0byBkZXRlcm1pbmUgd2hl
biBhbiBhbmltYXRpb24gaXMgY29tcGxldGUKCQkJb3B0LmFuaW1hdGVkUHJvcGVy
dGllcyA9IHt9OwoKCQkJLy8gZmlyc3QgcGFzcyBvdmVyIHByb3BlcnR5cyB0byBl
eHBhbmQgLyBub3JtYWxpemUKCQkJZm9yICggcCBpbiBwcm9wICkgewoJCQkJbmFt
ZSA9IGpRdWVyeS5jYW1lbENhc2UoIHAgKTsKCQkJCWlmICggcCAhPT0gbmFtZSAp
IHsKCQkJCQlwcm9wWyBuYW1lIF0gPSBwcm9wWyBwIF07CgkJCQkJZGVsZXRlIHBy
b3BbIHAgXTsKCQkJCX0KCgkJCQlpZiAoICggaG9va3MgPSBqUXVlcnkuY3NzSG9v
a3NbIG5hbWUgXSApICYmICJleHBhbmQiIGluIGhvb2tzICkgewoJCQkJCXJlcGxh
Y2UgPSBob29rcy5leHBhbmQoIHByb3BbIG5hbWUgXSApOwoJCQkJCWRlbGV0ZSBw
cm9wWyBuYW1lIF07CgoJCQkJCS8vIG5vdCBxdWl0ZSAkLmV4dGVuZCwgdGhpcyB3
b250IG92ZXJ3cml0ZSBrZXlzIGFscmVhZHkgcHJlc2VudC4KCQkJCQkvLyBhbHNv
IC0gcmV1c2luZyAncCcgZnJvbSBhYm92ZSBiZWNhdXNlIHdlIGhhdmUgdGhlIGNv
cnJlY3QgIm5hbWUiCgkJCQkJZm9yICggcCBpbiByZXBsYWNlICkgewoJCQkJCQlp
ZiAoICEgKCBwIGluIHByb3AgKSApIHsKCQkJCQkJCXByb3BbIHAgXSA9IHJlcGxh
Y2VbIHAgXTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJZm9yICggbmFt
ZSBpbiBwcm9wICkgewoJCQkJdmFsID0gcHJvcFsgbmFtZSBdOwoJCQkJLy8gZWFz
aW5nIHJlc29sdXRpb246IHBlciBwcm9wZXJ0eSA+IG9wdC5zcGVjaWFsRWFzaW5n
ID4gb3B0LmVhc2luZyA+ICdzd2luZycgKGRlZmF1bHQpCgkJCQlpZiAoIGpRdWVy
eS5pc0FycmF5KCB2YWwgKSApIHsKCQkJCQlvcHQuYW5pbWF0ZWRQcm9wZXJ0aWVz
WyBuYW1lIF0gPSB2YWxbIDEgXTsKCQkJCQl2YWwgPSBwcm9wWyBuYW1lIF0gPSB2
YWxbIDAgXTsKCQkJCX0gZWxzZSB7CgkJCQkJb3B0LmFuaW1hdGVkUHJvcGVydGll
c1sgbmFtZSBdID0gb3B0LnNwZWNpYWxFYXNpbmcgJiYgb3B0LnNwZWNpYWxFYXNp
bmdbIG5hbWUgXSB8fCBvcHQuZWFzaW5nIHx8ICdzd2luZyc7CgkJCQl9CgoJCQkJ
aWYgKCB2YWwgPT09ICJoaWRlIiAmJiBoaWRkZW4gfHwgdmFsID09PSAic2hvdyIg
JiYgIWhpZGRlbiApIHsKCQkJCQlyZXR1cm4gb3B0LmNvbXBsZXRlLmNhbGwoIHRo
aXMgKTsKCQkJCX0KCgkJCQlpZiAoIGlzRWxlbWVudCAmJiAoIG5hbWUgPT09ICJo
ZWlnaHQiIHx8IG5hbWUgPT09ICJ3aWR0aCIgKSApIHsKCQkJCQkvLyBNYWtlIHN1
cmUgdGhhdCBub3RoaW5nIHNuZWFrcyBvdXQKCQkJCQkvLyBSZWNvcmQgYWxsIDMg
b3ZlcmZsb3cgYXR0cmlidXRlcyBiZWNhdXNlIElFIGRvZXMgbm90CgkJCQkJLy8g
Y2hhbmdlIHRoZSBvdmVyZmxvdyBhdHRyaWJ1dGUgd2hlbiBvdmVyZmxvd1ggYW5k
CgkJCQkJLy8gb3ZlcmZsb3dZIGFyZSBzZXQgdG8gdGhlIHNhbWUgdmFsdWUKCQkJ
CQlvcHQub3ZlcmZsb3cgPSBbIHRoaXMuc3R5bGUub3ZlcmZsb3csIHRoaXMuc3R5
bGUub3ZlcmZsb3dYLCB0aGlzLnN0eWxlLm92ZXJmbG93WSBdOwoKCQkJCQkvLyBT
ZXQgZGlzcGxheSBwcm9wZXJ0eSB0byBpbmxpbmUtYmxvY2sgZm9yIGhlaWdodC93
aWR0aAoJCQkJCS8vIGFuaW1hdGlvbnMgb24gaW5saW5lIGVsZW1lbnRzIHRoYXQg
YXJlIGhhdmluZyB3aWR0aC9oZWlnaHQgYW5pbWF0ZWQKCQkJCQlpZiAoIGpRdWVy
eS5jc3MoIHRoaXMsICJkaXNwbGF5IiApID09PSAiaW5saW5lIiAmJgoJCQkJCQkJ
alF1ZXJ5LmNzcyggdGhpcywgImZsb2F0IiApID09PSAibm9uZSIgKSB7CgoJCQkJ
CQkvLyBpbmxpbmUtbGV2ZWwgZWxlbWVudHMgYWNjZXB0IGlubGluZS1ibG9jazsK
CQkJCQkJLy8gYmxvY2stbGV2ZWwgZWxlbWVudHMgbmVlZCB0byBiZSBpbmxpbmUg
d2l0aCBsYXlvdXQKCQkJCQkJaWYgKCAhalF1ZXJ5LnN1cHBvcnQuaW5saW5lQmxv
Y2tOZWVkc0xheW91dCB8fCBkZWZhdWx0RGlzcGxheSggdGhpcy5ub2RlTmFtZSAp
ID09PSAiaW5saW5lIiApIHsKCQkJCQkJCXRoaXMuc3R5bGUuZGlzcGxheSA9ICJp
bmxpbmUtYmxvY2siOwoKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCXRoaXMuc3R5bGUu
em9vbSA9IDE7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCgkJCWlmICggb3B0
Lm92ZXJmbG93ICE9IG51bGwgKSB7CgkJCQl0aGlzLnN0eWxlLm92ZXJmbG93ID0g
ImhpZGRlbiI7CgkJCX0KCgkJCWZvciAoIHAgaW4gcHJvcCApIHsKCQkJCWUgPSBu
ZXcgalF1ZXJ5LmZ4KCB0aGlzLCBvcHQsIHAgKTsKCQkJCXZhbCA9IHByb3BbIHAg
XTsKCgkJCQlpZiAoIHJmeHR5cGVzLnRlc3QoIHZhbCApICkgewoKCQkJCQkvLyBU
cmFja3Mgd2hldGhlciB0byBzaG93IG9yIGhpZGUgYmFzZWQgb24gcHJpdmF0ZQoJ
CQkJCS8vIGRhdGEgYXR0YWNoZWQgdG8gdGhlIGVsZW1lbnQKCQkJCQltZXRob2Qg
PSBqUXVlcnkuX2RhdGEoIHRoaXMsICJ0b2dnbGUiICsgcCApIHx8ICggdmFsID09
PSAidG9nZ2xlIiA/IGhpZGRlbiA/ICJzaG93IiA6ICJoaWRlIiA6IDAgKTsKCQkJ
CQlpZiAoIG1ldGhvZCApIHsKCQkJCQkJalF1ZXJ5Ll9kYXRhKCB0aGlzLCAidG9n
Z2xlIiArIHAsIG1ldGhvZCA9PT0gInNob3ciID8gImhpZGUiIDogInNob3ciICk7
CgkJCQkJCWVbIG1ldGhvZCBdKCk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJZVsgdmFs
IF0oKTsKCQkJCQl9CgoJCQkJfSBlbHNlIHsKCQkJCQlwYXJ0cyA9IHJmeG51bS5l
eGVjKCB2YWwgKTsKCQkJCQlzdGFydCA9IGUuY3VyKCk7CgoJCQkJCWlmICggcGFy
dHMgKSB7CgkJCQkJCWVuZCA9IHBhcnNlRmxvYXQoIHBhcnRzWzJdICk7CgkJCQkJ
CXVuaXQgPSBwYXJ0c1szXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHAgXSA/ICIi
IDogInB4IiApOwoKCQkJCQkJLy8gV2UgbmVlZCB0byBjb21wdXRlIHN0YXJ0aW5n
IHZhbHVlCgkJCQkJCWlmICggdW5pdCAhPT0gInB4IiApIHsKCQkJCQkJCWpRdWVy
eS5zdHlsZSggdGhpcywgcCwgKGVuZCB8fCAxKSArIHVuaXQpOwoJCQkJCQkJc3Rh
cnQgPSAoIChlbmQgfHwgMSkgLyBlLmN1cigpICkgKiBzdGFydDsKCQkJCQkJCWpR
dWVyeS5zdHlsZSggdGhpcywgcCwgc3RhcnQgKyB1bml0KTsKCQkJCQkJfQoKCQkJ
CQkJLy8gSWYgYSArPS8tPSB0b2tlbiB3YXMgcHJvdmlkZWQsIHdlJ3JlIGRvaW5n
IGEgcmVsYXRpdmUgYW5pbWF0aW9uCgkJCQkJCWlmICggcGFydHNbMV0gKSB7CgkJ
CQkJCQllbmQgPSAoIChwYXJ0c1sgMSBdID09PSAiLT0iID8gLTEgOiAxKSAqIGVu
ZCApICsgc3RhcnQ7CgkJCQkJCX0KCgkJCQkJCWUuY3VzdG9tKCBzdGFydCwgZW5k
LCB1bml0ICk7CgoJCQkJCX0gZWxzZSB7CgkJCQkJCWUuY3VzdG9tKCBzdGFydCwg
dmFsLCAiIiApOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJLy8gRm9yIEpTIHN0cmlj
dCBjb21wbGlhbmNlCgkJCXJldHVybiB0cnVlOwoJCX0KCgkJcmV0dXJuIG9wdGFs
bC5xdWV1ZSA9PT0gZmFsc2UgPwoJCQl0aGlzLmVhY2goIGRvQW5pbWF0aW9uICkg
OgoJCQl0aGlzLnF1ZXVlKCBvcHRhbGwucXVldWUsIGRvQW5pbWF0aW9uICk7Cgl9
LAoKCXN0b3A6IGZ1bmN0aW9uKCB0eXBlLCBjbGVhclF1ZXVlLCBnb3RvRW5kICkg
ewoJCWlmICggdHlwZW9mIHR5cGUgIT09ICJzdHJpbmciICkgewoJCQlnb3RvRW5k
ID0gY2xlYXJRdWV1ZTsKCQkJY2xlYXJRdWV1ZSA9IHR5cGU7CgkJCXR5cGUgPSB1
bmRlZmluZWQ7CgkJfQoJCWlmICggY2xlYXJRdWV1ZSAmJiB0eXBlICE9PSBmYWxz
ZSApIHsKCQkJdGhpcy5xdWV1ZSggdHlwZSB8fCAiZngiLCBbXSApOwoJCX0KCgkJ
cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHsKCQkJdmFyIGluZGV4LAoJCQkJ
aGFkVGltZXJzID0gZmFsc2UsCgkJCQl0aW1lcnMgPSBqUXVlcnkudGltZXJzLAoJ
CQkJZGF0YSA9IGpRdWVyeS5fZGF0YSggdGhpcyApOwoKCQkJLy8gY2xlYXIgbWFy
a2VyIGNvdW50ZXJzIGlmIHdlIGtub3cgdGhleSB3b24ndCBiZQoJCQlpZiAoICFn
b3RvRW5kICkgewoJCQkJalF1ZXJ5Ll91bm1hcmsoIHRydWUsIHRoaXMgKTsKCQkJ
fQoKCQkJZnVuY3Rpb24gc3RvcFF1ZXVlKCBlbGVtLCBkYXRhLCBpbmRleCApIHsK
CQkJCXZhciBob29rcyA9IGRhdGFbIGluZGV4IF07CgkJCQlqUXVlcnkucmVtb3Zl
RGF0YSggZWxlbSwgaW5kZXgsIHRydWUgKTsKCQkJCWhvb2tzLnN0b3AoIGdvdG9F
bmQgKTsKCQkJfQoKCQkJaWYgKCB0eXBlID09IG51bGwgKSB7CgkJCQlmb3IgKCBp
bmRleCBpbiBkYXRhICkgewoJCQkJCWlmICggZGF0YVsgaW5kZXggXSAmJiBkYXRh
WyBpbmRleCBdLnN0b3AgJiYgaW5kZXguaW5kZXhPZigiLnJ1biIpID09PSBpbmRl
eC5sZW5ndGggLSA0ICkgewoJCQkJCQlzdG9wUXVldWUoIHRoaXMsIGRhdGEsIGlu
ZGV4ICk7CgkJCQkJfQoJCQkJfQoJCQl9IGVsc2UgaWYgKCBkYXRhWyBpbmRleCA9
IHR5cGUgKyAiLnJ1biIgXSAmJiBkYXRhWyBpbmRleCBdLnN0b3AgKXsKCQkJCXN0
b3BRdWV1ZSggdGhpcywgZGF0YSwgaW5kZXggKTsKCQkJfQoKCQkJZm9yICggaW5k
ZXggPSB0aW1lcnMubGVuZ3RoOyBpbmRleC0tOyApIHsKCQkJCWlmICggdGltZXJz
WyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYgKHR5cGUgPT0gbnVsbCB8fCB0aW1l
cnNbIGluZGV4IF0ucXVldWUgPT09IHR5cGUpICkgewoJCQkJCWlmICggZ290b0Vu
ZCApIHsKCgkJCQkJCS8vIGZvcmNlIHRoZSBuZXh0IHN0ZXAgdG8gYmUgdGhlIGxh
c3QKCQkJCQkJdGltZXJzWyBpbmRleCBdKCB0cnVlICk7CgkJCQkJfSBlbHNlIHsK
CQkJCQkJdGltZXJzWyBpbmRleCBdLnNhdmVTdGF0ZSgpOwoJCQkJCX0KCQkJCQlo
YWRUaW1lcnMgPSB0cnVlOwoJCQkJCXRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7
CgkJCQl9CgkJCX0KCgkJCS8vIHN0YXJ0IHRoZSBuZXh0IGluIHRoZSBxdWV1ZSBp
ZiB0aGUgbGFzdCBzdGVwIHdhc24ndCBmb3JjZWQKCQkJLy8gdGltZXJzIGN1cnJl
bnRseSB3aWxsIGNhbGwgdGhlaXIgY29tcGxldGUgY2FsbGJhY2tzLCB3aGljaCB3
aWxsIGRlcXVldWUKCQkJLy8gYnV0IG9ubHkgaWYgdGhleSB3ZXJlIGdvdG9FbmQK
CQkJaWYgKCAhKCBnb3RvRW5kICYmIGhhZFRpbWVycyApICkgewoJCQkJalF1ZXJ5
LmRlcXVldWUoIHRoaXMsIHR5cGUgKTsKCQkJfQoJCX0pOwoJfQoKfSk7CgovLyBB
bmltYXRpb25zIGNyZWF0ZWQgc3luY2hyb25vdXNseSB3aWxsIHJ1biBzeW5jaHJv
bm91c2x5CmZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCkgewoJc2V0VGltZW91dCggY2xl
YXJGeE5vdywgMCApOwoJcmV0dXJuICggZnhOb3cgPSBqUXVlcnkubm93KCkgKTsK
fQoKZnVuY3Rpb24gY2xlYXJGeE5vdygpIHsKCWZ4Tm93ID0gdW5kZWZpbmVkOwp9
CgovLyBHZW5lcmF0ZSBwYXJhbWV0ZXJzIHRvIGNyZWF0ZSBhIHN0YW5kYXJkIGFu
aW1hdGlvbgpmdW5jdGlvbiBnZW5GeCggdHlwZSwgbnVtICkgewoJdmFyIG9iaiA9
IHt9OwoKCWpRdWVyeS5lYWNoKCBmeEF0dHJzLmNvbmNhdC5hcHBseShbXSwgZnhB
dHRycy5zbGljZSggMCwgbnVtICkpLCBmdW5jdGlvbigpIHsKCQlvYmpbIHRoaXMg
XSA9IHR5cGU7Cgl9KTsKCglyZXR1cm4gb2JqOwp9CgovLyBHZW5lcmF0ZSBzaG9y
dGN1dHMgZm9yIGN1c3RvbSBhbmltYXRpb25zCmpRdWVyeS5lYWNoKHsKCXNsaWRl
RG93bjogZ2VuRngoICJzaG93IiwgMSApLAoJc2xpZGVVcDogZ2VuRngoICJoaWRl
IiwgMSApLAoJc2xpZGVUb2dnbGU6IGdlbkZ4KCAidG9nZ2xlIiwgMSApLAoJZmFk
ZUluOiB7IG9wYWNpdHk6ICJzaG93IiB9LAoJZmFkZU91dDogeyBvcGFjaXR5OiAi
aGlkZSIgfSwKCWZhZGVUb2dnbGU6IHsgb3BhY2l0eTogInRvZ2dsZSIgfQp9LCBm
dW5jdGlvbiggbmFtZSwgcHJvcHMgKSB7CglqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1
bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHsKCQlyZXR1cm4gdGhp
cy5hbmltYXRlKCBwcm9wcywgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTsKCX07
Cn0pOwoKalF1ZXJ5LmV4dGVuZCh7CglzcGVlZDogZnVuY3Rpb24oIHNwZWVkLCBl
YXNpbmcsIGZuICkgewoJCXZhciBvcHQgPSBzcGVlZCAmJiB0eXBlb2Ygc3BlZWQg
PT09ICJvYmplY3QiID8galF1ZXJ5LmV4dGVuZCgge30sIHNwZWVkICkgOiB7CgkJ
CWNvbXBsZXRlOiBmbiB8fCAhZm4gJiYgZWFzaW5nIHx8CgkJCQlqUXVlcnkuaXNG
dW5jdGlvbiggc3BlZWQgKSAmJiBzcGVlZCwKCQkJZHVyYXRpb246IHNwZWVkLAoJ
CQllYXNpbmc6IGZuICYmIGVhc2luZyB8fCBlYXNpbmcgJiYgIWpRdWVyeS5pc0Z1
bmN0aW9uKCBlYXNpbmcgKSAmJiBlYXNpbmcKCQl9OwoKCQlvcHQuZHVyYXRpb24g
PSBqUXVlcnkuZngub2ZmID8gMCA6IHR5cGVvZiBvcHQuZHVyYXRpb24gPT09ICJu
dW1iZXIiID8gb3B0LmR1cmF0aW9uIDoKCQkJb3B0LmR1cmF0aW9uIGluIGpRdWVy
eS5meC5zcGVlZHMgPyBqUXVlcnkuZnguc3BlZWRzWyBvcHQuZHVyYXRpb24gXSA6
IGpRdWVyeS5meC5zcGVlZHMuX2RlZmF1bHQ7CgoJCS8vIG5vcm1hbGl6ZSBvcHQu
cXVldWUgLSB0cnVlL3VuZGVmaW5lZC9udWxsIC0+ICJmeCIKCQlpZiAoIG9wdC5x
dWV1ZSA9PSBudWxsIHx8IG9wdC5xdWV1ZSA9PT0gdHJ1ZSApIHsKCQkJb3B0LnF1
ZXVlID0gImZ4IjsKCQl9CgoJCS8vIFF1ZXVlaW5nCgkJb3B0Lm9sZCA9IG9wdC5j
b21wbGV0ZTsKCgkJb3B0LmNvbXBsZXRlID0gZnVuY3Rpb24oIG5vVW5tYXJrICkg
ewoJCQlpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBvcHQub2xkICkgKSB7CgkJCQlv
cHQub2xkLmNhbGwoIHRoaXMgKTsKCQkJfQoKCQkJaWYgKCBvcHQucXVldWUgKSB7
CgkJCQlqUXVlcnkuZGVxdWV1ZSggdGhpcywgb3B0LnF1ZXVlICk7CgkJCX0gZWxz
ZSBpZiAoIG5vVW5tYXJrICE9PSBmYWxzZSApIHsKCQkJCWpRdWVyeS5fdW5tYXJr
KCB0aGlzICk7CgkJCX0KCQl9OwoKCQlyZXR1cm4gb3B0OwoJfSwKCgllYXNpbmc6
IHsKCQlsaW5lYXI6IGZ1bmN0aW9uKCBwICkgewoJCQlyZXR1cm4gcDsKCQl9LAoJ
CXN3aW5nOiBmdW5jdGlvbiggcCApIHsKCQkJcmV0dXJuICggLU1hdGguY29zKCBw
Kk1hdGguUEkgKSAvIDIgKSArIDAuNTsKCQl9Cgl9LAoKCXRpbWVyczogW10sCgoJ
Zng6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBwcm9wICkgewoJCXRoaXMub3B0
aW9ucyA9IG9wdGlvbnM7CgkJdGhpcy5lbGVtID0gZWxlbTsKCQl0aGlzLnByb3Ag
PSBwcm9wOwoKCQlvcHRpb25zLm9yaWcgPSBvcHRpb25zLm9yaWcgfHwge307Cgl9
Cgp9KTsKCmpRdWVyeS5meC5wcm90b3R5cGUgPSB7CgkvLyBTaW1wbGUgZnVuY3Rp
b24gZm9yIHNldHRpbmcgYSBzdHlsZSB2YWx1ZQoJdXBkYXRlOiBmdW5jdGlvbigp
IHsKCQlpZiAoIHRoaXMub3B0aW9ucy5zdGVwICkgewoJCQl0aGlzLm9wdGlvbnMu
c3RlcC5jYWxsKCB0aGlzLmVsZW0sIHRoaXMubm93LCB0aGlzICk7CgkJfQoKCQko
IGpRdWVyeS5meC5zdGVwWyB0aGlzLnByb3AgXSB8fCBqUXVlcnkuZnguc3RlcC5f
ZGVmYXVsdCApKCB0aGlzICk7Cgl9LAoKCS8vIEdldCB0aGUgY3VycmVudCBzaXpl
CgljdXI6IGZ1bmN0aW9uKCkgewoJCWlmICggdGhpcy5lbGVtWyB0aGlzLnByb3Ag
XSAhPSBudWxsICYmICghdGhpcy5lbGVtLnN0eWxlIHx8IHRoaXMuZWxlbS5zdHls
ZVsgdGhpcy5wcm9wIF0gPT0gbnVsbCkgKSB7CgkJCXJldHVybiB0aGlzLmVsZW1b
IHRoaXMucHJvcCBdOwoJCX0KCgkJdmFyIHBhcnNlZCwKCQkJciA9IGpRdWVyeS5j
c3MoIHRoaXMuZWxlbSwgdGhpcy5wcm9wICk7CgkJLy8gRW1wdHkgc3RyaW5ncywg
bnVsbCwgdW5kZWZpbmVkIGFuZCAiYXV0byIgYXJlIGNvbnZlcnRlZCB0byAwLAoJ
CS8vIGNvbXBsZXggdmFsdWVzIHN1Y2ggYXMgInJvdGF0ZSgxcmFkKSIgYXJlIHJl
dHVybmVkIGFzIGlzLAoJCS8vIHNpbXBsZSB2YWx1ZXMgc3VjaCBhcyAiMTBweCIg
YXJlIHBhcnNlZCB0byBGbG9hdC4KCQlyZXR1cm4gaXNOYU4oIHBhcnNlZCA9IHBh
cnNlRmxvYXQoIHIgKSApID8gIXIgfHwgciA9PT0gImF1dG8iID8gMCA6IHIgOiBw
YXJzZWQ7Cgl9LAoKCS8vIFN0YXJ0IGFuIGFuaW1hdGlvbiBmcm9tIG9uZSBudW1i
ZXIgdG8gYW5vdGhlcgoJY3VzdG9tOiBmdW5jdGlvbiggZnJvbSwgdG8sIHVuaXQg
KSB7CgkJdmFyIHNlbGYgPSB0aGlzLAoJCQlmeCA9IGpRdWVyeS5meDsKCgkJdGhp
cy5zdGFydFRpbWUgPSBmeE5vdyB8fCBjcmVhdGVGeE5vdygpOwoJCXRoaXMuZW5k
ID0gdG87CgkJdGhpcy5ub3cgPSB0aGlzLnN0YXJ0ID0gZnJvbTsKCQl0aGlzLnBv
cyA9IHRoaXMuc3RhdGUgPSAwOwoJCXRoaXMudW5pdCA9IHVuaXQgfHwgdGhpcy51
bml0IHx8ICggalF1ZXJ5LmNzc051bWJlclsgdGhpcy5wcm9wIF0gPyAiIiA6ICJw
eCIgKTsKCgkJZnVuY3Rpb24gdCggZ290b0VuZCApIHsKCQkJcmV0dXJuIHNlbGYu
c3RlcCggZ290b0VuZCApOwoJCX0KCgkJdC5xdWV1ZSA9IHRoaXMub3B0aW9ucy5x
dWV1ZTsKCQl0LmVsZW0gPSB0aGlzLmVsZW07CgkJdC5zYXZlU3RhdGUgPSBmdW5j
dGlvbigpIHsKCQkJaWYgKCBqUXVlcnkuX2RhdGEoIHNlbGYuZWxlbSwgImZ4c2hv
dyIgKyBzZWxmLnByb3AgKSA9PT0gdW5kZWZpbmVkICkgewoJCQkJaWYgKCBzZWxm
Lm9wdGlvbnMuaGlkZSApIHsKCQkJCQlqUXVlcnkuX2RhdGEoIHNlbGYuZWxlbSwg
ImZ4c2hvdyIgKyBzZWxmLnByb3AsIHNlbGYuc3RhcnQgKTsKCQkJCX0gZWxzZSBp
ZiAoIHNlbGYub3B0aW9ucy5zaG93ICkgewoJCQkJCWpRdWVyeS5fZGF0YSggc2Vs
Zi5lbGVtLCAiZnhzaG93IiArIHNlbGYucHJvcCwgc2VsZi5lbmQgKTsKCQkJCX0K
CQkJfQoJCX07CgoJCWlmICggdCgpICYmIGpRdWVyeS50aW1lcnMucHVzaCh0KSAm
JiAhdGltZXJJZCApIHsKCQkJdGltZXJJZCA9IHNldEludGVydmFsKCBmeC50aWNr
LCBmeC5pbnRlcnZhbCApOwoJCX0KCX0sCgoJLy8gU2ltcGxlICdzaG93JyBmdW5j
dGlvbgoJc2hvdzogZnVuY3Rpb24oKSB7CgkJdmFyIGRhdGFTaG93ID0galF1ZXJ5
Ll9kYXRhKCB0aGlzLmVsZW0sICJmeHNob3ciICsgdGhpcy5wcm9wICk7CgoJCS8v
IFJlbWVtYmVyIHdoZXJlIHdlIHN0YXJ0ZWQsIHNvIHRoYXQgd2UgY2FuIGdvIGJh
Y2sgdG8gaXQgbGF0ZXIKCQl0aGlzLm9wdGlvbnMub3JpZ1sgdGhpcy5wcm9wIF0g
PSBkYXRhU2hvdyB8fCBqUXVlcnkuc3R5bGUoIHRoaXMuZWxlbSwgdGhpcy5wcm9w
ICk7CgkJdGhpcy5vcHRpb25zLnNob3cgPSB0cnVlOwoKCQkvLyBCZWdpbiB0aGUg
YW5pbWF0aW9uCgkJLy8gTWFrZSBzdXJlIHRoYXQgd2Ugc3RhcnQgYXQgYSBzbWFs
bCB3aWR0aC9oZWlnaHQgdG8gYXZvaWQgYW55IGZsYXNoIG9mIGNvbnRlbnQKCQlp
ZiAoIGRhdGFTaG93ICE9PSB1bmRlZmluZWQgKSB7CgkJCS8vIFRoaXMgc2hvdyBp
cyBwaWNraW5nIHVwIHdoZXJlIGEgcHJldmlvdXMgaGlkZSBvciBzaG93IGxlZnQg
b2ZmCgkJCXRoaXMuY3VzdG9tKCB0aGlzLmN1cigpLCBkYXRhU2hvdyApOwoJCX0g
ZWxzZSB7CgkJCXRoaXMuY3VzdG9tKCB0aGlzLnByb3AgPT09ICJ3aWR0aCIgfHwg
dGhpcy5wcm9wID09PSAiaGVpZ2h0IiA/IDEgOiAwLCB0aGlzLmN1cigpICk7CgkJ
fQoKCQkvLyBTdGFydCBieSBzaG93aW5nIHRoZSBlbGVtZW50CgkJalF1ZXJ5KCB0
aGlzLmVsZW0gKS5zaG93KCk7Cgl9LAoKCS8vIFNpbXBsZSAnaGlkZScgZnVuY3Rp
b24KCWhpZGU6IGZ1bmN0aW9uKCkgewoJCS8vIFJlbWVtYmVyIHdoZXJlIHdlIHN0
YXJ0ZWQsIHNvIHRoYXQgd2UgY2FuIGdvIGJhY2sgdG8gaXQgbGF0ZXIKCQl0aGlz
Lm9wdGlvbnMub3JpZ1sgdGhpcy5wcm9wIF0gPSBqUXVlcnkuX2RhdGEoIHRoaXMu
ZWxlbSwgImZ4c2hvdyIgKyB0aGlzLnByb3AgKSB8fCBqUXVlcnkuc3R5bGUoIHRo
aXMuZWxlbSwgdGhpcy5wcm9wICk7CgkJdGhpcy5vcHRpb25zLmhpZGUgPSB0cnVl
OwoKCQkvLyBCZWdpbiB0aGUgYW5pbWF0aW9uCgkJdGhpcy5jdXN0b20oIHRoaXMu
Y3VyKCksIDAgKTsKCX0sCgoJLy8gRWFjaCBzdGVwIG9mIGFuIGFuaW1hdGlvbgoJ
c3RlcDogZnVuY3Rpb24oIGdvdG9FbmQgKSB7CgkJdmFyIHAsIG4sIGNvbXBsZXRl
LAoJCQl0ID0gZnhOb3cgfHwgY3JlYXRlRnhOb3coKSwKCQkJZG9uZSA9IHRydWUs
CgkJCWVsZW0gPSB0aGlzLmVsZW0sCgkJCW9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7
CgoJCWlmICggZ290b0VuZCB8fCB0ID49IG9wdGlvbnMuZHVyYXRpb24gKyB0aGlz
LnN0YXJ0VGltZSApIHsKCQkJdGhpcy5ub3cgPSB0aGlzLmVuZDsKCQkJdGhpcy5w
b3MgPSB0aGlzLnN0YXRlID0gMTsKCQkJdGhpcy51cGRhdGUoKTsKCgkJCW9wdGlv
bnMuYW5pbWF0ZWRQcm9wZXJ0aWVzWyB0aGlzLnByb3AgXSA9IHRydWU7CgoJCQlm
b3IgKCBwIGluIG9wdGlvbnMuYW5pbWF0ZWRQcm9wZXJ0aWVzICkgewoJCQkJaWYg
KCBvcHRpb25zLmFuaW1hdGVkUHJvcGVydGllc1sgcCBdICE9PSB0cnVlICkgewoJ
CQkJCWRvbmUgPSBmYWxzZTsKCQkJCX0KCQkJfQoKCQkJaWYgKCBkb25lICkgewoJ
CQkJLy8gUmVzZXQgdGhlIG92ZXJmbG93CgkJCQlpZiAoIG9wdGlvbnMub3ZlcmZs
b3cgIT0gbnVsbCAmJiAhalF1ZXJ5LnN1cHBvcnQuc2hyaW5rV3JhcEJsb2NrcyAp
IHsKCgkJCQkJalF1ZXJ5LmVhY2goIFsgIiIsICJYIiwgIlkiIF0sIGZ1bmN0aW9u
KCBpbmRleCwgdmFsdWUgKSB7CgkJCQkJCWVsZW0uc3R5bGVbICJvdmVyZmxvdyIg
KyB2YWx1ZSBdID0gb3B0aW9ucy5vdmVyZmxvd1sgaW5kZXggXTsKCQkJCQl9KTsK
CQkJCX0KCgkJCQkvLyBIaWRlIHRoZSBlbGVtZW50IGlmIHRoZSAiaGlkZSIgb3Bl
cmF0aW9uIHdhcyBkb25lCgkJCQlpZiAoIG9wdGlvbnMuaGlkZSApIHsKCQkJCQlq
UXVlcnkoIGVsZW0gKS5oaWRlKCk7CgkJCQl9CgoJCQkJLy8gUmVzZXQgdGhlIHBy
b3BlcnRpZXMsIGlmIHRoZSBpdGVtIGhhcyBiZWVuIGhpZGRlbiBvciBzaG93bgoJ
CQkJaWYgKCBvcHRpb25zLmhpZGUgfHwgb3B0aW9ucy5zaG93ICkgewoJCQkJCWZv
ciAoIHAgaW4gb3B0aW9ucy5hbmltYXRlZFByb3BlcnRpZXMgKSB7CgkJCQkJCWpR
dWVyeS5zdHlsZSggZWxlbSwgcCwgb3B0aW9ucy5vcmlnWyBwIF0gKTsKCQkJCQkJ
alF1ZXJ5LnJlbW92ZURhdGEoIGVsZW0sICJmeHNob3ciICsgcCwgdHJ1ZSApOwoJ
CQkJCQkvLyBUb2dnbGUgZGF0YSBpcyBubyBsb25nZXIgbmVlZGVkCgkJCQkJCWpR
dWVyeS5yZW1vdmVEYXRhKCBlbGVtLCAidG9nZ2xlIiArIHAsIHRydWUgKTsKCQkJ
CQl9CgkJCQl9CgoJCQkJLy8gRXhlY3V0ZSB0aGUgY29tcGxldGUgZnVuY3Rpb24K
CQkJCS8vIGluIHRoZSBldmVudCB0aGF0IHRoZSBjb21wbGV0ZSBmdW5jdGlvbiB0
aHJvd3MgYW4gZXhjZXB0aW9uCgkJCQkvLyB3ZSBtdXN0IGVuc3VyZSBpdCB3b24n
dCBiZSBjYWxsZWQgdHdpY2UuICM1Njg0CgoJCQkJY29tcGxldGUgPSBvcHRpb25z
LmNvbXBsZXRlOwoJCQkJaWYgKCBjb21wbGV0ZSApIHsKCgkJCQkJb3B0aW9ucy5j
b21wbGV0ZSA9IGZhbHNlOwoJCQkJCWNvbXBsZXRlLmNhbGwoIGVsZW0gKTsKCQkJ
CX0KCQkJfQoKCQkJcmV0dXJuIGZhbHNlOwoKCQl9IGVsc2UgewoJCQkvLyBjbGFz
c2ljYWwgZWFzaW5nIGNhbm5vdCBiZSB1c2VkIHdpdGggYW4gSW5maW5pdHkgZHVy
YXRpb24KCQkJaWYgKCBvcHRpb25zLmR1cmF0aW9uID09IEluZmluaXR5ICkgewoJ
CQkJdGhpcy5ub3cgPSB0OwoJCQl9IGVsc2UgewoJCQkJbiA9IHQgLSB0aGlzLnN0
YXJ0VGltZTsKCQkJCXRoaXMuc3RhdGUgPSBuIC8gb3B0aW9ucy5kdXJhdGlvbjsK
CgkJCQkvLyBQZXJmb3JtIHRoZSBlYXNpbmcgZnVuY3Rpb24sIGRlZmF1bHRzIHRv
IHN3aW5nCgkJCQl0aGlzLnBvcyA9IGpRdWVyeS5lYXNpbmdbIG9wdGlvbnMuYW5p
bWF0ZWRQcm9wZXJ0aWVzW3RoaXMucHJvcF0gXSggdGhpcy5zdGF0ZSwgbiwgMCwg
MSwgb3B0aW9ucy5kdXJhdGlvbiApOwoJCQkJdGhpcy5ub3cgPSB0aGlzLnN0YXJ0
ICsgKCAodGhpcy5lbmQgLSB0aGlzLnN0YXJ0KSAqIHRoaXMucG9zICk7CgkJCX0K
CQkJLy8gUGVyZm9ybSB0aGUgbmV4dCBzdGVwIG9mIHRoZSBhbmltYXRpb24KCQkJ
dGhpcy51cGRhdGUoKTsKCQl9CgoJCXJldHVybiB0cnVlOwoJfQp9OwoKalF1ZXJ5
LmV4dGVuZCggalF1ZXJ5LmZ4LCB7Cgl0aWNrOiBmdW5jdGlvbigpIHsKCQl2YXIg
dGltZXIsCgkJCXRpbWVycyA9IGpRdWVyeS50aW1lcnMsCgkJCWkgPSAwOwoKCQlm
b3IgKCA7IGkgPCB0aW1lcnMubGVuZ3RoOyBpKysgKSB7CgkJCXRpbWVyID0gdGlt
ZXJzWyBpIF07CgkJCS8vIENoZWNrcyB0aGUgdGltZXIgaGFzIG5vdCBhbHJlYWR5
IGJlZW4gcmVtb3ZlZAoJCQlpZiAoICF0aW1lcigpICYmIHRpbWVyc1sgaSBdID09
PSB0aW1lciApIHsKCQkJCXRpbWVycy5zcGxpY2UoIGktLSwgMSApOwoJCQl9CgkJ
fQoKCQlpZiAoICF0aW1lcnMubGVuZ3RoICkgewoJCQlqUXVlcnkuZnguc3RvcCgp
OwoJCX0KCX0sCgoJaW50ZXJ2YWw6IDEzLAoKCXN0b3A6IGZ1bmN0aW9uKCkgewoJ
CWNsZWFySW50ZXJ2YWwoIHRpbWVySWQgKTsKCQl0aW1lcklkID0gbnVsbDsKCX0s
CgoJc3BlZWRzOiB7CgkJc2xvdzogNjAwLAoJCWZhc3Q6IDIwMCwKCQkvLyBEZWZh
dWx0IHNwZWVkCgkJX2RlZmF1bHQ6IDQwMAoJfSwKCglzdGVwOiB7CgkJb3BhY2l0
eTogZnVuY3Rpb24oIGZ4ICkgewoJCQlqUXVlcnkuc3R5bGUoIGZ4LmVsZW0sICJv
cGFjaXR5IiwgZngubm93ICk7CgkJfSwKCgkJX2RlZmF1bHQ6IGZ1bmN0aW9uKCBm
eCApIHsKCQkJaWYgKCBmeC5lbGVtLnN0eWxlICYmIGZ4LmVsZW0uc3R5bGVbIGZ4
LnByb3AgXSAhPSBudWxsICkgewoJCQkJZnguZWxlbS5zdHlsZVsgZngucHJvcCBd
ID0gZngubm93ICsgZngudW5pdDsKCQkJfSBlbHNlIHsKCQkJCWZ4LmVsZW1bIGZ4
LnByb3AgXSA9IGZ4Lm5vdzsKCQkJfQoJCX0KCX0KfSk7CgovLyBFbnN1cmUgcHJv
cHMgdGhhdCBjYW4ndCBiZSBuZWdhdGl2ZSBkb24ndCBnbyB0aGVyZSBvbiB1bmRl
cnNob290IGVhc2luZwpqUXVlcnkuZWFjaCggZnhBdHRycy5jb25jYXQuYXBwbHko
IFtdLCBmeEF0dHJzICksIGZ1bmN0aW9uKCBpLCBwcm9wICkgewoJLy8gZXhjbHVk
ZSBtYXJnaW5Ub3AsIG1hcmdpbkxlZnQsIG1hcmdpbkJvdHRvbSBhbmQgbWFyZ2lu
UmlnaHQgZnJvbSB0aGlzIGxpc3QKCWlmICggcHJvcC5pbmRleE9mKCAibWFyZ2lu
IiApICkgewoJCWpRdWVyeS5meC5zdGVwWyBwcm9wIF0gPSBmdW5jdGlvbiggZngg
KSB7CgkJCWpRdWVyeS5zdHlsZSggZnguZWxlbSwgcHJvcCwgTWF0aC5tYXgoMCwg
Zngubm93KSArIGZ4LnVuaXQgKTsKCQl9OwoJfQp9KTsKCmlmICggalF1ZXJ5LmV4
cHIgJiYgalF1ZXJ5LmV4cHIuZmlsdGVycyApIHsKCWpRdWVyeS5leHByLmZpbHRl
cnMuYW5pbWF0ZWQgPSBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4galF1ZXJ5
LmdyZXAoalF1ZXJ5LnRpbWVycywgZnVuY3Rpb24oIGZuICkgewoJCQlyZXR1cm4g
ZWxlbSA9PT0gZm4uZWxlbTsKCQl9KS5sZW5ndGg7Cgl9Owp9CgovLyBUcnkgdG8g
cmVzdG9yZSB0aGUgZGVmYXVsdCBkaXNwbGF5IHZhbHVlIG9mIGFuIGVsZW1lbnQK
ZnVuY3Rpb24gZGVmYXVsdERpc3BsYXkoIG5vZGVOYW1lICkgewoKCWlmICggIWVs
ZW1kaXNwbGF5WyBub2RlTmFtZSBdICkgewoKCQl2YXIgYm9keSA9IGRvY3VtZW50
LmJvZHksCgkJCWVsZW0gPSBqUXVlcnkoICI8IiArIG5vZGVOYW1lICsgIj4iICku
YXBwZW5kVG8oIGJvZHkgKSwKCQkJZGlzcGxheSA9IGVsZW0uY3NzKCAiZGlzcGxh
eSIgKTsKCQllbGVtLnJlbW92ZSgpOwoKCQkvLyBJZiB0aGUgc2ltcGxlIHdheSBm
YWlscywKCQkvLyBnZXQgZWxlbWVudCdzIHJlYWwgZGVmYXVsdCBkaXNwbGF5IGJ5
IGF0dGFjaGluZyBpdCB0byBhIHRlbXAgaWZyYW1lCgkJaWYgKCBkaXNwbGF5ID09
PSAibm9uZSIgfHwgZGlzcGxheSA9PT0gIiIgKSB7CgkJCS8vIE5vIGlmcmFtZSB0
byB1c2UgeWV0LCBzbyBjcmVhdGUgaXQKCQkJaWYgKCAhaWZyYW1lICkgewoJCQkJ
aWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImlmcmFtZSIgKTsKCQkJ
CWlmcmFtZS5mcmFtZUJvcmRlciA9IGlmcmFtZS53aWR0aCA9IGlmcmFtZS5oZWln
aHQgPSAwOwoJCQl9CgoJCQlib2R5LmFwcGVuZENoaWxkKCBpZnJhbWUgKTsKCgkJ
CS8vIENyZWF0ZSBhIGNhY2hlYWJsZSBjb3B5IG9mIHRoZSBpZnJhbWUgZG9jdW1l
bnQgb24gZmlyc3QgY2FsbC4KCQkJLy8gSUUgYW5kIE9wZXJhIHdpbGwgYWxsb3cg
dXMgdG8gcmV1c2UgdGhlIGlmcmFtZURvYyB3aXRob3V0IHJlLXdyaXRpbmcgdGhl
IGZha2UgSFRNTAoJCQkvLyBkb2N1bWVudCB0byBpdDsgV2ViS2l0ICYgRmlyZWZv
eCB3b24ndCBhbGxvdyByZXVzaW5nIHRoZSBpZnJhbWUgZG9jdW1lbnQuCgkJCWlm
ICggIWlmcmFtZURvYyB8fCAhaWZyYW1lLmNyZWF0ZUVsZW1lbnQgKSB7CgkJCQlp
ZnJhbWVEb2MgPSAoIGlmcmFtZS5jb250ZW50V2luZG93IHx8IGlmcmFtZS5jb250
ZW50RG9jdW1lbnQgKS5kb2N1bWVudDsKCQkJCWlmcmFtZURvYy53cml0ZSggKCBq
UXVlcnkuc3VwcG9ydC5ib3hNb2RlbCA/ICI8IWRvY3R5cGUgaHRtbD4iIDogIiIg
KSArICI8aHRtbD48Ym9keT4iICk7CgkJCQlpZnJhbWVEb2MuY2xvc2UoKTsKCQkJ
fQoKCQkJZWxlbSA9IGlmcmFtZURvYy5jcmVhdGVFbGVtZW50KCBub2RlTmFtZSAp
OwoKCQkJaWZyYW1lRG9jLmJvZHkuYXBwZW5kQ2hpbGQoIGVsZW0gKTsKCgkJCWRp
c3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCAiZGlzcGxheSIgKTsKCQkJYm9keS5y
ZW1vdmVDaGlsZCggaWZyYW1lICk7CgkJfQoKCQkvLyBTdG9yZSB0aGUgY29ycmVj
dCBkZWZhdWx0IGRpc3BsYXkKCQllbGVtZGlzcGxheVsgbm9kZU5hbWUgXSA9IGRp
c3BsYXk7Cgl9CgoJcmV0dXJuIGVsZW1kaXNwbGF5WyBub2RlTmFtZSBdOwp9CgoK
Cgp2YXIgZ2V0T2Zmc2V0LAoJcnRhYmxlID0gL150KD86YWJsZXxkfGgpJC9pLAoJ
cnJvb3QgPSAvXig/OmJvZHl8aHRtbCkkL2k7CgppZiAoICJnZXRCb3VuZGluZ0Ns
aWVudFJlY3QiIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCApIHsKCWdldE9m
ZnNldCA9IGZ1bmN0aW9uKCBlbGVtLCBkb2MsIGRvY0VsZW0sIGJveCApIHsKCQl0
cnkgewoJCQlib3ggPSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwoJCX0g
Y2F0Y2goZSkge30KCgkJLy8gTWFrZSBzdXJlIHdlJ3JlIG5vdCBkZWFsaW5nIHdp
dGggYSBkaXNjb25uZWN0ZWQgRE9NIG5vZGUKCQlpZiAoICFib3ggfHwgIWpRdWVy
eS5jb250YWlucyggZG9jRWxlbSwgZWxlbSApICkgewoJCQlyZXR1cm4gYm94ID8g
eyB0b3A6IGJveC50b3AsIGxlZnQ6IGJveC5sZWZ0IH0gOiB7IHRvcDogMCwgbGVm
dDogMCB9OwoJCX0KCgkJdmFyIGJvZHkgPSBkb2MuYm9keSwKCQkJd2luID0gZ2V0
V2luZG93KCBkb2MgKSwKCQkJY2xpZW50VG9wICA9IGRvY0VsZW0uY2xpZW50VG9w
ICB8fCBib2R5LmNsaWVudFRvcCAgfHwgMCwKCQkJY2xpZW50TGVmdCA9IGRvY0Vs
ZW0uY2xpZW50TGVmdCB8fCBib2R5LmNsaWVudExlZnQgfHwgMCwKCQkJc2Nyb2xs
VG9wICA9IHdpbi5wYWdlWU9mZnNldCB8fCBqUXVlcnkuc3VwcG9ydC5ib3hNb2Rl
bCAmJiBkb2NFbGVtLnNjcm9sbFRvcCAgfHwgYm9keS5zY3JvbGxUb3AsCgkJCXNj
cm9sbExlZnQgPSB3aW4ucGFnZVhPZmZzZXQgfHwgalF1ZXJ5LnN1cHBvcnQuYm94
TW9kZWwgJiYgZG9jRWxlbS5zY3JvbGxMZWZ0IHx8IGJvZHkuc2Nyb2xsTGVmdCwK
CQkJdG9wICA9IGJveC50b3AgICsgc2Nyb2xsVG9wICAtIGNsaWVudFRvcCwKCQkJ
bGVmdCA9IGJveC5sZWZ0ICsgc2Nyb2xsTGVmdCAtIGNsaWVudExlZnQ7CgoJCXJl
dHVybiB7IHRvcDogdG9wLCBsZWZ0OiBsZWZ0IH07Cgl9OwoKfSBlbHNlIHsKCWdl
dE9mZnNldCA9IGZ1bmN0aW9uKCBlbGVtLCBkb2MsIGRvY0VsZW0gKSB7CgkJdmFy
IGNvbXB1dGVkU3R5bGUsCgkJCW9mZnNldFBhcmVudCA9IGVsZW0ub2Zmc2V0UGFy
ZW50LAoJCQlwcmV2T2Zmc2V0UGFyZW50ID0gZWxlbSwKCQkJYm9keSA9IGRvYy5i
b2R5LAoJCQlkZWZhdWx0VmlldyA9IGRvYy5kZWZhdWx0VmlldywKCQkJcHJldkNv
bXB1dGVkU3R5bGUgPSBkZWZhdWx0VmlldyA/IGRlZmF1bHRWaWV3LmdldENvbXB1
dGVkU3R5bGUoIGVsZW0sIG51bGwgKSA6IGVsZW0uY3VycmVudFN0eWxlLAoJCQl0
b3AgPSBlbGVtLm9mZnNldFRvcCwKCQkJbGVmdCA9IGVsZW0ub2Zmc2V0TGVmdDsK
CgkJd2hpbGUgKCAoZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSkgJiYgZWxlbSAhPT0g
Ym9keSAmJiBlbGVtICE9PSBkb2NFbGVtICkgewoJCQlpZiAoIGpRdWVyeS5zdXBw
b3J0LmZpeGVkUG9zaXRpb24gJiYgcHJldkNvbXB1dGVkU3R5bGUucG9zaXRpb24g
PT09ICJmaXhlZCIgKSB7CgkJCQlicmVhazsKCQkJfQoKCQkJY29tcHV0ZWRTdHls
ZSA9IGRlZmF1bHRWaWV3ID8gZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZShl
bGVtLCBudWxsKSA6IGVsZW0uY3VycmVudFN0eWxlOwoJCQl0b3AgIC09IGVsZW0u
c2Nyb2xsVG9wOwoJCQlsZWZ0IC09IGVsZW0uc2Nyb2xsTGVmdDsKCgkJCWlmICgg
ZWxlbSA9PT0gb2Zmc2V0UGFyZW50ICkgewoJCQkJdG9wICArPSBlbGVtLm9mZnNl
dFRvcDsKCQkJCWxlZnQgKz0gZWxlbS5vZmZzZXRMZWZ0OwoKCQkJCWlmICggalF1
ZXJ5LnN1cHBvcnQuZG9lc05vdEFkZEJvcmRlciAmJiAhKGpRdWVyeS5zdXBwb3J0
LmRvZXNBZGRCb3JkZXJGb3JUYWJsZUFuZENlbGxzICYmIHJ0YWJsZS50ZXN0KGVs
ZW0ubm9kZU5hbWUpKSApIHsKCQkJCQl0b3AgICs9IHBhcnNlRmxvYXQoIGNvbXB1
dGVkU3R5bGUuYm9yZGVyVG9wV2lkdGggICkgfHwgMDsKCQkJCQlsZWZ0ICs9IHBh
cnNlRmxvYXQoIGNvbXB1dGVkU3R5bGUuYm9yZGVyTGVmdFdpZHRoICkgfHwgMDsK
CQkJCX0KCgkJCQlwcmV2T2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50OwoJCQkJ
b2Zmc2V0UGFyZW50ID0gZWxlbS5vZmZzZXRQYXJlbnQ7CgkJCX0KCgkJCWlmICgg
alF1ZXJ5LnN1cHBvcnQuc3VidHJhY3RzQm9yZGVyRm9yT3ZlcmZsb3dOb3RWaXNp
YmxlICYmIGNvbXB1dGVkU3R5bGUub3ZlcmZsb3cgIT09ICJ2aXNpYmxlIiApIHsK
CQkJCXRvcCAgKz0gcGFyc2VGbG9hdCggY29tcHV0ZWRTdHlsZS5ib3JkZXJUb3BX
aWR0aCAgKSB8fCAwOwoJCQkJbGVmdCArPSBwYXJzZUZsb2F0KCBjb21wdXRlZFN0
eWxlLmJvcmRlckxlZnRXaWR0aCApIHx8IDA7CgkJCX0KCgkJCXByZXZDb21wdXRl
ZFN0eWxlID0gY29tcHV0ZWRTdHlsZTsKCQl9CgoJCWlmICggcHJldkNvbXB1dGVk
U3R5bGUucG9zaXRpb24gPT09ICJyZWxhdGl2ZSIgfHwgcHJldkNvbXB1dGVkU3R5
bGUucG9zaXRpb24gPT09ICJzdGF0aWMiICkgewoJCQl0b3AgICs9IGJvZHkub2Zm
c2V0VG9wOwoJCQlsZWZ0ICs9IGJvZHkub2Zmc2V0TGVmdDsKCQl9CgoJCWlmICgg
alF1ZXJ5LnN1cHBvcnQuZml4ZWRQb3NpdGlvbiAmJiBwcmV2Q29tcHV0ZWRTdHls
ZS5wb3NpdGlvbiA9PT0gImZpeGVkIiApIHsKCQkJdG9wICArPSBNYXRoLm1heCgg
ZG9jRWxlbS5zY3JvbGxUb3AsIGJvZHkuc2Nyb2xsVG9wICk7CgkJCWxlZnQgKz0g
TWF0aC5tYXgoIGRvY0VsZW0uc2Nyb2xsTGVmdCwgYm9keS5zY3JvbGxMZWZ0ICk7
CgkJfQoKCQlyZXR1cm4geyB0b3A6IHRvcCwgbGVmdDogbGVmdCB9OwoJfTsKfQoK
alF1ZXJ5LmZuLm9mZnNldCA9IGZ1bmN0aW9uKCBvcHRpb25zICkgewoJaWYgKCBh
cmd1bWVudHMubGVuZ3RoICkgewoJCXJldHVybiBvcHRpb25zID09PSB1bmRlZmlu
ZWQgPwoJCQl0aGlzIDoKCQkJdGhpcy5lYWNoKGZ1bmN0aW9uKCBpICkgewoJCQkJ
alF1ZXJ5Lm9mZnNldC5zZXRPZmZzZXQoIHRoaXMsIG9wdGlvbnMsIGkgKTsKCQkJ
fSk7Cgl9CgoJdmFyIGVsZW0gPSB0aGlzWzBdLAoJCWRvYyA9IGVsZW0gJiYgZWxl
bS5vd25lckRvY3VtZW50OwoKCWlmICggIWRvYyApIHsKCQlyZXR1cm4gbnVsbDsK
CX0KCglpZiAoIGVsZW0gPT09IGRvYy5ib2R5ICkgewoJCXJldHVybiBqUXVlcnku
b2Zmc2V0LmJvZHlPZmZzZXQoIGVsZW0gKTsKCX0KCglyZXR1cm4gZ2V0T2Zmc2V0
KCBlbGVtLCBkb2MsIGRvYy5kb2N1bWVudEVsZW1lbnQgKTsKfTsKCmpRdWVyeS5v
ZmZzZXQgPSB7CgoJYm9keU9mZnNldDogZnVuY3Rpb24oIGJvZHkgKSB7CgkJdmFy
IHRvcCA9IGJvZHkub2Zmc2V0VG9wLAoJCQlsZWZ0ID0gYm9keS5vZmZzZXRMZWZ0
OwoKCQlpZiAoIGpRdWVyeS5zdXBwb3J0LmRvZXNOb3RJbmNsdWRlTWFyZ2luSW5C
b2R5T2Zmc2V0ICkgewoJCQl0b3AgICs9IHBhcnNlRmxvYXQoIGpRdWVyeS5jc3Mo
Ym9keSwgIm1hcmdpblRvcCIpICkgfHwgMDsKCQkJbGVmdCArPSBwYXJzZUZsb2F0
KCBqUXVlcnkuY3NzKGJvZHksICJtYXJnaW5MZWZ0IikgKSB8fCAwOwoJCX0KCgkJ
cmV0dXJuIHsgdG9wOiB0b3AsIGxlZnQ6IGxlZnQgfTsKCX0sCgoJc2V0T2Zmc2V0
OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgaSApIHsKCQl2YXIgcG9zaXRpb24g
PSBqUXVlcnkuY3NzKCBlbGVtLCAicG9zaXRpb24iICk7CgoJCS8vIHNldCBwb3Np
dGlvbiBmaXJzdCwgaW4tY2FzZSB0b3AvbGVmdCBhcmUgc2V0IGV2ZW4gb24gc3Rh
dGljIGVsZW0KCQlpZiAoIHBvc2l0aW9uID09PSAic3RhdGljIiApIHsKCQkJZWxl
bS5zdHlsZS5wb3NpdGlvbiA9ICJyZWxhdGl2ZSI7CgkJfQoKCQl2YXIgY3VyRWxl
bSA9IGpRdWVyeSggZWxlbSApLAoJCQljdXJPZmZzZXQgPSBjdXJFbGVtLm9mZnNl
dCgpLAoJCQljdXJDU1NUb3AgPSBqUXVlcnkuY3NzKCBlbGVtLCAidG9wIiApLAoJ
CQljdXJDU1NMZWZ0ID0galF1ZXJ5LmNzcyggZWxlbSwgImxlZnQiICksCgkJCWNh
bGN1bGF0ZVBvc2l0aW9uID0gKCBwb3NpdGlvbiA9PT0gImFic29sdXRlIiB8fCBw
b3NpdGlvbiA9PT0gImZpeGVkIiApICYmIGpRdWVyeS5pbkFycmF5KCJhdXRvIiwg
W2N1ckNTU1RvcCwgY3VyQ1NTTGVmdF0pID4gLTEsCgkJCXByb3BzID0ge30sIGN1
clBvc2l0aW9uID0ge30sIGN1clRvcCwgY3VyTGVmdDsKCgkJLy8gbmVlZCB0byBi
ZSBhYmxlIHRvIGNhbGN1bGF0ZSBwb3NpdGlvbiBpZiBlaXRoZXIgdG9wIG9yIGxl
ZnQgaXMgYXV0byBhbmQgcG9zaXRpb24gaXMgZWl0aGVyIGFic29sdXRlIG9yIGZp
eGVkCgkJaWYgKCBjYWxjdWxhdGVQb3NpdGlvbiApIHsKCQkJY3VyUG9zaXRpb24g
PSBjdXJFbGVtLnBvc2l0aW9uKCk7CgkJCWN1clRvcCA9IGN1clBvc2l0aW9uLnRv
cDsKCQkJY3VyTGVmdCA9IGN1clBvc2l0aW9uLmxlZnQ7CgkJfSBlbHNlIHsKCQkJ
Y3VyVG9wID0gcGFyc2VGbG9hdCggY3VyQ1NTVG9wICkgfHwgMDsKCQkJY3VyTGVm
dCA9IHBhcnNlRmxvYXQoIGN1ckNTU0xlZnQgKSB8fCAwOwoJCX0KCgkJaWYgKCBq
UXVlcnkuaXNGdW5jdGlvbiggb3B0aW9ucyApICkgewoJCQlvcHRpb25zID0gb3B0
aW9ucy5jYWxsKCBlbGVtLCBpLCBjdXJPZmZzZXQgKTsKCQl9CgoJCWlmICggb3B0
aW9ucy50b3AgIT0gbnVsbCApIHsKCQkJcHJvcHMudG9wID0gKCBvcHRpb25zLnRv
cCAtIGN1ck9mZnNldC50b3AgKSArIGN1clRvcDsKCQl9CgkJaWYgKCBvcHRpb25z
LmxlZnQgIT0gbnVsbCApIHsKCQkJcHJvcHMubGVmdCA9ICggb3B0aW9ucy5sZWZ0
IC0gY3VyT2Zmc2V0LmxlZnQgKSArIGN1ckxlZnQ7CgkJfQoKCQlpZiAoICJ1c2lu
ZyIgaW4gb3B0aW9ucyApIHsKCQkJb3B0aW9ucy51c2luZy5jYWxsKCBlbGVtLCBw
cm9wcyApOwoJCX0gZWxzZSB7CgkJCWN1ckVsZW0uY3NzKCBwcm9wcyApOwoJCX0K
CX0KfTsKCgpqUXVlcnkuZm4uZXh0ZW5kKHsKCglwb3NpdGlvbjogZnVuY3Rpb24o
KSB7CgkJaWYgKCAhdGhpc1swXSApIHsKCQkJcmV0dXJuIG51bGw7CgkJfQoKCQl2
YXIgZWxlbSA9IHRoaXNbMF0sCgoJCS8vIEdldCAqcmVhbCogb2Zmc2V0UGFyZW50
CgkJb2Zmc2V0UGFyZW50ID0gdGhpcy5vZmZzZXRQYXJlbnQoKSwKCgkJLy8gR2V0
IGNvcnJlY3Qgb2Zmc2V0cwoJCW9mZnNldCAgICAgICA9IHRoaXMub2Zmc2V0KCks
CgkJcGFyZW50T2Zmc2V0ID0gcnJvb3QudGVzdChvZmZzZXRQYXJlbnRbMF0ubm9k
ZU5hbWUpID8geyB0b3A6IDAsIGxlZnQ6IDAgfSA6IG9mZnNldFBhcmVudC5vZmZz
ZXQoKTsKCgkJLy8gU3VidHJhY3QgZWxlbWVudCBtYXJnaW5zCgkJLy8gbm90ZTog
d2hlbiBhbiBlbGVtZW50IGhhcyBtYXJnaW46IGF1dG8gdGhlIG9mZnNldExlZnQg
YW5kIG1hcmdpbkxlZnQKCQkvLyBhcmUgdGhlIHNhbWUgaW4gU2FmYXJpIGNhdXNp
bmcgb2Zmc2V0LmxlZnQgdG8gaW5jb3JyZWN0bHkgYmUgMAoJCW9mZnNldC50b3Ag
IC09IHBhcnNlRmxvYXQoIGpRdWVyeS5jc3MoZWxlbSwgIm1hcmdpblRvcCIpICkg
fHwgMDsKCQlvZmZzZXQubGVmdCAtPSBwYXJzZUZsb2F0KCBqUXVlcnkuY3NzKGVs
ZW0sICJtYXJnaW5MZWZ0IikgKSB8fCAwOwoKCQkvLyBBZGQgb2Zmc2V0UGFyZW50
IGJvcmRlcnMKCQlwYXJlbnRPZmZzZXQudG9wICArPSBwYXJzZUZsb2F0KCBqUXVl
cnkuY3NzKG9mZnNldFBhcmVudFswXSwgImJvcmRlclRvcFdpZHRoIikgKSB8fCAw
OwoJCXBhcmVudE9mZnNldC5sZWZ0ICs9IHBhcnNlRmxvYXQoIGpRdWVyeS5jc3Mo
b2Zmc2V0UGFyZW50WzBdLCAiYm9yZGVyTGVmdFdpZHRoIikgKSB8fCAwOwoKCQkv
LyBTdWJ0cmFjdCB0aGUgdHdvIG9mZnNldHMKCQlyZXR1cm4gewoJCQl0b3A6ICBv
ZmZzZXQudG9wICAtIHBhcmVudE9mZnNldC50b3AsCgkJCWxlZnQ6IG9mZnNldC5s
ZWZ0IC0gcGFyZW50T2Zmc2V0LmxlZnQKCQl9OwoJfSwKCglvZmZzZXRQYXJlbnQ6
IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLm1hcChmdW5jdGlvbigpIHsKCQkJ
dmFyIG9mZnNldFBhcmVudCA9IHRoaXMub2Zmc2V0UGFyZW50IHx8IGRvY3VtZW50
LmJvZHk7CgkJCXdoaWxlICggb2Zmc2V0UGFyZW50ICYmICghcnJvb3QudGVzdChv
ZmZzZXRQYXJlbnQubm9kZU5hbWUpICYmIGpRdWVyeS5jc3Mob2Zmc2V0UGFyZW50
LCAicG9zaXRpb24iKSA9PT0gInN0YXRpYyIpICkgewoJCQkJb2Zmc2V0UGFyZW50
ID0gb2Zmc2V0UGFyZW50Lm9mZnNldFBhcmVudDsKCQkJfQoJCQlyZXR1cm4gb2Zm
c2V0UGFyZW50OwoJCX0pOwoJfQp9KTsKCgovLyBDcmVhdGUgc2Nyb2xsTGVmdCBh
bmQgc2Nyb2xsVG9wIG1ldGhvZHMKalF1ZXJ5LmVhY2goIHtzY3JvbGxMZWZ0OiAi
cGFnZVhPZmZzZXQiLCBzY3JvbGxUb3A6ICJwYWdlWU9mZnNldCJ9LCBmdW5jdGlv
biggbWV0aG9kLCBwcm9wICkgewoJdmFyIHRvcCA9IC9ZLy50ZXN0KCBwcm9wICk7
CgoJalF1ZXJ5LmZuWyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB2YWwgKSB7CgkJcmV0
dXJuIGpRdWVyeS5hY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBtZXRob2Qs
IHZhbCApIHsKCQkJdmFyIHdpbiA9IGdldFdpbmRvdyggZWxlbSApOwoKCQkJaWYg
KCB2YWwgPT09IHVuZGVmaW5lZCApIHsKCQkJCXJldHVybiB3aW4gPyAocHJvcCBp
biB3aW4pID8gd2luWyBwcm9wIF0gOgoJCQkJCWpRdWVyeS5zdXBwb3J0LmJveE1v
ZGVsICYmIHdpbi5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbIG1ldGhvZCBdIHx8
CgkJCQkJCXdpbi5kb2N1bWVudC5ib2R5WyBtZXRob2QgXSA6CgkJCQkJZWxlbVsg
bWV0aG9kIF07CgkJCX0KCgkJCWlmICggd2luICkgewoJCQkJd2luLnNjcm9sbFRv
KAoJCQkJCSF0b3AgPyB2YWwgOiBqUXVlcnkoIHdpbiApLnNjcm9sbExlZnQoKSwK
CQkJCQkgdG9wID8gdmFsIDogalF1ZXJ5KCB3aW4gKS5zY3JvbGxUb3AoKQoJCQkJ
KTsKCgkJCX0gZWxzZSB7CgkJCQllbGVtWyBtZXRob2QgXSA9IHZhbDsKCQkJfQoJ
CX0sIG1ldGhvZCwgdmFsLCBhcmd1bWVudHMubGVuZ3RoLCBudWxsICk7Cgl9Owp9
KTsKCmZ1bmN0aW9uIGdldFdpbmRvdyggZWxlbSApIHsKCXJldHVybiBqUXVlcnku
aXNXaW5kb3coIGVsZW0gKSA/CgkJZWxlbSA6CgkJZWxlbS5ub2RlVHlwZSA9PT0g
OSA/CgkJCWVsZW0uZGVmYXVsdFZpZXcgfHwgZWxlbS5wYXJlbnRXaW5kb3cgOgoJ
CQlmYWxzZTsKfQoKCgoKLy8gQ3JlYXRlIHdpZHRoLCBoZWlnaHQsIGlubmVySGVp
Z2h0LCBpbm5lcldpZHRoLCBvdXRlckhlaWdodCBhbmQgb3V0ZXJXaWR0aCBtZXRo
b2RzCmpRdWVyeS5lYWNoKCB7IEhlaWdodDogImhlaWdodCIsIFdpZHRoOiAid2lk
dGgiIH0sIGZ1bmN0aW9uKCBuYW1lLCB0eXBlICkgewoJdmFyIGNsaWVudFByb3Ag
PSAiY2xpZW50IiArIG5hbWUsCgkJc2Nyb2xsUHJvcCA9ICJzY3JvbGwiICsgbmFt
ZSwKCQlvZmZzZXRQcm9wID0gIm9mZnNldCIgKyBuYW1lOwoKCS8vIGlubmVySGVp
Z2h0IGFuZCBpbm5lcldpZHRoCglqUXVlcnkuZm5bICJpbm5lciIgKyBuYW1lIF0g
PSBmdW5jdGlvbigpIHsKCQl2YXIgZWxlbSA9IHRoaXNbMF07CgkJcmV0dXJuIGVs
ZW0gPwoJCQllbGVtLnN0eWxlID8KCQkJcGFyc2VGbG9hdCggalF1ZXJ5LmNzcygg
ZWxlbSwgdHlwZSwgInBhZGRpbmciICkgKSA6CgkJCXRoaXNbIHR5cGUgXSgpIDoK
CQkJbnVsbDsKCX07CgoJLy8gb3V0ZXJIZWlnaHQgYW5kIG91dGVyV2lkdGgKCWpR
dWVyeS5mblsgIm91dGVyIiArIG5hbWUgXSA9IGZ1bmN0aW9uKCBtYXJnaW4gKSB7
CgkJdmFyIGVsZW0gPSB0aGlzWzBdOwoJCXJldHVybiBlbGVtID8KCQkJZWxlbS5z
dHlsZSA/CgkJCXBhcnNlRmxvYXQoIGpRdWVyeS5jc3MoIGVsZW0sIHR5cGUsIG1h
cmdpbiA/ICJtYXJnaW4iIDogImJvcmRlciIgKSApIDoKCQkJdGhpc1sgdHlwZSBd
KCkgOgoJCQludWxsOwoJfTsKCglqUXVlcnkuZm5bIHR5cGUgXSA9IGZ1bmN0aW9u
KCB2YWx1ZSApIHsKCQlyZXR1cm4galF1ZXJ5LmFjY2VzcyggdGhpcywgZnVuY3Rp
b24oIGVsZW0sIHR5cGUsIHZhbHVlICkgewoJCQl2YXIgZG9jLCBkb2NFbGVtUHJv
cCwgb3JpZywgcmV0OwoKCQkJaWYgKCBqUXVlcnkuaXNXaW5kb3coIGVsZW0gKSAp
IHsKCQkJCS8vIDNyZCBjb25kaXRpb24gYWxsb3dzIE5va2lhIHN1cHBvcnQsIGFz
IGl0IHN1cHBvcnRzIHRoZSBkb2NFbGVtIHByb3AgYnV0IG5vdCBDU1MxQ29tcGF0
CgkJCQlkb2MgPSBlbGVtLmRvY3VtZW50OwoJCQkJZG9jRWxlbVByb3AgPSBkb2Mu
ZG9jdW1lbnRFbGVtZW50WyBjbGllbnRQcm9wIF07CgkJCQlyZXR1cm4galF1ZXJ5
LnN1cHBvcnQuYm94TW9kZWwgJiYgZG9jRWxlbVByb3AgfHwKCQkJCQlkb2MuYm9k
eSAmJiBkb2MuYm9keVsgY2xpZW50UHJvcCBdIHx8IGRvY0VsZW1Qcm9wOwoJCQl9
CgoJCQkvLyBHZXQgZG9jdW1lbnQgd2lkdGggb3IgaGVpZ2h0CgkJCWlmICggZWxl
bS5ub2RlVHlwZSA9PT0gOSApIHsKCQkJCS8vIEVpdGhlciBzY3JvbGxbV2lkdGgv
SGVpZ2h0XSBvciBvZmZzZXRbV2lkdGgvSGVpZ2h0XSwgd2hpY2hldmVyIGlzIGdy
ZWF0ZXIKCQkJCWRvYyA9IGVsZW0uZG9jdW1lbnRFbGVtZW50OwoKCQkJCS8vIHdo
ZW4gYSB3aW5kb3cgPiBkb2N1bWVudCwgSUU2IHJlcG9ydHMgYSBvZmZzZXRbV2lk
dGgvSGVpZ2h0XSA+IGNsaWVudFtXaWR0aC9IZWlnaHRdCgkJCQkvLyBzbyB3ZSBj
YW4ndCB1c2UgbWF4LCBhcyBpdCdsbCBjaG9vc2UgdGhlIGluY29ycmVjdCBvZmZz
ZXRbV2lkdGgvSGVpZ2h0XQoJCQkJLy8gaW5zdGVhZCB3ZSB1c2UgdGhlIGNvcnJl
Y3QgY2xpZW50W1dpZHRoL0hlaWdodF0KCQkJCS8vIHN1cHBvcnQ6SUU2CgkJCQlp
ZiAoIGRvY1sgY2xpZW50UHJvcCBdID49IGRvY1sgc2Nyb2xsUHJvcCBdICkgewoJ
CQkJCXJldHVybiBkb2NbIGNsaWVudFByb3AgXTsKCQkJCX0KCgkJCQlyZXR1cm4g
TWF0aC5tYXgoCgkJCQkJZWxlbS5ib2R5WyBzY3JvbGxQcm9wIF0sIGRvY1sgc2Ny
b2xsUHJvcCBdLAoJCQkJCWVsZW0uYm9keVsgb2Zmc2V0UHJvcCBdLCBkb2NbIG9m
ZnNldFByb3AgXQoJCQkJKTsKCQkJfQoKCQkJLy8gR2V0IHdpZHRoIG9yIGhlaWdo
dCBvbiB0aGUgZWxlbWVudAoJCQlpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgKSB7
CgkJCQlvcmlnID0galF1ZXJ5LmNzcyggZWxlbSwgdHlwZSApOwoJCQkJcmV0ID0g
cGFyc2VGbG9hdCggb3JpZyApOwoJCQkJcmV0dXJuIGpRdWVyeS5pc051bWVyaWMo
IHJldCApID8gcmV0IDogb3JpZzsKCQkJfQoKCQkJLy8gU2V0IHRoZSB3aWR0aCBv
ciBoZWlnaHQgb24gdGhlIGVsZW1lbnQKCQkJalF1ZXJ5KCBlbGVtICkuY3NzKCB0
eXBlLCB2YWx1ZSApOwoJCX0sIHR5cGUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3Ro
LCBudWxsICk7Cgl9Owp9KTsKCgoKCi8vIEV4cG9zZSBqUXVlcnkgdG8gdGhlIGds
b2JhbCBvYmplY3QKd2luZG93LmpRdWVyeSA9IHdpbmRvdy4kID0galF1ZXJ5OwoK
Ly8gRXhwb3NlIGpRdWVyeSBhcyBhbiBBTUQgbW9kdWxlLCBidXQgb25seSBmb3Ig
QU1EIGxvYWRlcnMgdGhhdAovLyB1bmRlcnN0YW5kIHRoZSBpc3N1ZXMgd2l0aCBs
b2FkaW5nIG11bHRpcGxlIHZlcnNpb25zIG9mIGpRdWVyeQovLyBpbiBhIHBhZ2Ug
dGhhdCBhbGwgbWlnaHQgY2FsbCBkZWZpbmUoKS4gVGhlIGxvYWRlciB3aWxsIGlu
ZGljYXRlCi8vIHRoZXkgaGF2ZSBzcGVjaWFsIGFsbG93YW5jZXMgZm9yIG11bHRp
cGxlIGpRdWVyeSB2ZXJzaW9ucyBieQovLyBzcGVjaWZ5aW5nIGRlZmluZS5hbWQu
alF1ZXJ5ID0gdHJ1ZS4gUmVnaXN0ZXIgYXMgYSBuYW1lZCBtb2R1bGUsCi8vIHNp
bmNlIGpRdWVyeSBjYW4gYmUgY29uY2F0ZW5hdGVkIHdpdGggb3RoZXIgZmlsZXMg
dGhhdCBtYXkgdXNlIGRlZmluZSwKLy8gYnV0IG5vdCB1c2UgYSBwcm9wZXIgY29u
Y2F0ZW5hdGlvbiBzY3JpcHQgdGhhdCB1bmRlcnN0YW5kcyBhbm9ueW1vdXMKLy8g
QU1EIG1vZHVsZXMuIEEgbmFtZWQgQU1EIGlzIHNhZmVzdCBhbmQgbW9zdCByb2J1
c3Qgd2F5IHRvIHJlZ2lzdGVyLgovLyBMb3dlcmNhc2UganF1ZXJ5IGlzIHVzZWQg
YmVjYXVzZSBBTUQgbW9kdWxlIG5hbWVzIGFyZSBkZXJpdmVkIGZyb20KLy8gZmls
ZSBuYW1lcywgYW5kIGpRdWVyeSBpcyBub3JtYWxseSBkZWxpdmVyZWQgaW4gYSBs
b3dlcmNhc2UgZmlsZSBuYW1lLgovLyBEbyB0aGlzIGFmdGVyIGNyZWF0aW5nIHRo
ZSBnbG9iYWwgc28gdGhhdCBpZiBhbiBBTUQgbW9kdWxlIHdhbnRzIHRvIGNhbGwK
Ly8gbm9Db25mbGljdCB0byBoaWRlIHRoaXMgdmVyc2lvbiBvZiBqUXVlcnksIGl0
IHdpbGwgd29yay4KaWYgKCB0eXBlb2YgZGVmaW5lID09PSAiZnVuY3Rpb24iICYm
IGRlZmluZS5hbWQgJiYgZGVmaW5lLmFtZC5qUXVlcnkgKSB7CglkZWZpbmUoICJq
cXVlcnkiLCBbXSwgZnVuY3Rpb24gKCkgeyByZXR1cm4galF1ZXJ5OyB9ICk7Cn0K
CgoKfSkoIHdpbmRvdyApOw==

------------xTmqCi4MdczBqywUSIvdms
Content-Disposition: inline; filename=codemirror.js
Content-Type: application/javascript; name=codemirror.js
Content-Location: http://threedubmedia.com/inc/codemirror/codemirror.js
Content-Transfer-Encoding: Base64

LyogQ29kZU1pcnJvciBtYWluIG1vZHVsZQogKgogKiBJbXBsZW1lbnRzIHRoZSBD
b2RlTWlycm9yIGNvbnN0cnVjdG9yIGFuZCBwcm90b3R5cGUsIHdoaWNoIHRha2Ug
Y2FyZQogKiBvZiBpbml0aWFsaXppbmcgdGhlIGVkaXRvciBmcmFtZSwgYW5kIHBy
b3ZpZGluZyB0aGUgb3V0c2lkZSBpbnRlcmZhY2UuCiAqLwoKLy8gVGhlIENvZGVN
aXJyb3JDb25maWcgb2JqZWN0IGlzIHVzZWQgdG8gc3BlY2lmeSBhIGRlZmF1bHQK
Ly8gY29uZmlndXJhdGlvbi4gSWYgeW91IHNwZWNpZnkgc3VjaCBhbiBvYmplY3Qg
YmVmb3JlIGxvYWRpbmcgdGhpcwovLyBmaWxlLCB0aGUgdmFsdWVzIHlvdSBwdXQg
aW50byBpdCB3aWxsIG92ZXJyaWRlIHRoZSBkZWZhdWx0cyBnaXZlbgovLyBiZWxv
dy4gWW91IGNhbiBhbHNvIGFzc2lnbiB0byBpdCBhZnRlciBsb2FkaW5nLgp2YXIg
Q29kZU1pcnJvckNvbmZpZyA9IHdpbmRvdy5Db2RlTWlycm9yQ29uZmlnIHx8IHt9
OwoKdmFyIENvZGVNaXJyb3IgPSAoZnVuY3Rpb24oKXsKICBmdW5jdGlvbiBzZXRE
ZWZhdWx0cyhvYmplY3QsIGRlZmF1bHRzKSB7CiAgICBmb3IgKHZhciBvcHRpb24g
aW4gZGVmYXVsdHMpIHsKICAgICAgaWYgKCFvYmplY3QuaGFzT3duUHJvcGVydHko
b3B0aW9uKSkKICAgICAgICBvYmplY3Rbb3B0aW9uXSA9IGRlZmF1bHRzW29wdGlv
bl07CiAgICB9CiAgfQogIGZ1bmN0aW9uIGZvckVhY2goYXJyYXksIGFjdGlvbikg
ewogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykKICAg
ICAgYWN0aW9uKGFycmF5W2ldKTsKICB9CgogIC8vIFRoZXNlIGRlZmF1bHQgb3B0
aW9ucyBjYW4gYmUgb3ZlcnJpZGRlbiBieSBwYXNzaW5nIGEgc2V0IG9mCiAgLy8g
b3B0aW9ucyB0byBhIHNwZWNpZmljIENvZGVNaXJyb3IgY29uc3RydWN0b3IuIFNl
ZSBtYW51YWwuaHRtbCBmb3IKICAvLyB0aGVpciBtZWFuaW5nLgogIHNldERlZmF1
bHRzKENvZGVNaXJyb3JDb25maWcsIHsKICAgIHN0eWxlc2hlZXQ6ICIiLAogICAg
cGF0aDogIiIsCiAgICBwYXJzZXJmaWxlOiBbXSwKICAgIGJhc2VmaWxlczogWyJ1
dGlsLmpzIiwgInN0cmluZ3N0cmVhbS5qcyIsICJzZWxlY3QuanMiLCAidW5kby5q
cyIsICJlZGl0b3IuanMiLCAidG9rZW5pemUuanMiXSwKICAgIGlmcmFtZUNsYXNz
OiBudWxsLAogICAgcGFzc0RlbGF5OiAyMDAsCiAgICBwYXNzVGltZTogNTAsCiAg
ICBsaW5lTnVtYmVyRGVsYXk6IDIwMCwKICAgIGxpbmVOdW1iZXJUaW1lOiA1MCwK
ICAgIGNvbnRpbnVvdXNTY2FubmluZzogZmFsc2UsCiAgICBzYXZlRnVuY3Rpb246
IG51bGwsCiAgICBvbkNoYW5nZTogbnVsbCwKICAgIHVuZG9EZXB0aDogNTAsCiAg
ICB1bmRvRGVsYXk6IDgwMCwKICAgIGRpc2FibGVTcGVsbGNoZWNrOiB0cnVlLAog
ICAgdGV4dFdyYXBwaW5nOiB0cnVlLAogICAgcmVhZE9ubHk6IGZhbHNlLAogICAg
d2lkdGg6ICIiLAogICAgaGVpZ2h0OiAiMzAwcHgiLAogICAgYXV0b01hdGNoUGFy
ZW5zOiBmYWxzZSwKICAgIHBhcnNlckNvbmZpZzogbnVsbCwKICAgIHRhYk1vZGU6
ICJpbmRlbnQiLCAvLyBvciAic3BhY2VzIiwgImRlZmF1bHQiLCAic2hpZnQiCiAg
ICByZWluZGVudE9uTG9hZDogZmFsc2UsCiAgICBhY3RpdmVUb2tlbnM6IG51bGws
CiAgICBjdXJzb3JBY3Rpdml0eTogbnVsbCwKICAgIGxpbmVOdW1iZXJzOiBmYWxz
ZSwKICAgIGluZGVudFVuaXQ6IDIsCiAgICBkb21haW46IG51bGwKICB9KTsKCiAg
ZnVuY3Rpb24gYWRkTGluZU51bWJlckRpdihjb250YWluZXIpIHsKICAgIHZhciBu
dW1zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiRElWIiksCiAgICAgICAgc2Ny
b2xsZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJESVYiKTsKICAgIG51bXMu
c3R5bGUucG9zaXRpb24gPSAiYWJzb2x1dGUiOwogICAgbnVtcy5zdHlsZS5oZWln
aHQgPSAiMTAwJSI7CiAgICBpZiAobnVtcy5zdHlsZS5zZXRFeHByZXNzaW9uKSB7
CiAgICAgIHRyeSB7bnVtcy5zdHlsZS5zZXRFeHByZXNzaW9uKCJoZWlnaHQiLCAi
dGhpcy5wcmV2aW91c1NpYmxpbmcub2Zmc2V0SGVpZ2h0ICsgJ3B4JyIpO30KICAg
ICAgY2F0Y2goZSkge30gLy8gU2VlbXMgdG8gdGhyb3cgJ05vdCBJbXBsZW1lbnRl
ZCcgb24gc29tZSBJRTggdmVyc2lvbnMKICAgIH0KICAgIG51bXMuc3R5bGUudG9w
ID0gIjBweCI7CiAgICBudW1zLnN0eWxlLm92ZXJmbG93ID0gImhpZGRlbiI7CiAg
ICBjb250YWluZXIuYXBwZW5kQ2hpbGQobnVtcyk7CiAgICBzY3JvbGxlci5jbGFz
c05hbWUgPSAiQ29kZU1pcnJvci1saW5lLW51bWJlcnMiOwogICAgbnVtcy5hcHBl
bmRDaGlsZChzY3JvbGxlcik7CiAgICByZXR1cm4gbnVtczsKICB9CgogIGZ1bmN0
aW9uIGZyYW1lSFRNTChvcHRpb25zKSB7CiAgICBpZiAodHlwZW9mIG9wdGlvbnMu
cGFyc2VyZmlsZSA9PSAic3RyaW5nIikKICAgICAgb3B0aW9ucy5wYXJzZXJmaWxl
ID0gW29wdGlvbnMucGFyc2VyZmlsZV07CiAgICBpZiAodHlwZW9mIG9wdGlvbnMu
c3R5bGVzaGVldCA9PSAic3RyaW5nIikKICAgICAgb3B0aW9ucy5zdHlsZXNoZWV0
ID0gW29wdGlvbnMuc3R5bGVzaGVldF07CgogICAgdmFyIGh0bWwgPSBbIjwhRE9D
VFlQRSBIVE1MIFBVQkxJQyBcIi0vL1czQy8vRFREIEhUTUwgNC4wIFRyYW5zaXRp
b25hbC8vRU5cIiBcImh0dHA6Ly93d3cudzMub3JnL1RSL2h0bWw0L2xvb3NlLmR0
ZFwiPjxodG1sPjxoZWFkPiJdOwogICAgLy8gSGFjayB0byB3b3JrIGFyb3VuZCBh
IGJ1bmNoIG9mIElFOC1zcGVjaWZpYyBwcm9ibGVtcy4KICAgIGh0bWwucHVzaCgi
PG1ldGEgaHR0cC1lcXVpdj1cIlgtVUEtQ29tcGF0aWJsZVwiIGNvbnRlbnQ9XCJJ
RT1FbXVsYXRlSUU3XCIvPiIpOwogICAgZm9yRWFjaChvcHRpb25zLnN0eWxlc2hl
ZXQsIGZ1bmN0aW9uKGZpbGUpIHsKICAgICAgaHRtbC5wdXNoKCI8bGluayByZWw9
XCJzdHlsZXNoZWV0XCIgdHlwZT1cInRleHQvY3NzXCIgaHJlZj1cIiIgKyBmaWxl
ICsgIlwiLz4iKTsKICAgIH0pOwogICAgZm9yRWFjaChvcHRpb25zLmJhc2VmaWxl
cy5jb25jYXQob3B0aW9ucy5wYXJzZXJmaWxlKSwgZnVuY3Rpb24oZmlsZSkgewog
ICAgICBodG1sLnB1c2goIjxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwi
IHNyYz1cIiIgKyBvcHRpb25zLnBhdGggKyBmaWxlICsgIlwiPjwiICsgIi9zY3Jp
cHQ+Iik7CiAgICB9KTsKICAgIGh0bWwucHVzaCgiPC9oZWFkPjxib2R5IHN0eWxl
PVwiYm9yZGVyLXdpZHRoOiAwO1wiIGNsYXNzPVwiZWRpdGJveFwiIHNwZWxsY2hl
Y2s9XCIiICsKICAgICAgICAgICAgICAob3B0aW9ucy5kaXNhYmxlU3BlbGxjaGVj
ayA/ICJmYWxzZSIgOiAidHJ1ZSIpICsgIlwiPjwvYm9keT48L2h0bWw+Iik7CiAg
ICByZXR1cm4gaHRtbC5qb2luKCIiKTsKICB9CgogIHZhciBpbnRlcm5ldEV4cGxv
cmVyID0gZG9jdW1lbnQuc2VsZWN0aW9uICYmIHdpbmRvdy5BY3RpdmVYT2JqZWN0
ICYmIC9NU0lFLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpOwoKICBmdW5jdGlv
biBDb2RlTWlycm9yKHBsYWNlLCBvcHRpb25zKSB7CiAgICAvLyBCYWNrd2FyZCBj
b21wYXRpYmlsaXR5IGZvciBkZXByZWNhdGVkIG9wdGlvbnMuCiAgICBpZiAob3B0
aW9ucy5kdW1iVGFicykgb3B0aW9ucy50YWJNb2RlID0gInNwYWNlcyI7CiAgICBl
bHNlIGlmIChvcHRpb25zLm5vcm1hbFRhYikgb3B0aW9ucy50YWJNb2RlID0gImRl
ZmF1bHQiOwoKICAgIC8vIFVzZSBwYXNzZWQgb3B0aW9ucywgaWYgYW55LCB0byBv
dmVycmlkZSBkZWZhdWx0cy4KICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgPSBv
cHRpb25zIHx8IHt9OwogICAgc2V0RGVmYXVsdHMob3B0aW9ucywgQ29kZU1pcnJv
ckNvbmZpZyk7CgogICAgdmFyIGZyYW1lID0gdGhpcy5mcmFtZSA9IGRvY3VtZW50
LmNyZWF0ZUVsZW1lbnQoIklGUkFNRSIpOwogICAgaWYgKG9wdGlvbnMuaWZyYW1l
Q2xhc3MpIGZyYW1lLmNsYXNzTmFtZSA9IG9wdGlvbnMuaWZyYW1lQ2xhc3M7CiAg
ICBmcmFtZS5mcmFtZUJvcmRlciA9IDA7CiAgICBmcmFtZS5zdHlsZS5ib3JkZXIg
PSAiMCI7CiAgICBmcmFtZS5zdHlsZS53aWR0aCA9ICcxMDAlJzsKICAgIGZyYW1l
LnN0eWxlLmhlaWdodCA9ICcxMDAlJzsKICAgIC8vIGRpc3BsYXk6IGJsb2NrIG9j
Y2FzaW9uYWxseSBzdXBwcmVzc2VzIHNvbWUgRmlyZWZveCBidWdzLCBzbyB3ZQog
ICAgLy8gYWx3YXlzIGFkZCBpdCwgcmVkdW5kYW50IGFzIGl0IHNvdW5kcy4KICAg
IGZyYW1lLnN0eWxlLmRpc3BsYXkgPSAiYmxvY2siOwoKICAgIHZhciBkaXYgPSB0
aGlzLndyYXBwaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiRElWIik7CiAg
ICBkaXYuc3R5bGUucG9zaXRpb24gPSAicmVsYXRpdmUiOwogICAgZGl2LmNsYXNz
TmFtZSA9ICJDb2RlTWlycm9yLXdyYXBwaW5nIjsKICAgIGRpdi5zdHlsZS53aWR0
aCA9IG9wdGlvbnMud2lkdGg7CiAgICBkaXYuc3R5bGUuaGVpZ2h0ID0gb3B0aW9u
cy5oZWlnaHQ7CiAgICAvLyBUaGlzIGlzIHVzZWQgYnkgRWRpdG9yLnJlcm91dGVQ
YXN0ZUV2ZW50CiAgICB2YXIgdGVIYWNrID0gdGhpcy50ZXh0YXJlYUhhY2sgPSBk
b2N1bWVudC5jcmVhdGVFbGVtZW50KCJURVhUQVJFQSIpOwogICAgZGl2LmFwcGVu
ZENoaWxkKHRlSGFjayk7CiAgICB0ZUhhY2suc3R5bGUucG9zaXRpb24gPSAiYWJz
b2x1dGUiOwogICAgdGVIYWNrLnN0eWxlLmxlZnQgPSAiLTEwMDAwcHgiOwogICAg
dGVIYWNrLnN0eWxlLndpZHRoID0gIjEwcHgiOwoKICAgIC8vIExpbmsgYmFjayB0
byB0aGlzIG9iamVjdCwgc28gdGhhdCB0aGUgZWRpdG9yIGNhbiBmZXRjaCBvcHRp
b25zCiAgICAvLyBhbmQgYWRkIGEgcmVmZXJlbmNlIHRvIGl0c2VsZi4KICAgIGZy
YW1lLkNvZGVNaXJyb3IgPSB0aGlzOwogICAgaWYgKG9wdGlvbnMuZG9tYWluICYm
IGludGVybmV0RXhwbG9yZXIpIHsKICAgICAgdGhpcy5odG1sID0gZnJhbWVIVE1M
KG9wdGlvbnMpOwogICAgICBmcmFtZS5zcmMgPSAiamF2YXNjcmlwdDooZnVuY3Rp
b24oKXtkb2N1bWVudC5vcGVuKCk7IiArCiAgICAgICAgKG9wdGlvbnMuZG9tYWlu
ID8gImRvY3VtZW50LmRvbWFpbj1cIiIgKyBvcHRpb25zLmRvbWFpbiArICJcIjsi
IDogIiIpICsKICAgICAgICAiZG9jdW1lbnQud3JpdGUod2luZG93LmZyYW1lRWxl
bWVudC5Db2RlTWlycm9yLmh0bWwpO2RvY3VtZW50LmNsb3NlKCk7fSkoKSI7CiAg
ICB9CiAgICBlbHNlIHsKICAgICAgZnJhbWUuc3JjID0gImphdmFzY3JpcHQ6ZmFs
c2UiOwogICAgfQoKICAgIGlmIChwbGFjZS5hcHBlbmRDaGlsZCkgcGxhY2UuYXBw
ZW5kQ2hpbGQoZGl2KTsKICAgIGVsc2UgcGxhY2UoZGl2KTsKICAgIGRpdi5hcHBl
bmRDaGlsZChmcmFtZSk7CiAgICBpZiAob3B0aW9ucy5saW5lTnVtYmVycykgdGhp
cy5saW5lTnVtYmVycyA9IGFkZExpbmVOdW1iZXJEaXYoZGl2KTsKCiAgICB0aGlz
LndpbiA9IGZyYW1lLmNvbnRlbnRXaW5kb3c7CiAgICBpZiAoIW9wdGlvbnMuZG9t
YWluIHx8ICFpbnRlcm5ldEV4cGxvcmVyKSB7CiAgICAgIHRoaXMud2luLmRvY3Vt
ZW50Lm9wZW4oKTsKICAgICAgdGhpcy53aW4uZG9jdW1lbnQud3JpdGUoZnJhbWVI
VE1MKG9wdGlvbnMpKTsKICAgICAgdGhpcy53aW4uZG9jdW1lbnQuY2xvc2UoKTsK
ICAgIH0KICB9CgogIENvZGVNaXJyb3IucHJvdG90eXBlID0gewogICAgaW5pdDog
ZnVuY3Rpb24oKSB7CiAgICAgIGlmICh0aGlzLm9wdGlvbnMuaW5pdENhbGxiYWNr
KSB0aGlzLm9wdGlvbnMuaW5pdENhbGxiYWNrKHRoaXMpOwogICAgICBpZiAodGhp
cy5vcHRpb25zLmxpbmVOdW1iZXJzKSB0aGlzLmFjdGl2YXRlTGluZU51bWJlcnMo
KTsKICAgICAgaWYgKHRoaXMub3B0aW9ucy5yZWluZGVudE9uTG9hZCkgdGhpcy5y
ZWluZGVudCgpOwogICAgfSwKCiAgICBnZXRDb2RlOiBmdW5jdGlvbigpIHtyZXR1
cm4gdGhpcy5lZGl0b3IuZ2V0Q29kZSgpO30sCiAgICBzZXRDb2RlOiBmdW5jdGlv
bihjb2RlKSB7dGhpcy5lZGl0b3IuaW1wb3J0Q29kZShjb2RlKTt9LAogICAgc2Vs
ZWN0aW9uOiBmdW5jdGlvbigpIHt0aGlzLmZvY3VzSWZJRSgpOyByZXR1cm4gdGhp
cy5lZGl0b3Iuc2VsZWN0ZWRUZXh0KCk7fSwKICAgIHJlaW5kZW50OiBmdW5jdGlv
bigpIHt0aGlzLmVkaXRvci5yZWluZGVudCgpO30sCiAgICByZWluZGVudFNlbGVj
dGlvbjogZnVuY3Rpb24oKSB7dGhpcy5mb2N1c0lmSUUoKTsgdGhpcy5lZGl0b3Iu
cmVpbmRlbnRTZWxlY3Rpb24obnVsbCk7fSwKCiAgICBmb2N1c0lmSUU6IGZ1bmN0
aW9uKCkgewogICAgICAvLyBpbiBJRSwgYSBsb3Qgb2Ygc2VsZWN0aW9uLXJlbGF0
ZWQgZnVuY3Rpb25hbGl0eSBvbmx5IHdvcmtzIHdoZW4gdGhlIGZyYW1lIGlzIGZv
Y3VzZWQKICAgICAgaWYgKHRoaXMud2luLnNlbGVjdC5pZV9zZWxlY3Rpb24pIHRo
aXMuZm9jdXMoKTsKICAgIH0sCiAgICBmb2N1czogZnVuY3Rpb24oKSB7CiAgICAg
IHRoaXMud2luLmZvY3VzKCk7CiAgICAgIGlmICh0aGlzLmVkaXRvci5zZWxlY3Rp
b25TbmFwc2hvdCkgLy8gSUUgaGFjawogICAgICAgIHRoaXMud2luLnNlbGVjdC5z
ZXRCb29rbWFyayh0aGlzLndpbi5kb2N1bWVudC5ib2R5LCB0aGlzLmVkaXRvci5z
ZWxlY3Rpb25TbmFwc2hvdCk7CiAgICB9LAogICAgcmVwbGFjZVNlbGVjdGlvbjog
ZnVuY3Rpb24odGV4dCkgewogICAgICB0aGlzLmZvY3VzKCk7CiAgICAgIHRoaXMu
ZWRpdG9yLnJlcGxhY2VTZWxlY3Rpb24odGV4dCk7CiAgICAgIHJldHVybiB0cnVl
OwogICAgfSwKICAgIHJlcGxhY2VDaGFyczogZnVuY3Rpb24odGV4dCwgc3RhcnQs
IGVuZCkgewogICAgICB0aGlzLmVkaXRvci5yZXBsYWNlQ2hhcnModGV4dCwgc3Rh
cnQsIGVuZCk7CiAgICB9LAogICAgZ2V0U2VhcmNoQ3Vyc29yOiBmdW5jdGlvbihz
dHJpbmcsIGZyb21DdXJzb3IsIGNhc2VGb2xkKSB7CiAgICAgIHJldHVybiB0aGlz
LmVkaXRvci5nZXRTZWFyY2hDdXJzb3Ioc3RyaW5nLCBmcm9tQ3Vyc29yLCBjYXNl
Rm9sZCk7CiAgICB9LAoKICAgIHVuZG86IGZ1bmN0aW9uKCkge3RoaXMuZWRpdG9y
Lmhpc3RvcnkudW5kbygpO30sCiAgICByZWRvOiBmdW5jdGlvbigpIHt0aGlzLmVk
aXRvci5oaXN0b3J5LnJlZG8oKTt9LAogICAgaGlzdG9yeVNpemU6IGZ1bmN0aW9u
KCkge3JldHVybiB0aGlzLmVkaXRvci5oaXN0b3J5Lmhpc3RvcnlTaXplKCk7fSwK
ICAgIGNsZWFySGlzdG9yeTogZnVuY3Rpb24oKSB7dGhpcy5lZGl0b3IuaGlzdG9y
eS5jbGVhcigpO30sCgogICAgZ3JhYktleXM6IGZ1bmN0aW9uKGNhbGxiYWNrLCBm
aWx0ZXIpIHt0aGlzLmVkaXRvci5ncmFiS2V5cyhjYWxsYmFjaywgZmlsdGVyKTt9
LAogICAgdW5ncmFiS2V5czogZnVuY3Rpb24oKSB7dGhpcy5lZGl0b3IudW5ncmFi
S2V5cygpO30sCgogICAgc2V0UGFyc2VyOiBmdW5jdGlvbihuYW1lKSB7dGhpcy5l
ZGl0b3Iuc2V0UGFyc2VyKG5hbWUpO30sCiAgICBzZXRTcGVsbGNoZWNrOiBmdW5j
dGlvbihvbikge3RoaXMud2luLmRvY3VtZW50LmJvZHkuc3BlbGxjaGVjayA9IG9u
O30sCiAgICBzZXRTdHlsZXNoZWV0OiBmdW5jdGlvbihuYW1lcykgewogICAgICBp
ZiAodHlwZW9mIG5hbWVzID09PSAic3RyaW5nIikgbmFtZXMgPSBbbmFtZXNdOwog
ICAgICB2YXIgYWN0aXZlU3R5bGVzaGVldHMgPSB7fTsKICAgICAgdmFyIG1hdGNo
ZWROYW1lcyA9IHt9OwogICAgICB2YXIgbGlua3MgPSB0aGlzLndpbi5kb2N1bWVu
dC5nZXRFbGVtZW50c0J5VGFnTmFtZSgibGluayIpOwogICAgICAvLyBDcmVhdGUg
aGFzaGVzIG9mIGFjdGl2ZSBzdHlsZXNoZWV0cyBhbmQgbWF0Y2hlZCBuYW1lcy4K
ICAgICAgLy8gVGhpcyBpcyBPKG5eMikgYnV0IG4gaXMgZXhwZWN0ZWQgdG8gYmUg
dmVyeSBzbWFsbC4KICAgICAgZm9yICh2YXIgeCA9IDAsIGxpbms7IGxpbmsgPSBs
aW5rc1t4XTsgeCsrKSB7CiAgICAgICAgaWYgKGxpbmsucmVsLmluZGV4T2YoInN0
eWxlc2hlZXQiKSAhPT0gLTEpIHsKICAgICAgICAgIGZvciAodmFyIHkgPSAwOyB5
IDwgbmFtZXMubGVuZ3RoOyB5KyspIHsKICAgICAgICAgICAgdmFyIG5hbWUgPSBu
YW1lc1t5XTsKICAgICAgICAgICAgaWYgKGxpbmsuaHJlZi5zdWJzdHJpbmcobGlu
ay5ocmVmLmxlbmd0aCAtIG5hbWUubGVuZ3RoKSA9PT0gbmFtZSkgewogICAgICAg
ICAgICAgIGFjdGl2ZVN0eWxlc2hlZXRzW2xpbmsuaHJlZl0gPSB0cnVlOwogICAg
ICAgICAgICAgIG1hdGNoZWROYW1lc1tuYW1lXSA9IHRydWU7CiAgICAgICAgICAg
IH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgICAgLy8gQWN0aXZh
dGUgdGhlIHNlbGVjdGVkIHN0eWxlc2hlZXRzIGFuZCBkaXNhYmxlIHRoZSByZXN0
LgogICAgICBmb3IgKHZhciB4ID0gMCwgbGluazsgbGluayA9IGxpbmtzW3hdOyB4
KyspIHsKICAgICAgICBpZiAobGluay5yZWwuaW5kZXhPZigic3R5bGVzaGVldCIp
ICE9PSAtMSkgewogICAgICAgICAgbGluay5kaXNhYmxlZCA9ICEobGluay5ocmVm
IGluIGFjdGl2ZVN0eWxlc2hlZXRzKTsKICAgICAgICB9CiAgICAgIH0KICAgICAg
Ly8gQ3JlYXRlIGFueSBuZXcgc3R5bGVzaGVldHMuCiAgICAgIGZvciAodmFyIHkg
PSAwOyB5IDwgbmFtZXMubGVuZ3RoOyB5KyspIHsKICAgICAgICB2YXIgbmFtZSA9
IG5hbWVzW3ldOwogICAgICAgIGlmICghKG5hbWUgaW4gbWF0Y2hlZE5hbWVzKSkg
ewogICAgICAgICAgdmFyIGxpbmsgPSB0aGlzLndpbi5kb2N1bWVudC5jcmVhdGVF
bGVtZW50KCJsaW5rIik7CiAgICAgICAgICBsaW5rLnJlbCA9ICJzdHlsZXNoZWV0
IjsKICAgICAgICAgIGxpbmsudHlwZSA9ICJ0ZXh0L2NzcyI7CiAgICAgICAgICBs
aW5rLmhyZWYgPSBuYW1lOwogICAgICAgICAgdGhpcy53aW4uZG9jdW1lbnQuZ2V0
RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXS5hcHBlbmRDaGlsZChsaW5rKTsK
ICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBzZXRUZXh0V3JhcHBpbmc6IGZ1
bmN0aW9uKG9uKSB7CiAgICAgIGlmIChvbiA9PSB0aGlzLm9wdGlvbnMudGV4dFdy
YXBwaW5nKSByZXR1cm47CiAgICAgIHRoaXMud2luLmRvY3VtZW50LmJvZHkuc3R5
bGUud2hpdGVTcGFjZSA9IG9uID8gIiIgOiAibm93cmFwIjsKICAgICAgdGhpcy5v
cHRpb25zLnRleHRXcmFwcGluZyA9IG9uOwogICAgICBpZiAodGhpcy5saW5lTnVt
YmVycykgewogICAgICAgIHRoaXMuc2V0TGluZU51bWJlcnMoZmFsc2UpOwogICAg
ICAgIHRoaXMuc2V0TGluZU51bWJlcnModHJ1ZSk7CiAgICAgIH0KICAgIH0sCiAg
ICBzZXRJbmRlbnRVbml0OiBmdW5jdGlvbih1bml0KSB7dGhpcy53aW4uaW5kZW50
VW5pdCA9IHVuaXQ7fSwKICAgIHNldFVuZG9EZXB0aDogZnVuY3Rpb24oZGVwdGgp
IHt0aGlzLmVkaXRvci5oaXN0b3J5Lm1heERlcHRoID0gZGVwdGg7fSwKICAgIHNl
dFRhYk1vZGU6IGZ1bmN0aW9uKG1vZGUpIHt0aGlzLm9wdGlvbnMudGFiTW9kZSA9
IG1vZGU7fSwKICAgIHNldExpbmVOdW1iZXJzOiBmdW5jdGlvbihvbikgewogICAg
ICBpZiAob24gJiYgIXRoaXMubGluZU51bWJlcnMpIHsKICAgICAgICB0aGlzLmxp
bmVOdW1iZXJzID0gYWRkTGluZU51bWJlckRpdih0aGlzLndyYXBwaW5nKTsKICAg
ICAgICB0aGlzLmFjdGl2YXRlTGluZU51bWJlcnMoKTsKICAgICAgfQogICAgICBl
bHNlIGlmICghb24gJiYgdGhpcy5saW5lTnVtYmVycykgewogICAgICAgIHRoaXMu
d3JhcHBpbmcucmVtb3ZlQ2hpbGQodGhpcy5saW5lTnVtYmVycyk7CiAgICAgICAg
dGhpcy53cmFwcGluZy5zdHlsZS5tYXJnaW5MZWZ0ID0gIiI7CiAgICAgICAgdGhp
cy5saW5lTnVtYmVycyA9IG51bGw7CiAgICAgIH0KICAgIH0sCgogICAgY3Vyc29y
UG9zaXRpb246IGZ1bmN0aW9uKHN0YXJ0KSB7dGhpcy5mb2N1c0lmSUUoKTsgcmV0
dXJuIHRoaXMuZWRpdG9yLmN1cnNvclBvc2l0aW9uKHN0YXJ0KTt9LAogICAgZmly
c3RMaW5lOiBmdW5jdGlvbigpIHtyZXR1cm4gdGhpcy5lZGl0b3IuZmlyc3RMaW5l
KCk7fSwKICAgIGxhc3RMaW5lOiBmdW5jdGlvbigpIHtyZXR1cm4gdGhpcy5lZGl0
b3IubGFzdExpbmUoKTt9LAogICAgbmV4dExpbmU6IGZ1bmN0aW9uKGxpbmUpIHty
ZXR1cm4gdGhpcy5lZGl0b3IubmV4dExpbmUobGluZSk7fSwKICAgIHByZXZMaW5l
OiBmdW5jdGlvbihsaW5lKSB7cmV0dXJuIHRoaXMuZWRpdG9yLnByZXZMaW5lKGxp
bmUpO30sCiAgICBsaW5lQ29udGVudDogZnVuY3Rpb24obGluZSkge3JldHVybiB0
aGlzLmVkaXRvci5saW5lQ29udGVudChsaW5lKTt9LAogICAgc2V0TGluZUNvbnRl
bnQ6IGZ1bmN0aW9uKGxpbmUsIGNvbnRlbnQpIHt0aGlzLmVkaXRvci5zZXRMaW5l
Q29udGVudChsaW5lLCBjb250ZW50KTt9LAogICAgcmVtb3ZlTGluZTogZnVuY3Rp
b24obGluZSl7dGhpcy5lZGl0b3IucmVtb3ZlTGluZShsaW5lKTt9LAogICAgaW5z
ZXJ0SW50b0xpbmU6IGZ1bmN0aW9uKGxpbmUsIHBvc2l0aW9uLCBjb250ZW50KSB7
dGhpcy5lZGl0b3IuaW5zZXJ0SW50b0xpbmUobGluZSwgcG9zaXRpb24sIGNvbnRl
bnQpO30sCiAgICBzZWxlY3RMaW5lczogZnVuY3Rpb24oc3RhcnRMaW5lLCBzdGFy
dE9mZnNldCwgZW5kTGluZSwgZW5kT2Zmc2V0KSB7CiAgICAgIHRoaXMud2luLmZv
Y3VzKCk7CiAgICAgIHRoaXMuZWRpdG9yLnNlbGVjdExpbmVzKHN0YXJ0TGluZSwg
c3RhcnRPZmZzZXQsIGVuZExpbmUsIGVuZE9mZnNldCk7CiAgICB9LAogICAgbnRo
TGluZTogZnVuY3Rpb24obikgewogICAgICB2YXIgbGluZSA9IHRoaXMuZmlyc3RM
aW5lKCk7CiAgICAgIGZvciAoOyBuID4gMSAmJiBsaW5lICE9PSBmYWxzZTsgbi0t
KQogICAgICAgIGxpbmUgPSB0aGlzLm5leHRMaW5lKGxpbmUpOwogICAgICByZXR1
cm4gbGluZTsKICAgIH0sCiAgICBsaW5lTnVtYmVyOiBmdW5jdGlvbihsaW5lKSB7
CiAgICAgIHZhciBudW0gPSAwOwogICAgICB3aGlsZSAobGluZSAhPT0gZmFsc2Up
IHsKICAgICAgICBudW0rKzsKICAgICAgICBsaW5lID0gdGhpcy5wcmV2TGluZShs
aW5lKTsKICAgICAgfQogICAgICByZXR1cm4gbnVtOwogICAgfSwKICAgIGp1bXBU
b0xpbmU6IGZ1bmN0aW9uKGxpbmUpIHsKICAgICAgaWYgKHR5cGVvZiBsaW5lID09
ICJudW1iZXIiKSBsaW5lID0gdGhpcy5udGhMaW5lKGxpbmUpOwogICAgICB0aGlz
LnNlbGVjdExpbmVzKGxpbmUsIDApOwogICAgICB0aGlzLndpbi5mb2N1cygpOwog
ICAgfSwKICAgIGN1cnJlbnRMaW5lOiBmdW5jdGlvbigpIHsgLy8gRGVwcmVjYXRl
ZCwgYnV0IHN0aWxsIHRoZXJlIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5CiAg
ICAgIHJldHVybiB0aGlzLmxpbmVOdW1iZXIodGhpcy5jdXJzb3JMaW5lKCkpOwog
ICAgfSwKICAgIGN1cnNvckxpbmU6IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4g
dGhpcy5jdXJzb3JQb3NpdGlvbigpLmxpbmU7CiAgICB9LAoKICAgIGFjdGl2YXRl
TGluZU51bWJlcnM6IGZ1bmN0aW9uKCkgewogICAgICB2YXIgZnJhbWUgPSB0aGlz
LmZyYW1lLCB3aW4gPSBmcmFtZS5jb250ZW50V2luZG93LCBkb2MgPSB3aW4uZG9j
dW1lbnQsIGJvZHkgPSBkb2MuYm9keSwKICAgICAgICAgIG51bXMgPSB0aGlzLmxp
bmVOdW1iZXJzLCBzY3JvbGxlciA9IG51bXMuZmlyc3RDaGlsZCwgc2VsZiA9IHRo
aXM7CiAgICAgIHZhciBiYXJXaWR0aCA9IG51bGw7CgogICAgICBmdW5jdGlvbiBz
aXplQmFyKCkgewogICAgICAgIGlmIChmcmFtZS5vZmZzZXRXaWR0aCA9PSAwKSBy
ZXR1cm47CiAgICAgICAgZm9yICh2YXIgcm9vdCA9IGZyYW1lOyByb290LnBhcmVu
dE5vZGU7IHJvb3QgPSByb290LnBhcmVudE5vZGUpOwogICAgICAgIGlmICghbnVt
cy5wYXJlbnROb2RlIHx8IHJvb3QgIT0gZG9jdW1lbnQgfHwgIXdpbi5FZGl0b3Ip
IHsKICAgICAgICAgIC8vIENsZWFyIGV2ZW50IGhhbmRsZXJzICh0aGVpciBub2Rl
cyBtaWdodCBhbHJlYWR5IGJlIGNvbGxlY3RlZCwgc28gdHJ5L2NhdGNoKQogICAg
ICAgICAgdHJ5e2NsZWFyKCk7fWNhdGNoKGUpe30KICAgICAgICAgIGNsZWFySW50
ZXJ2YWwoc2l6ZUludGVydmFsKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9
CgogICAgICAgIGlmIChudW1zLm9mZnNldFdpZHRoICE9IGJhcldpZHRoKSB7CiAg
ICAgICAgICBiYXJXaWR0aCA9IG51bXMub2Zmc2V0V2lkdGg7CiAgICAgICAgICBu
dW1zLnN0eWxlLmxlZnQgPSAiLSIgKyAoZnJhbWUucGFyZW50Tm9kZS5zdHlsZS5t
YXJnaW5MZWZ0ID0gYmFyV2lkdGggKyAicHgiKTsKICAgICAgICB9CiAgICAgIH0K
ICAgICAgZnVuY3Rpb24gZG9TY3JvbGwoKSB7CiAgICAgICAgbnVtcy5zY3JvbGxU
b3AgPSBib2R5LnNjcm9sbFRvcCB8fCBkb2MuZG9jdW1lbnRFbGVtZW50LnNjcm9s
bFRvcCB8fCAwOwogICAgICB9CiAgICAgIC8vIENsZWFudXAgZnVuY3Rpb24sIHJl
Z2lzdGVyZWQgYnkgbm9uV3JhcHBpbmcgYW5kIHdyYXBwaW5nLgogICAgICB2YXIg
Y2xlYXIgPSBmdW5jdGlvbigpe307CiAgICAgIHNpemVCYXIoKTsKICAgICAgdmFy
IHNpemVJbnRlcnZhbCA9IHNldEludGVydmFsKHNpemVCYXIsIDUwMCk7CgogICAg
ICBmdW5jdGlvbiBub25XcmFwcGluZygpIHsKICAgICAgICB2YXIgbmV4dE51bSA9
IDEsIHBlbmRpbmc7CiAgICAgICAgZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICAg
ICAgdmFyIHRhcmdldCA9IDUwICsgTWF0aC5tYXgoYm9keS5vZmZzZXRIZWlnaHQs
IE1hdGgubWF4KGZyYW1lLm9mZnNldEhlaWdodCwgYm9keS5zY3JvbGxIZWlnaHQg
fHwgMCkpOwogICAgICAgICAgdmFyIGVuZFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRp
bWUoKSArIHNlbGYub3B0aW9ucy5saW5lTnVtYmVyVGltZTsKICAgICAgICAgIHdo
aWxlIChzY3JvbGxlci5vZmZzZXRIZWlnaHQgPCB0YXJnZXQgJiYgKCFzY3JvbGxl
ci5maXJzdENoaWxkIHx8IHNjcm9sbGVyLm9mZnNldEhlaWdodCkpIHsKICAgICAg
ICAgICAgc2Nyb2xsZXIuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVu
dCgiRElWIikpOwogICAgICAgICAgICBzY3JvbGxlci5sYXN0Q2hpbGQuaW5uZXJI
VE1MID0gbmV4dE51bSsrOwogICAgICAgICAgICBpZiAobmV3IERhdGUoKS5nZXRU
aW1lKCkgPiBlbmRUaW1lKSB7CiAgICAgICAgICAgICAgaWYgKHBlbmRpbmcpIGNs
ZWFyVGltZW91dChwZW5kaW5nKTsKICAgICAgICAgICAgICBwZW5kaW5nID0gc2V0
VGltZW91dCh1cGRhdGUsIHNlbGYub3B0aW9ucy5saW5lTnVtYmVyRGVsYXkpOwog
ICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAg
ICAgICAgICBkb1Njcm9sbCgpOwogICAgICAgIH0KICAgICAgICB2YXIgb25TY3Jv
bGwgPSB3aW4uYWRkRXZlbnRIYW5kbGVyKHdpbiwgInNjcm9sbCIsIHVwZGF0ZSwg
dHJ1ZSksCiAgICAgICAgICAgIG9uUmVzaXplID0gd2luLmFkZEV2ZW50SGFuZGxl
cih3aW4sICJyZXNpemUiLCB1cGRhdGUsIHRydWUpOwogICAgICAgIGNsZWFyID0g
ZnVuY3Rpb24oKXtvblNjcm9sbCgpOyBvblJlc2l6ZSgpOyBpZiAocGVuZGluZykg
Y2xlYXJUaW1lb3V0KHBlbmRpbmcpO307CiAgICAgICAgdXBkYXRlKCk7CiAgICAg
IH0KICAgICAgZnVuY3Rpb24gd3JhcHBpbmcoKSB7CiAgICAgICAgdmFyIG5vZGUs
IGxpbmVOdW0sIG5leHQsIHBvczsKCiAgICAgICAgZnVuY3Rpb24gYWRkTnVtKG4p
IHsKICAgICAgICAgIGlmICghbGluZU51bSkgbGluZU51bSA9IHNjcm9sbGVyLmFw
cGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIkRJViIpKTsKICAgICAg
ICAgIGxpbmVOdW0uaW5uZXJIVE1MID0gbjsKICAgICAgICAgIHBvcyA9IGxpbmVO
dW0ub2Zmc2V0SGVpZ2h0ICsgbGluZU51bS5vZmZzZXRUb3A7CiAgICAgICAgICBs
aW5lTnVtID0gbGluZU51bS5uZXh0U2libGluZzsKICAgICAgICB9CiAgICAgICAg
ZnVuY3Rpb24gd29yaygpIHsKICAgICAgICAgIGlmICghc2Nyb2xsZXIucGFyZW50
Tm9kZSB8fCBzY3JvbGxlci5wYXJlbnROb2RlICE9IHNlbGYubGluZU51bWJlcnMp
IHJldHVybjsKCiAgICAgICAgICB2YXIgZW5kVGltZSA9IG5ldyBEYXRlKCkuZ2V0
VGltZSgpICsgc2VsZi5vcHRpb25zLmxpbmVOdW1iZXJUaW1lOwogICAgICAgICAg
d2hpbGUgKG5vZGUpIHsKICAgICAgICAgICAgYWRkTnVtKG5leHQrKyk7CiAgICAg
ICAgICAgIGZvciAoOyBub2RlICYmICF3aW4uaXNCUihub2RlKTsgbm9kZSA9IG5v
ZGUubmV4dFNpYmxpbmcpIHsKICAgICAgICAgICAgICB2YXIgYm90dCA9IG5vZGUu
b2Zmc2V0VG9wICsgbm9kZS5vZmZzZXRIZWlnaHQ7CiAgICAgICAgICAgICAgd2hp
bGUgKHNjcm9sbGVyLm9mZnNldEhlaWdodCAmJiBib3R0IC0gMyA+IHBvcykgYWRk
TnVtKCImbmJzcDsiKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAobm9k
ZSkgbm9kZSA9IG5vZGUubmV4dFNpYmxpbmc7CiAgICAgICAgICAgIGlmIChuZXcg
RGF0ZSgpLmdldFRpbWUoKSA+IGVuZFRpbWUpIHsKICAgICAgICAgICAgICBwZW5k
aW5nID0gc2V0VGltZW91dCh3b3JrLCBzZWxmLm9wdGlvbnMubGluZU51bWJlckRl
bGF5KTsKICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAg
ICAgIH0KICAgICAgICAgIC8vIFdoaWxlIHRoZXJlIGFyZSB1bi1wcm9jZXNzZWQg
bnVtYmVyIERJVnMsIG9yIHRoZSBzY3JvbGxlciBpcyBzbWFsbGVyIHRoYW4gdGhl
IGZyYW1lLi4uCiAgICAgICAgICB2YXIgdGFyZ2V0ID0gNTAgKyBNYXRoLm1heChi
b2R5Lm9mZnNldEhlaWdodCwgTWF0aC5tYXgoZnJhbWUub2Zmc2V0SGVpZ2h0LCBi
b2R5LnNjcm9sbEhlaWdodCB8fCAwKSk7CiAgICAgICAgICB3aGlsZSAobGluZU51
bSB8fCAoc2Nyb2xsZXIub2Zmc2V0SGVpZ2h0IDwgdGFyZ2V0ICYmICghc2Nyb2xs
ZXIuZmlyc3RDaGlsZCB8fCBzY3JvbGxlci5vZmZzZXRIZWlnaHQpKSkKICAgICAg
ICAgICAgYWRkTnVtKG5leHQrKyk7CiAgICAgICAgICBkb1Njcm9sbCgpOwogICAg
ICAgIH0KICAgICAgICBmdW5jdGlvbiBzdGFydCgpIHsKICAgICAgICAgIGRvU2Ny
b2xsKCk7CiAgICAgICAgICBub2RlID0gYm9keS5maXJzdENoaWxkOwogICAgICAg
ICAgbGluZU51bSA9IHNjcm9sbGVyLmZpcnN0Q2hpbGQ7CiAgICAgICAgICBwb3Mg
PSAwOwogICAgICAgICAgbmV4dCA9IDE7CiAgICAgICAgICB3b3JrKCk7CiAgICAg
ICAgfQoKICAgICAgICBzdGFydCgpOwogICAgICAgIHZhciBwZW5kaW5nID0gbnVs
bDsKICAgICAgICBmdW5jdGlvbiB1cGRhdGUoKSB7CiAgICAgICAgICBpZiAocGVu
ZGluZykgY2xlYXJUaW1lb3V0KHBlbmRpbmcpOwogICAgICAgICAgaWYgKHNlbGYu
ZWRpdG9yLmFsbENsZWFuKCkpIHN0YXJ0KCk7CiAgICAgICAgICBlbHNlIHBlbmRp
bmcgPSBzZXRUaW1lb3V0KHVwZGF0ZSwgMjAwKTsKICAgICAgICB9CiAgICAgICAg
c2VsZi51cGRhdGVOdW1iZXJzID0gdXBkYXRlOwogICAgICAgIHZhciBvblNjcm9s
bCA9IHdpbi5hZGRFdmVudEhhbmRsZXIod2luLCAic2Nyb2xsIiwgZG9TY3JvbGws
IHRydWUpLAogICAgICAgICAgICBvblJlc2l6ZSA9IHdpbi5hZGRFdmVudEhhbmRs
ZXIod2luLCAicmVzaXplIiwgdXBkYXRlLCB0cnVlKTsKICAgICAgICBjbGVhciA9
IGZ1bmN0aW9uKCl7CiAgICAgICAgICBpZiAocGVuZGluZykgY2xlYXJUaW1lb3V0
KHBlbmRpbmcpOwogICAgICAgICAgaWYgKHNlbGYudXBkYXRlTnVtYmVycyA9PSB1
cGRhdGUpIHNlbGYudXBkYXRlTnVtYmVycyA9IG51bGw7CiAgICAgICAgICBvblNj
cm9sbCgpOwogICAgICAgICAgb25SZXNpemUoKTsKICAgICAgICB9OwogICAgICB9
CiAgICAgICh0aGlzLm9wdGlvbnMudGV4dFdyYXBwaW5nID8gd3JhcHBpbmcgOiBu
b25XcmFwcGluZykoKTsKICAgIH0KICB9OwoKICBDb2RlTWlycm9yLkludmFsaWRM
aW5lSGFuZGxlID0ge3RvU3RyaW5nOiBmdW5jdGlvbigpe3JldHVybiAiQ29kZU1p
cnJvci5JbnZhbGlkTGluZUhhbmRsZSI7fX07CgogIENvZGVNaXJyb3IucmVwbGFj
ZSA9IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIGlmICh0eXBlb2YgZWxlbWVudCA9
PSAic3RyaW5nIikKICAgICAgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRC
eUlkKGVsZW1lbnQpOwogICAgcmV0dXJuIGZ1bmN0aW9uKG5ld0VsZW1lbnQpIHsK
ICAgICAgZWxlbWVudC5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChuZXdFbGVtZW50
LCBlbGVtZW50KTsKICAgIH07CiAgfTsKCiAgQ29kZU1pcnJvci5mcm9tVGV4dEFy
ZWEgPSBmdW5jdGlvbihhcmVhLCBvcHRpb25zKSB7CiAgICBpZiAodHlwZW9mIGFy
ZWEgPT0gInN0cmluZyIpCiAgICAgIGFyZWEgPSBkb2N1bWVudC5nZXRFbGVtZW50
QnlJZChhcmVhKTsKCiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsKICAgIGlm
IChhcmVhLnN0eWxlLndpZHRoICYmIG9wdGlvbnMud2lkdGggPT0gbnVsbCkKICAg
ICAgb3B0aW9ucy53aWR0aCA9IGFyZWEuc3R5bGUud2lkdGg7CiAgICBpZiAoYXJl
YS5zdHlsZS5oZWlnaHQgJiYgb3B0aW9ucy5oZWlnaHQgPT0gbnVsbCkKICAgICAg
b3B0aW9ucy5oZWlnaHQgPSBhcmVhLnN0eWxlLmhlaWdodDsKICAgIGlmIChvcHRp
b25zLmNvbnRlbnQgPT0gbnVsbCkgb3B0aW9ucy5jb250ZW50ID0gYXJlYS52YWx1
ZTsKCiAgICBpZiAoYXJlYS5mb3JtKSB7CiAgICAgIGZ1bmN0aW9uIHVwZGF0ZUZp
ZWxkKCkgewogICAgICAgIGFyZWEudmFsdWUgPSBtaXJyb3IuZ2V0Q29kZSgpOwog
ICAgICB9CiAgICAgIGlmICh0eXBlb2YgYXJlYS5mb3JtLmFkZEV2ZW50TGlzdGVu
ZXIgPT0gImZ1bmN0aW9uIikKICAgICAgICBhcmVhLmZvcm0uYWRkRXZlbnRMaXN0
ZW5lcigic3VibWl0IiwgdXBkYXRlRmllbGQsIGZhbHNlKTsKICAgICAgZWxzZQog
ICAgICAgIGFyZWEuZm9ybS5hdHRhY2hFdmVudCgib25zdWJtaXQiLCB1cGRhdGVG
aWVsZCk7CiAgICB9CgogICAgZnVuY3Rpb24gaW5zZXJ0KGZyYW1lKSB7CiAgICAg
IGlmIChhcmVhLm5leHRTaWJsaW5nKQogICAgICAgIGFyZWEucGFyZW50Tm9kZS5p
bnNlcnRCZWZvcmUoZnJhbWUsIGFyZWEubmV4dFNpYmxpbmcpOwogICAgICBlbHNl
CiAgICAgICAgYXJlYS5wYXJlbnROb2RlLmFwcGVuZENoaWxkKGZyYW1lKTsKICAg
IH0KCiAgICBhcmVhLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICB2YXIgbWly
cm9yID0gbmV3IENvZGVNaXJyb3IoaW5zZXJ0LCBvcHRpb25zKTsKICAgIHJldHVy
biBtaXJyb3I7CiAgfTsKCiAgQ29kZU1pcnJvci5pc1Byb2JhYmx5U3VwcG9ydGVk
ID0gZnVuY3Rpb24oKSB7CiAgICAvLyBUaGlzIGlzIHJhdGhlciBhd2Z1bCwgYnV0
IGNhbiBiZSB1c2VmdWwuCiAgICB2YXIgbWF0Y2g7CiAgICBpZiAod2luZG93Lm9w
ZXJhKQogICAgICByZXR1cm4gTnVtYmVyKHdpbmRvdy5vcGVyYS52ZXJzaW9uKCkp
ID49IDkuNTI7CiAgICBlbHNlIGlmICgvQXBwbGUgQ29tcHV0ZXJzLCBJbmMvLnRl
c3QobmF2aWdhdG9yLnZlbmRvcikgJiYgKG1hdGNoID0gbmF2aWdhdG9yLnVzZXJB
Z2VudC5tYXRjaCgvVmVyc2lvblwvKFxkKyg/OlwuXGQrKT8pXC4vKSkpCiAgICAg
IHJldHVybiBOdW1iZXIobWF0Y2hbMV0pID49IDM7CiAgICBlbHNlIGlmIChkb2N1
bWVudC5zZWxlY3Rpb24gJiYgd2luZG93LkFjdGl2ZVhPYmplY3QgJiYgKG1hdGNo
ID0gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvTVNJRSAoXGQrKD86XC5cZCop
PylcYi8pKSkKICAgICAgcmV0dXJuIE51bWJlcihtYXRjaFsxXSkgPj0gNjsKICAg
IGVsc2UgaWYgKG1hdGNoID0gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvZ2Vj
a29cLyhcZHs4fSkvaSkpCiAgICAgIHJldHVybiBOdW1iZXIobWF0Y2hbMV0pID49
IDIwMDUwOTAxOwogICAgZWxzZSBpZiAobWF0Y2ggPSBuYXZpZ2F0b3IudXNlckFn
ZW50Lm1hdGNoKC9BcHBsZVdlYktpdFwvKFxkKykvKSkKICAgICAgcmV0dXJuIE51
bWJlcihtYXRjaFsxXSkgPj0gNTI1OwogICAgZWxzZQogICAgICByZXR1cm4gbnVs
bDsKICB9OwoKICByZXR1cm4gQ29kZU1pcnJvcjsKfSkoKTsK

------------xTmqCi4MdczBqywUSIvdms
Content-Disposition: inline; filename=demo.js
Content-Type: application/javascript; name=demo.js
Content-Location: http://threedubmedia.com/inc/js/demo.js
Content-Transfer-Encoding: Base64

alF1ZXJ5KGZ1bmN0aW9uKCQpewoJLy8gY3JlYXRlIHRoZSBkZW1vIGNvbnRyb2xs
ZXIKCXZhciBkZW1vID0gd2luZG93LmRlbW8gPSB7CgkJLy8gc29tZSBoYW5keSBy
ZWZzCgkJJHdpbjogJCggd2luZG93ICksCgkJJGRvYzogJCggZG9jdW1lbnQgKSwK
CQkvLyB0aGUgZGVtbyBsaW5rcwoJCSRsaW5rczogJCgnI2NvbnRlbnQgYS5kZW1v
JykuYmluZCgiY2xpY2siLGZ1bmN0aW9uKCl7CgkJCWRlbW8ubG9hZCggdGhpcyAp
OwoJCQkvLyBwcmV2ZW50IGRlZmF1bHQKCQkJcmV0dXJuIGZhbHNlOwoJCX0pLAoJ
CS8vIHRoZSB3aG9sZSBkZW1vIG1hcmt1cAoJCW1hcmt1cDogWwoJCQknPGRpdiBj
bGFzcz0iZGVtby1vdmVybGF5Ij4nLAoJCQkJJzxkaXYgY2xhc3M9ImRlbW8tbWFz
ayI+PC9kaXY+JywKCQkJCSc8ZGl2IGNsYXNzPSJkZW1vLWxvYWRlciI+TG9hZGlu
ZzwvZGl2PicsCgkJCQknPGRpdiBjbGFzcz0iZGVtby1ib3giPicsCgkJCQkJJzxk
aXYgY2xhc3M9ImRlbW8tY3RybCI+JywKCQkJCQkJJzxhIGhyZWY9IiNlZGl0IiBj
bGFzcz0iZGVtby1lZGl0Ij5FZGl0IFNvdXJjZTwvYT4nLAoJCQkJCQknPGEgaHJl
Zj0iI2V4ZWN1dGUiIGNsYXNzPSJkZW1vLWNvbW1pdCI+RXhlY3V0ZSBTb3VyY2U8
L2E+JywKCQkJCQkJJzxhIGhyZWY9IiNjbG9zZSIgY2xhc3M9ImRlbW8tY2xvc2Ui
PkNsb3NlICZ0aW1lczs8L2E+JywKCQkJCQknPC9kaXY+JywKCQkJCQknPGRpdiBj
bGFzcz0iZGVtby1lZGl0b3IiPjwvZGl2PicsCgkJCQkJJzxpZnJhbWUgc3JjPSIv
Y29kZS9kZW1vL2JsYW5rLyIgZnJhbWVib3JkZXI9IjAiIGNsYXNzPSJkZW1vLWZy
YW1lIiAvPicsCgkJCQkJJzxkaXYgY2xhc3M9ImRlbW8tbmF2Ij4nLAoJCQkJCQkn
PGEgaHJlZj0iIyIgY2xhc3M9ImRlbW8tb3BlbiIgdGl0bGU9Ik9wZW4gZGVtbyBp
biBhIG5ldyB3aW5kb3cuIj5OZXcgV2luZG93PC9hPicsCgkJCQkJCSc8YSBocmVm
PSIjcHJldiIgY2xhc3M9ImRlbW8tcHJldiI+JmxhcXVvOyBQcmV2PC9hPicsCgkJ
CQkJCScgJm1pZGRvdDsgPHNwYW4gY2xhc3M9ImRlbW8tbnVtIj4xLzEwPC9zcGFu
PiAmbWlkZG90OyAnLAoJCQkJCQknPGEgaHJlZj0iI25leHQiIGNsYXNzPSJkZW1v
LW5leHQiPk5leHQgJnJhcXVvOzwvYT4nLAoJCQkJCSc8L2Rpdj4nLAoJCQkJJzwv
ZGl2PicsCgkJCSc8L2Rpdj4nCgkJXSwKCQkvLyBpbml0aWFsaXplIHRoZSBjb21w
b25lbnRzCgkJaW5pdDogZnVuY3Rpb24oKXsKCQkJLy8gdGhlIGNvbnRhaW5lciB0
aGF0IGhvbGRzIGV2ZXJ5dGhpbmcKCQkJZGVtby4kb3ZlcmxheSA9ICQoIGRlbW8u
bWFya3VwLmpvaW4oJycpICkKCQkJCS5hcHBlbmRUbyggZG9jdW1lbnQuYm9keSAp
OwoJCQkvLyB0aGUgc2VtaS10cmFuc3BhcmVudCBtYXNrCgkJCWRlbW8uJG1hc2sg
PSBkZW1vLiRvdmVybGF5LmZpbmQoJy5kZW1vLW1hc2snKQoJCQkJLmJpbmQoIm1v
dXNlZG93biIsIGRlbW8uY2xvc2UgKTsKCQkJLy8gZGlzcGxheXMgYSBsb2FkaW5n
IG1lc3NhZ2UsIG9yIGVycm9yCgkJCWRlbW8uJGxvYWRlciA9IGRlbW8uJG92ZXJs
YXkuZmluZCgnLmRlbW8tbG9hZGVyJyk7CgkJCS8vIHRoZSBjZW50ZXJlZCBjb250
ZW50IGNvbnRhaW5lcgoJCQlkZW1vLiRib3ggPSBkZW1vLiRvdmVybGF5LmZpbmQo
Jy5kZW1vLWJveCcpOwoJCQkvLyB0aGUgZWRpdCBzb3VyY2UgbGluawoJCQlkZW1v
LiRlZGl0bGluayA9IGRlbW8uJG92ZXJsYXkuZmluZCgnLmRlbW8tZWRpdCcpCgkJ
CQkuYmluZCgiY2xpY2siLCBkZW1vLmVkaXQgKTsKCQkJLy8gdGhlIGNvbW1pdCBz
b3VyY2UgY29kZSBsaW5rCgkJCWRlbW8uJGNvbW1pdGxpbmsgPSBkZW1vLiRvdmVy
bGF5LmZpbmQoJy5kZW1vLWNvbW1pdCcpCgkJCQkuYmluZCgiY2xpY2siLCBkZW1v
LmNvbW1pdCApOwoJCQkvLyBzaG93IHRoZSBkZW1vIFVSTCAvIG9wZW4gaW4gbmV3
IHdpbmRvdwoJCQlkZW1vLiRvcGVudXJsID0gZGVtby4kb3ZlcmxheS5maW5kKCcu
ZGVtby1vcGVuJykKCQkJCS5iaW5kKCJjbGljayIsZnVuY3Rpb24oKXsKCQkJCQl3
aW5kb3cub3BlbiggdGhpcy5ocmVmICk7CgkJCQkJcmV0dXJuIGZhbHNlOwkJCQkJ
ICAgCgkJCQl9KTsKCQkJLy8gdGhlICJjbG9zZSIgbGluawoJCQlkZW1vLiRvdmVy
bGF5LmZpbmQoJy5kZW1vLWNsb3NlJykuYmluZCgiY2xpY2siLGZ1bmN0aW9uKCl7
CgkJCQlkZW1vLmNsb3NlKCk7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0pOwoJCQkv
LyB0aGUgInByZXYiIGxpbmsKCQkJZGVtby4kb3ZlcmxheS5maW5kKCcuZGVtby1w
cmV2JykuYmluZCgiY2xpY2siLGZ1bmN0aW9uKCl7CgkJCQlkZW1vLmxvYWQoIGRl
bW8uJGxpbmtzWyBkZW1vLnByZXZfaW5kZXggXSApOwoJCQkJcmV0dXJuIGZhbHNl
OwoJCQl9KTsKCQkJLy8gdGhlICJuZXh0IiBsaW5rCgkJCWRlbW8uJG92ZXJsYXku
ZmluZCgnLmRlbW8tbmV4dCcpLmJpbmQoImNsaWNrIixmdW5jdGlvbigpewoJCQkJ
ZGVtby5sb2FkKCBkZW1vLiRsaW5rc1sgZGVtby5uZXh0X2luZGV4IF0gKTsKCQkJ
CXJldHVybiBmYWxzZTsKCQkJfSk7CgkJCS8vIHRoZSBudW1iZXIgZGlzcGxheQoJ
CQlkZW1vLiRudW0gPSBkZW1vLiRvdmVybGF5LmZpbmQoJy5kZW1vLW51bScpOwoJ
CQkvLyB0aGUgaW5kZXggb2YgdGhlIGxhc3QgbGluawoJCQlkZW1vLmxhc3QgPSBk
ZW1vLiRsaW5rcy5sZW5ndGggLSAxOwoJCQkvLyB0aGUgc291cmNlIGVkaXRvcgoJ
CQlkZW1vLiRlZGl0b3IgPSBkZW1vLiRvdmVybGF5LmZpbmQoJy5kZW1vLWVkaXRv
cicpOwoJCQkvLyB0aGUgZW50aXJlIGJhY2tncm91bmQKCQkJZGVtby4kYmcgPSBk
ZW1vLiRvdmVybGF5LmFkZCggZGVtby4kbWFzayApOwoJCQkvLyBpbnN0YW50aWF0
ZSB0aGUgY29kZW1pcnJvciBlZGl0b3IKCQkJZGVtby5jb2RlbWlycm9yID0gbmV3
IENvZGVNaXJyb3IoIAoJCQkJZGVtby4kZWRpdG9yWzBdLCB7CgkJCQljb250ZW50
OiAnJm5ic3A7JywKCQkJCXdpZHRoOiAiMTAwJSIsCgkJCQloZWlnaHQ6ICIxMDAl
IiwKCQkJCWluZGVudFVuaXQ6IDMsCgkJCQl0YWJNb2RlOiAic2hpZnQiLAoJCQkJ
dGV4dFdyYXBwaW5nOiBmYWxzZSwKCQkJCS8vbGluZU51bWJlcnM6IHRydWUsCgkJ
CQlwYXRoOiAiLi4vLi4vaW5jL2NvZGVtaXJyb3IvIiwKCQkJCXBhcnNlcmZpbGU6
IFsKCQkJCQkicGFyc2V4bWwuanMiLCAKCQkJCQkicGFyc2Vjc3MuanMiLCAKCQkJ
CQkidG9rZW5pemVqYXZhc2NyaXB0LmpzIiwgCgkJCQkJInBhcnNlamF2YXNjcmlw
dC5qcyIsIAoJCQkJCSJwYXJzZWh0bWxtaXhlZC5qcyIKCQkJCQldLAoJCQkJc3R5
bGVzaGVldDogWwoJCQkJCSIuLi8uLi9pbmMvY29kZW1pcnJvci94bWxjb2xvcnMu
Y3NzIiwgCgkJCQkJIi4uLy4uL2luYy9jb2RlbWlycm9yL2pzY29sb3JzLmNzcyIs
IAoJCQkJCSIuLi8uLi9pbmMvY29kZW1pcnJvci9jc3Njb2xvcnMuY3NzIgoJCQkJ
CV0sCgkJCQlpbml0Q2FsbGJhY2s6IGZ1bmN0aW9uKCl7CgkJCQkJZGVtby5jb2Rl
TWlycm9yUmVhZHkgPSB0cnVlOwoJCQkJfQoJCQl9KTsKCQkJLy8gdGhlIGRlbW8g
cGFnZQoJCQlkZW1vLiRpZnJhbWUgPSBkZW1vLiRvdmVybGF5LmZpbmQoJy5kZW1v
LWZyYW1lJyk7CgkJCS8vIGFkZCByZXNpemUgZXZlbnRzCgkJCWRlbW8uJHdpbi5i
aW5kKCJzY3JvbGwgcmVzaXplIiwgZGVtby51cGRhdGUgKTsKCQkJLy8gc2V0IGEg
dGltZW91dCB0byBmYWlsIGlmIGlmcmFtZSBwYWdlIGRvZXNuJ3QgbG9hZAoJCQlk
ZW1vLnRpbWVyID0gc2V0VGltZW91dCggZGVtby5lcnJvciwgMTBlMyApOyAvLyAx
MCBzZWNvbmRzCgkJCS8vIHJlbWVtYmVyIHN0YXRlCgkJCWRlbW8ucmVhZHkgPSB0
cnVlOwoJCX0sCgkJLy8gdXBkYXRlIHRoZSBvdmVybGF5IHBvc2l0aW9uCgkJdXBk
YXRlOiBmdW5jdGlvbigpewoJCQlpZiAoICFkZW1vLmlzb3BlbiApIHJldHVybjsK
CQkJLy8gd2hpY2ggZWxlbWVudCBpcyBiZWluZyBhbGlnbmVkLi4uCgkJCXZhciAk
ZWxlbSA9IGRlbW8uaXNsb2FkZWQgPyBkZW1vLiRib3ggOiBkZW1vLiRsb2FkZXI7
CgkJCS8vIGZvcmNlIG9wYWNpdHkgb24gdGhlIGJhY2tncm91bmQgbWFzawoJCQlk
ZW1vLiRtYXNrLmNzcygnb3BhY2l0eScsIDAuOCApOwoJCQkvLyBmb3JjZSAxMDAl
IGNvdmVyYWdlCgkJCWRlbW8uJGJnLmhlaWdodCggZGVtby4kZG9jLmhlaWdodCgp
ICkud2lkdGgoIGRlbW8uJGRvYy53aWR0aCgpICkuc2hvdygpOwoJCQkvLyBjZW50
ZXIgaGVpZ2h0IGluIHRoZSB2aWV3cG9ydAoJCQkkZWxlbS5jc3MoewoJCQkJdG9w
OiBkZW1vLiRkb2Muc2Nyb2xsVG9wKCkgKyAoIGRlbW8uJHdpbi5oZWlnaHQoKSAt
ICRlbGVtLmhlaWdodCgpICkgLyAyLAoJCQkJbGVmdDogZGVtby4kZG9jLnNjcm9s
bExlZnQoKSArICggZGVtby4kd2luLndpZHRoKCkgLSAkZWxlbS53aWR0aCgpICkg
LyAyIAoJCQl9KTsKCQkJcmV0dXJuIGZhbHNlOwoJCX0sCgkJLy8gbG9hZCBhIG5l
dyBkZW1vIGZvciBwcmVzZW50YXRpb24KCQlsb2FkOiBmdW5jdGlvbiggYSApewoJ
CQkvLyBtYWtlIHN1cmUgaXQgaXMgaW5pdGlhbGl6ZWQKCQkJaWYgKCAhZGVtby5y
ZWFkeSApCgkJCQlkZW1vLmluaXQoKTsKCQkJCgkJCS8vIG1ha2Ugc3VyZSB0aGUg
c3RhdGVzIGFyZSBjb3JyZWN0CgkJCWRlbW8ucmVzZXQoKTsJCgkJCS8vIHJlbG9h
ZCB0aGUgaWZyYW1lCgkJCWlmICggZGVtby5mcmFtZSApCgkJCQlkZW1vLmZyYW1l
LmxvY2F0aW9uLnJlbG9hZCgpOwoJCQkvLyBsb2FkIHRoZSBwYWdlIGNvbnRlbnQg
d2l0aCBhamF4CgkJCSQuYWpheCh7CgkJCQl0eXBlOiAncG9zdCcsCgkJCQlkYXRh
VHlwZTogInRleHQiLAoJCQkJdXJsOiBhLmhyZWYrJy9zb3VyY2UnLAoJCQkJc3Vj
Y2VzczogZGVtby5zdWNjZXNzLAoJCQkJZXJyb3I6IGRlbW8uZXJyb3IKCQkJfSk7
CgkJCS8vIHVwZGF0ZSBuZXcgd2luZG93IGxpbmsKCQkJLy9kZW1vLiRvcGVudXJs
LnRleHQoIGEuaHJlZiApOwoJCQlkZW1vLiRvcGVudXJsLmF0dHIoJ2hyZWYnLCBh
LmhyZWYgKTsKCQkJLy8gdXBkYXRlIHRoZSBudW1iZXIgZGlzcGxheS4uLgoJCQlk
ZW1vLmluZGV4ID0gZGVtby4kbGlua3MuaW5kZXgoIGEgKTsKCQkJZGVtby4kbnVt
LnRleHQoICggZGVtby5pbmRleCArIDEgKSsnLycrKCBkZW1vLmxhc3QgKyAxICkg
KTsKCQkJLy8gdXBkYXRlIHRoZSBwcmV2aW91cyBpbmRleCBhbmQgbGluawoJCQlk
ZW1vLnByZXZfaW5kZXggPSBkZW1vLmluZGV4IC0gMTsKCQkJLy8gbW9kaWZ5IGNp
cmN1bGFyIG5hdmlnYXRpb24KCQkJaWYgKCBkZW1vLnByZXZfaW5kZXggPCAwICkK
CQkJCWRlbW8ucHJldl9pbmRleCA9IGRlbW8ubGFzdDsKCQkJLy8gdXBkYXRlIHRo
ZSBwcmV2aW91cyBpbmRleCBhbmQgbGluawoJCQlkZW1vLm5leHRfaW5kZXggPSBk
ZW1vLmluZGV4ICsgMTsKCQkJLy8gbW9kaWZ5IGNpcmN1bGFyIG5hdmlnYXRpb24K
CQkJaWYgKCBkZW1vLm5leHRfaW5kZXggPiBkZW1vLmxhc3QgKQoJCQkJZGVtby5u
ZXh0X2luZGV4ID0gMDsKCQkJLy8gcmUtcG9zaXRpb24gdGhlIG92ZXJsYXkKCQkJ
ZGVtby5pc29wZW4gPSB0cnVlOwoJCQlkZW1vLnVwZGF0ZSgpOwoJCX0sCgkJLy8g
ZWRpdCB0aGUgc291cmNlIGNvZGUgb2Ygd2hhdGV2ZXIgaXMgaW4gdGhlIGlmcmFt
ZQoJCWVkaXQ6IGZ1bmN0aW9uKCl7CgkJCS8vIHdhaXQgdW50aWwgdGhlIGNvZGVt
aXJyb3IgaXMgcmVhZHkKCQkJaWYgKCBkZW1vLmNvZGVNaXJyb3JSZWFkeSApewoJ
CQkJLy8gdGhyb3cgbmV3IGNvZGUgYWdhaW5zdCB0aGUgbWlycm9yCgkJCQlkZW1v
LmNvZGVtaXJyb3Iuc2V0Q29kZSggZGVtby5zb3VyY2UgKTsKCQkJCS8vIHRvZ2ds
ZSBkaXNwbGF5cwoJCQkJZGVtby4kZWRpdG9yLnNob3coKTsKCQkJCWRlbW8uJGNv
bW1pdGxpbmsuc2hvdygpOwoJCQkJZGVtby4kZWRpdGxpbmsuaGlkZSgpOwoJCQkJ
ZGVtby4kaWZyYW1lLmhpZGUoKTsKCQkJfQoJCQlyZXR1cm4gZmFsc2U7CgkJfSwK
CQkvLyBleGVjdXRlIHRoZSBlZGl0ZWQgc291cmNlIGluIHRoZSBkZW1vIGlmcmFt
ZQoJCWNvbW1pdDogZnVuY3Rpb24oKXsKCQkJLy8gd2FpdCB1bnRpbCB0aGUgY29k
ZW1pcnJvciBpcyByZWFkeQoJCQlpZiAoIGRlbW8uY29kZU1pcnJvclJlYWR5ICl7
CgkJCQkvLyByZXNldCB0aGUgY29kZSBtaXJyb3IgaGlzdG9yeQoJCQkJZGVtby5j
b2RlbWlycm9yLmNsZWFySGlzdG9yeSgpOwoJCQkJLy8gZXh0cmFjdCB0aGUgZGVt
byBzb3VyY2UgY29kZQoJCQkJZGVtby5zb3VyY2UgPSBkZW1vLmNvZGVtaXJyb3Iu
Z2V0Q29kZSgpOwoJCQkJLy8gdGhyb3cgbmV3IGNvZGUgaW50byB0aGUgZGVtbyBm
cmFtZQoJCQkJZGVtby4kYm9keS5odG1sKCBkZW1vLnNvdXJjZSApOwoJCQkJLy8g
dG9nZ2xlIGRpc3BsYXlzCgkJCQlkZW1vLiRlZGl0b3IuaGlkZSgpOwoJCQkJZGVt
by4kY29tbWl0bGluay5oaWRlKCk7CgkJCQlkZW1vLiRlZGl0bGluay5zaG93KCk7
CgkJCQlkZW1vLiRpZnJhbWUuc2hvdygpOwoJCQl9CgkJCXJldHVybiBmYWxzZTsK
CQl9LAoJCS8vIG5vdGlmeSB3aGVuIHRoZSBkZW1vIGZyYW1lIGhhcyBjb21wbGV0
ZWx5IGxvYWRlZAoJCWxvYWRlZDogZnVuY3Rpb24oIHdpbiwgJCQgKXsKCQkJY2xl
YXJUaW1lb3V0KCBkZW1vLnRpbWVyICk7CgkJCS8vIHN0b3JlIHRoZSBpZnJhbWUn
cyBqUXVlcnkgYm9keSBpbnN0YW5jZQoJCQlkZW1vLiRib2R5ID0gJCQoJ2JvZHkn
KTsKCQkJLy8gc3RvcmUgdGhlIGlmcmFtZSdzIHdpbmRvdyBvYmplY3QKCQkJZGVt
by5mcmFtZSA9IHdpbjsKCQkJZGVtby5pc2xvYWRlZCA9IHRydWU7CgkJCWlmICgg
ZGVtby5zb3VyY2UgKSAKCQkJCWRlbW8uY29tcGxldGUoKTsKCQkJCgkJfSwKCQkv
LyBleGVjdXRlIHRoZSBsb2FkZWQgY29kZS4uLgoJCWNvbXBsZXRlOiBmdW5jdGlv
bigpewoJCQlpZiAoICFkZW1vLnNvdXJjZSB8fCAhZGVtby5pc2xvYWRlZCApIAoJ
CQkJcmV0dXJuIGRlbW8uZXJyb3IoKTsKCQkJLy8gZXhlY3V0ZSB0aGUgc291cmNl
CgkJCWRlbW8uJGJvZHkuaHRtbCggZGVtby5zb3VyY2UgKTsKCQkJLy8gc2V0IHRo
ZSBjb3JyZWN0IGRpc3BsYXlzCgkJCWRlbW8uJGlmcmFtZS5zaG93KCk7CgkJCWRl
bW8uJGVkaXRvci5oaWRlKCk7CgkJCWRlbW8uJGNvbW1pdGxpbmsuaGlkZSgpOwoJ
CQlkZW1vLiRlZGl0bGluay5zaG93KCk7CgkJCS8vIHJldmVhbCB0aGUgZGVtbyBj
b250ZW50cwoJCQlkZW1vLiRib3guc2hvdygpOwoJCQlkZW1vLiRsb2FkZXIuaGlk
ZSgpOwkKCQkJZGVtby51cGRhdGUoKTsKCQl9LAoJCS8vIGhhbmRsZSBhamF4IHN1
Y2Nlc3MgY2FsbHMKCQlzdWNjZXNzOiBmdW5jdGlvbiggdHh0ICl7CgkJCWRlbW8u
c291cmNlID0gJC50cmltKCB0eHQgKTsKCQkJaWYgKCBkZW1vLmlzbG9hZGVkICkg
CgkJCQlkZW1vLmNvbXBsZXRlKCk7CgkJfSwKCQkvLyBoYW5kbGUgbG9hZCBlcnJv
cnMKCQllcnJvcjogZnVuY3Rpb24oKXsKCQkJZGVtby4kbG9hZGVyLnRleHQoJ0xv
YWQgRXJyb3IuIFBsZWFzZSB0cnkgYWdhaW4uJykuc2hvdygpOwoJCQkvLyByZW1v
dmUgdGhlIGRlbW8gY29udGVudHMKCQkJZGVtby4kYm94LmhpZGUoKTsKCQkJZGVt
by51cGRhdGUoKTsKCQl9LAoJCS8vIHJlc2V0IHRoaW5ncyB0byB0aGUgY29ycmVj
dCBzdGF0ZQoJCXJlc2V0OiBmdW5jdGlvbigpewoJCQlkZW1vLiRib3guaGlkZSgp
OwoJCQlkZW1vLiRsb2FkZXIudGV4dCgnTG9hZGluZycpLnNob3coKTsKCQkJZGVt
by5pc29wZW4gPSBkZW1vLmlzbG9hZGVkID0gZGVtby5zb3VyY2UgPSBmYWxzZTsJ
CgkJfSwKCQkvLyBjbG9zZSB0aGUgb3ZlcmxheQoJCWNsb3NlOiBmdW5jdGlvbigp
ewoJCQkvKgoJCQkvLyByZXN0b3JlIHRoZSBwYWdlIHNjcm9sbGJhcnMKCQkJJCgn
I2V2ZXJ5dGhpbmcnKQoJCQkJLmNzcyh7IGhlaWdodDonJywgb3ZlcmZsb3c6Jycg
fSkKCQkJCS5zY3JvbGxUb3AoIDAgKS5zY3JvbGxMZWZ0KCAwICk7CgkJCS8vIHJl
c3RvcmUgdGhlIHNjcm9sbCBwb3NpdGlvbgkKCQkJZGVtby4kZG9jCQoJCQkJLnNj
cm9sbFRvcCggZGVtby5zY3JvbGwudG9wICkKCQkJCS5zY3JvbGxMZWZ0KCBkZW1v
LnNjcm9sbC5sZWZ0ICk7CgkJCQkqLwoJCQlkZW1vLiRvdmVybGF5LmhpZGUoKTsK
CQkJZGVtby5yZXNldCgpOwoJCX0KCX07Cn0pOw==

------------xTmqCi4MdczBqywUSIvdms
Content-Disposition: inline; filename=onload.js
Content-Type: application/javascript; name=onload.js
Content-Location: http://threedubmedia.com/inc/js/onload.js
Content-Transfer-Encoding: Base64

alF1ZXJ5KGZ1bmN0aW9uKCQpewoJLy8gaWRlbnRpZnkgZXh0ZXJuYWwgbGlua3MK
CSQoJyNjb250ZW50IGEuZXh0JykKCQkuYXR0cigndGl0bGUnLCdFeHRlcm5hbCBM
aW5rJykKCQkvLyBmaW5kIGludGVybmFsIGxpbmtzIHRoYXQgb3BlbiBhIG5ldyB3
aW5kb3cKCQkuYWRkKCcjY29udGVudCBhLnBvcCcpCgkJLy8uYXBwZW5kKCc8c3Bh
bj4mI3gyMTk3Ozwvc3Bhbj4nKQoJCS5iaW5kKCJjbGljayIsZnVuY3Rpb24oKXsK
CQkJd2luZG93Lm9wZW4oIHRoaXMuaHJlZiApOwoJCQlyZXR1cm4gZmFsc2U7CgkJ
fSk7CQoJLy8gdG9nZ2xlIGZpeGVkIHBvc2l0aW9uIG9mIHRoZSBzaWRlIGJhciB3
aGVuIHRoZSBkb2N1bWVudCBzY3JvbGxzCgl2YXIgJHdpbiA9ICQoIHdpbmRvdyAp
LmJpbmQoInNjcm9sbCIsZnVuY3Rpb24oKXsKCQl2YXIgdG9wID0gJGRvYy5zY3Jv
bGxUb3AoKTsKCQkkc2lkZS5zdG9wKCB0cnVlLCB0cnVlICkuYW5pbWF0ZSh7CgkJ
CSJ0b3AiOiAgdG9wIDwgc2lkZXRvcCA/IDAgOiB0b3AgLSBzaWRldG9wICsgOCAK
CQl9LCAyMDAgKTsKCX0pOwoJLy8gcmVmZXJlbmNlIHRoZSBkb2MgZm9yIGxhdGVy
CgkkZG9jID0gJCggZG9jdW1lbnQgKSwKCS8vIGxvY2F0ZSB0aGUgY29udGVudCBj
b250YWluZXIKCSRjb250ZW50ID0gJCgnI2NvbnRlbnQnKSwKCS8vIGxvY2F0ZSB0
aGUgc2lkZSBiYXIgZWxlbWVudAoJJHNpZGUgPSAkY29udGVudC5maW5kKCcuc2lk
ZScpLCAKCS8vIGxvY2F0ZSB0aGUgc3RhcnRpbmcgcG9zaXRpb24KCXNpZGV0b3Ag
PSAkc2lkZS5vZmZzZXQoKS50b3A7CgkvLyBtYWtlIHRoZSBQYWdlIENvbnRlbnRz
IGp1bXAgbGlua3Mgc2Nyb2xsCgkkY29udGVudC5maW5kKCcuanVtcCcpLmJpbmQo
ImNsaWNrIixmdW5jdGlvbigpewoJCXZhciBpZCA9IHRoaXMuaHJlZi5zcGxpdCgn
IycpLnBvcCgpOwoJCSQoJ2h0bWwnKS5zdG9wKCB0cnVlLCB0cnVlICkuYW5pbWF0
ZSh7CgkJCSJzY3JvbGxUb3AiOiBpZCA/ICQoJyMnKyBpZCApLm9mZnNldCgpLnRv
cCAtIDggOiAwCgkJfSwgODAwLCBmdW5jdGlvbigpewoJCQl3aW5kb3cubG9jYXRp
b24gPSAnIycrIGlkOwoJCX0pOwoJCXJldHVybiBmYWxzZTsKCX0pOwoJLy8gaW5p
dGlhbGl6ZSB0aGUgc2Nyb2xsZWQgc3RhdGUKCSR3aW4udHJpZ2dlckhhbmRsZXIo
InNjcm9sbCIpOwp9KTs=

------------xTmqCi4MdczBqywUSIvdms--
